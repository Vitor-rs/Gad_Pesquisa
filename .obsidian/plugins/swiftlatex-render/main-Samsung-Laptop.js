/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// node_modules/ts-md5/dist/cjs/md5.js
var require_md5 = __commonJS({
  "node_modules/ts-md5/dist/cjs/md5.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Md5 = void 0;
    var Md52 = (
      /** @class */
      function() {
        function Md53() {
          this._dataLength = 0;
          this._bufferLength = 0;
          this._state = new Int32Array(4);
          this._buffer = new ArrayBuffer(68);
          this._buffer8 = new Uint8Array(this._buffer, 0, 68);
          this._buffer32 = new Uint32Array(this._buffer, 0, 17);
          this.start();
        }
        Md53.hashStr = function(str, raw) {
          if (raw === void 0) {
            raw = false;
          }
          return this.onePassHasher.start().appendStr(str).end(raw);
        };
        Md53.hashAsciiStr = function(str, raw) {
          if (raw === void 0) {
            raw = false;
          }
          return this.onePassHasher.start().appendAsciiStr(str).end(raw);
        };
        Md53._hex = function(x) {
          var hc = Md53.hexChars;
          var ho = Md53.hexOut;
          var n;
          var offset;
          var j;
          var i;
          for (i = 0; i < 4; i += 1) {
            offset = i * 8;
            n = x[i];
            for (j = 0; j < 8; j += 2) {
              ho[offset + 1 + j] = hc.charAt(n & 15);
              n >>>= 4;
              ho[offset + 0 + j] = hc.charAt(n & 15);
              n >>>= 4;
            }
          }
          return ho.join("");
        };
        Md53._md5cycle = function(x, k) {
          var a = x[0];
          var b = x[1];
          var c = x[2];
          var d = x[3];
          a += (b & c | ~b & d) + k[0] - 680876936 | 0;
          a = (a << 7 | a >>> 25) + b | 0;
          d += (a & b | ~a & c) + k[1] - 389564586 | 0;
          d = (d << 12 | d >>> 20) + a | 0;
          c += (d & a | ~d & b) + k[2] + 606105819 | 0;
          c = (c << 17 | c >>> 15) + d | 0;
          b += (c & d | ~c & a) + k[3] - 1044525330 | 0;
          b = (b << 22 | b >>> 10) + c | 0;
          a += (b & c | ~b & d) + k[4] - 176418897 | 0;
          a = (a << 7 | a >>> 25) + b | 0;
          d += (a & b | ~a & c) + k[5] + 1200080426 | 0;
          d = (d << 12 | d >>> 20) + a | 0;
          c += (d & a | ~d & b) + k[6] - 1473231341 | 0;
          c = (c << 17 | c >>> 15) + d | 0;
          b += (c & d | ~c & a) + k[7] - 45705983 | 0;
          b = (b << 22 | b >>> 10) + c | 0;
          a += (b & c | ~b & d) + k[8] + 1770035416 | 0;
          a = (a << 7 | a >>> 25) + b | 0;
          d += (a & b | ~a & c) + k[9] - 1958414417 | 0;
          d = (d << 12 | d >>> 20) + a | 0;
          c += (d & a | ~d & b) + k[10] - 42063 | 0;
          c = (c << 17 | c >>> 15) + d | 0;
          b += (c & d | ~c & a) + k[11] - 1990404162 | 0;
          b = (b << 22 | b >>> 10) + c | 0;
          a += (b & c | ~b & d) + k[12] + 1804603682 | 0;
          a = (a << 7 | a >>> 25) + b | 0;
          d += (a & b | ~a & c) + k[13] - 40341101 | 0;
          d = (d << 12 | d >>> 20) + a | 0;
          c += (d & a | ~d & b) + k[14] - 1502002290 | 0;
          c = (c << 17 | c >>> 15) + d | 0;
          b += (c & d | ~c & a) + k[15] + 1236535329 | 0;
          b = (b << 22 | b >>> 10) + c | 0;
          a += (b & d | c & ~d) + k[1] - 165796510 | 0;
          a = (a << 5 | a >>> 27) + b | 0;
          d += (a & c | b & ~c) + k[6] - 1069501632 | 0;
          d = (d << 9 | d >>> 23) + a | 0;
          c += (d & b | a & ~b) + k[11] + 643717713 | 0;
          c = (c << 14 | c >>> 18) + d | 0;
          b += (c & a | d & ~a) + k[0] - 373897302 | 0;
          b = (b << 20 | b >>> 12) + c | 0;
          a += (b & d | c & ~d) + k[5] - 701558691 | 0;
          a = (a << 5 | a >>> 27) + b | 0;
          d += (a & c | b & ~c) + k[10] + 38016083 | 0;
          d = (d << 9 | d >>> 23) + a | 0;
          c += (d & b | a & ~b) + k[15] - 660478335 | 0;
          c = (c << 14 | c >>> 18) + d | 0;
          b += (c & a | d & ~a) + k[4] - 405537848 | 0;
          b = (b << 20 | b >>> 12) + c | 0;
          a += (b & d | c & ~d) + k[9] + 568446438 | 0;
          a = (a << 5 | a >>> 27) + b | 0;
          d += (a & c | b & ~c) + k[14] - 1019803690 | 0;
          d = (d << 9 | d >>> 23) + a | 0;
          c += (d & b | a & ~b) + k[3] - 187363961 | 0;
          c = (c << 14 | c >>> 18) + d | 0;
          b += (c & a | d & ~a) + k[8] + 1163531501 | 0;
          b = (b << 20 | b >>> 12) + c | 0;
          a += (b & d | c & ~d) + k[13] - 1444681467 | 0;
          a = (a << 5 | a >>> 27) + b | 0;
          d += (a & c | b & ~c) + k[2] - 51403784 | 0;
          d = (d << 9 | d >>> 23) + a | 0;
          c += (d & b | a & ~b) + k[7] + 1735328473 | 0;
          c = (c << 14 | c >>> 18) + d | 0;
          b += (c & a | d & ~a) + k[12] - 1926607734 | 0;
          b = (b << 20 | b >>> 12) + c | 0;
          a += (b ^ c ^ d) + k[5] - 378558 | 0;
          a = (a << 4 | a >>> 28) + b | 0;
          d += (a ^ b ^ c) + k[8] - 2022574463 | 0;
          d = (d << 11 | d >>> 21) + a | 0;
          c += (d ^ a ^ b) + k[11] + 1839030562 | 0;
          c = (c << 16 | c >>> 16) + d | 0;
          b += (c ^ d ^ a) + k[14] - 35309556 | 0;
          b = (b << 23 | b >>> 9) + c | 0;
          a += (b ^ c ^ d) + k[1] - 1530992060 | 0;
          a = (a << 4 | a >>> 28) + b | 0;
          d += (a ^ b ^ c) + k[4] + 1272893353 | 0;
          d = (d << 11 | d >>> 21) + a | 0;
          c += (d ^ a ^ b) + k[7] - 155497632 | 0;
          c = (c << 16 | c >>> 16) + d | 0;
          b += (c ^ d ^ a) + k[10] - 1094730640 | 0;
          b = (b << 23 | b >>> 9) + c | 0;
          a += (b ^ c ^ d) + k[13] + 681279174 | 0;
          a = (a << 4 | a >>> 28) + b | 0;
          d += (a ^ b ^ c) + k[0] - 358537222 | 0;
          d = (d << 11 | d >>> 21) + a | 0;
          c += (d ^ a ^ b) + k[3] - 722521979 | 0;
          c = (c << 16 | c >>> 16) + d | 0;
          b += (c ^ d ^ a) + k[6] + 76029189 | 0;
          b = (b << 23 | b >>> 9) + c | 0;
          a += (b ^ c ^ d) + k[9] - 640364487 | 0;
          a = (a << 4 | a >>> 28) + b | 0;
          d += (a ^ b ^ c) + k[12] - 421815835 | 0;
          d = (d << 11 | d >>> 21) + a | 0;
          c += (d ^ a ^ b) + k[15] + 530742520 | 0;
          c = (c << 16 | c >>> 16) + d | 0;
          b += (c ^ d ^ a) + k[2] - 995338651 | 0;
          b = (b << 23 | b >>> 9) + c | 0;
          a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;
          a = (a << 6 | a >>> 26) + b | 0;
          d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;
          d = (d << 10 | d >>> 22) + a | 0;
          c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;
          c = (c << 15 | c >>> 17) + d | 0;
          b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;
          b = (b << 21 | b >>> 11) + c | 0;
          a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;
          a = (a << 6 | a >>> 26) + b | 0;
          d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;
          d = (d << 10 | d >>> 22) + a | 0;
          c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;
          c = (c << 15 | c >>> 17) + d | 0;
          b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;
          b = (b << 21 | b >>> 11) + c | 0;
          a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;
          a = (a << 6 | a >>> 26) + b | 0;
          d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;
          d = (d << 10 | d >>> 22) + a | 0;
          c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;
          c = (c << 15 | c >>> 17) + d | 0;
          b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;
          b = (b << 21 | b >>> 11) + c | 0;
          a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;
          a = (a << 6 | a >>> 26) + b | 0;
          d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;
          d = (d << 10 | d >>> 22) + a | 0;
          c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;
          c = (c << 15 | c >>> 17) + d | 0;
          b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;
          b = (b << 21 | b >>> 11) + c | 0;
          x[0] = a + x[0] | 0;
          x[1] = b + x[1] | 0;
          x[2] = c + x[2] | 0;
          x[3] = d + x[3] | 0;
        };
        Md53.prototype.start = function() {
          this._dataLength = 0;
          this._bufferLength = 0;
          this._state.set(Md53.stateIdentity);
          return this;
        };
        Md53.prototype.appendStr = function(str) {
          var buf8 = this._buffer8;
          var buf32 = this._buffer32;
          var bufLen = this._bufferLength;
          var code;
          var i;
          for (i = 0; i < str.length; i += 1) {
            code = str.charCodeAt(i);
            if (code < 128) {
              buf8[bufLen++] = code;
            } else if (code < 2048) {
              buf8[bufLen++] = (code >>> 6) + 192;
              buf8[bufLen++] = code & 63 | 128;
            } else if (code < 55296 || code > 56319) {
              buf8[bufLen++] = (code >>> 12) + 224;
              buf8[bufLen++] = code >>> 6 & 63 | 128;
              buf8[bufLen++] = code & 63 | 128;
            } else {
              code = (code - 55296) * 1024 + (str.charCodeAt(++i) - 56320) + 65536;
              if (code > 1114111) {
                throw new Error("Unicode standard supports code points up to U+10FFFF");
              }
              buf8[bufLen++] = (code >>> 18) + 240;
              buf8[bufLen++] = code >>> 12 & 63 | 128;
              buf8[bufLen++] = code >>> 6 & 63 | 128;
              buf8[bufLen++] = code & 63 | 128;
            }
            if (bufLen >= 64) {
              this._dataLength += 64;
              Md53._md5cycle(this._state, buf32);
              bufLen -= 64;
              buf32[0] = buf32[16];
            }
          }
          this._bufferLength = bufLen;
          return this;
        };
        Md53.prototype.appendAsciiStr = function(str) {
          var buf8 = this._buffer8;
          var buf32 = this._buffer32;
          var bufLen = this._bufferLength;
          var i;
          var j = 0;
          for (; ; ) {
            i = Math.min(str.length - j, 64 - bufLen);
            while (i--) {
              buf8[bufLen++] = str.charCodeAt(j++);
            }
            if (bufLen < 64) {
              break;
            }
            this._dataLength += 64;
            Md53._md5cycle(this._state, buf32);
            bufLen = 0;
          }
          this._bufferLength = bufLen;
          return this;
        };
        Md53.prototype.appendByteArray = function(input) {
          var buf8 = this._buffer8;
          var buf32 = this._buffer32;
          var bufLen = this._bufferLength;
          var i;
          var j = 0;
          for (; ; ) {
            i = Math.min(input.length - j, 64 - bufLen);
            while (i--) {
              buf8[bufLen++] = input[j++];
            }
            if (bufLen < 64) {
              break;
            }
            this._dataLength += 64;
            Md53._md5cycle(this._state, buf32);
            bufLen = 0;
          }
          this._bufferLength = bufLen;
          return this;
        };
        Md53.prototype.getState = function() {
          var s = this._state;
          return {
            buffer: String.fromCharCode.apply(null, Array.from(this._buffer8)),
            buflen: this._bufferLength,
            length: this._dataLength,
            state: [s[0], s[1], s[2], s[3]]
          };
        };
        Md53.prototype.setState = function(state) {
          var buf = state.buffer;
          var x = state.state;
          var s = this._state;
          var i;
          this._dataLength = state.length;
          this._bufferLength = state.buflen;
          s[0] = x[0];
          s[1] = x[1];
          s[2] = x[2];
          s[3] = x[3];
          for (i = 0; i < buf.length; i += 1) {
            this._buffer8[i] = buf.charCodeAt(i);
          }
        };
        Md53.prototype.end = function(raw) {
          if (raw === void 0) {
            raw = false;
          }
          var bufLen = this._bufferLength;
          var buf8 = this._buffer8;
          var buf32 = this._buffer32;
          var i = (bufLen >> 2) + 1;
          this._dataLength += bufLen;
          var dataBitsLen = this._dataLength * 8;
          buf8[bufLen] = 128;
          buf8[bufLen + 1] = buf8[bufLen + 2] = buf8[bufLen + 3] = 0;
          buf32.set(Md53.buffer32Identity.subarray(i), i);
          if (bufLen > 55) {
            Md53._md5cycle(this._state, buf32);
            buf32.set(Md53.buffer32Identity);
          }
          if (dataBitsLen <= 4294967295) {
            buf32[14] = dataBitsLen;
          } else {
            var matches = dataBitsLen.toString(16).match(/(.*?)(.{0,8})$/);
            if (matches === null) {
              return;
            }
            var lo = parseInt(matches[2], 16);
            var hi = parseInt(matches[1], 16) || 0;
            buf32[14] = lo;
            buf32[15] = hi;
          }
          Md53._md5cycle(this._state, buf32);
          return raw ? this._state : Md53._hex(this._state);
        };
        Md53.stateIdentity = new Int32Array([1732584193, -271733879, -1732584194, 271733878]);
        Md53.buffer32Identity = new Int32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
        Md53.hexChars = "0123456789abcdef";
        Md53.hexOut = [];
        Md53.onePassHasher = new Md53();
        return Md53;
      }()
    );
    exports.Md5 = Md52;
    if (Md52.hashStr("hello") !== "5d41402abc4b2a76b9719d911017c592") {
      throw new Error("Md5 self test failed.");
    }
  }
});

// node_modules/ts-md5/dist/cjs/md5_file_hasher.js
var require_md5_file_hasher = __commonJS({
  "node_modules/ts-md5/dist/cjs/md5_file_hasher.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Md5FileHasher = void 0;
    var md5_1 = require_md5();
    var Md5FileHasher = (
      /** @class */
      function() {
        function Md5FileHasher2(_callback, _async, _partSize) {
          if (_async === void 0) {
            _async = true;
          }
          if (_partSize === void 0) {
            _partSize = 1048576;
          }
          this._callback = _callback;
          this._async = _async;
          this._partSize = _partSize;
          this._configureReader();
        }
        Md5FileHasher2.prototype.hash = function(blob) {
          var self = this;
          self._blob = blob;
          self._part = 0;
          self._md5 = new md5_1.Md5();
          self._processPart();
        };
        Md5FileHasher2.prototype._fail = function() {
          this._callback({
            success: false,
            result: "data read failed"
          });
        };
        Md5FileHasher2.prototype._hashData = function(e) {
          var self = this;
          self._md5.appendByteArray(new Uint8Array(e.target.result));
          if (self._part * self._partSize >= self._blob.size) {
            self._callback({
              success: true,
              result: self._md5.end()
            });
          } else {
            self._processPart();
          }
        };
        Md5FileHasher2.prototype._processPart = function() {
          var self = this;
          var endbyte = 0;
          var current_part;
          self._part += 1;
          if (self._blob.size > self._partSize) {
            endbyte = self._part * self._partSize;
            if (endbyte > self._blob.size) {
              endbyte = self._blob.size;
            }
            current_part = self._blob.slice((self._part - 1) * self._partSize, endbyte);
          } else {
            current_part = self._blob;
          }
          if (self._async) {
            self._reader.readAsArrayBuffer(current_part);
          } else {
            setTimeout(function() {
              try {
                self._hashData({
                  target: {
                    result: self._reader.readAsArrayBuffer(current_part)
                  }
                });
              } catch (e) {
                self._fail();
              }
            }, 0);
          }
        };
        Md5FileHasher2.prototype._configureReader = function() {
          var self = this;
          if (self._async) {
            self._reader = new FileReader();
            self._reader.onload = self._hashData.bind(self);
            self._reader.onerror = self._fail.bind(self);
            self._reader.onabort = self._fail.bind(self);
          } else {
            self._reader = new FileReaderSync();
          }
        };
        return Md5FileHasher2;
      }()
    );
    exports.Md5FileHasher = Md5FileHasher;
  }
});

// node_modules/ts-md5/dist/cjs/parallel_hasher.js
var require_parallel_hasher = __commonJS({
  "node_modules/ts-md5/dist/cjs/parallel_hasher.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ParallelHasher = void 0;
    var ParallelHasher = (
      /** @class */
      function() {
        function ParallelHasher2(workerUri, workerOptions) {
          this._queue = [];
          this._ready = true;
          var self = this;
          if (Worker) {
            self._hashWorker = new Worker(workerUri, workerOptions);
            self._hashWorker.onmessage = self._recievedMessage.bind(self);
            self._hashWorker.onerror = function(err) {
              self._ready = false;
              console.error("Hash worker failure", err);
            };
          } else {
            self._ready = false;
            console.error("Web Workers are not supported in this browser");
          }
        }
        ParallelHasher2.prototype.hash = function(blob) {
          var self = this;
          var promise;
          promise = new Promise(function(resolve, reject) {
            self._queue.push({
              blob,
              resolve,
              reject
            });
            self._processNext();
          });
          return promise;
        };
        ParallelHasher2.prototype.terminate = function() {
          this._ready = false;
          this._hashWorker.terminate();
        };
        ParallelHasher2.prototype._processNext = function() {
          if (this._ready && !this._processing && this._queue.length > 0) {
            this._processing = this._queue.pop();
            this._hashWorker.postMessage(this._processing.blob);
          }
        };
        ParallelHasher2.prototype._recievedMessage = function(evt) {
          var _a, _b;
          var data = evt.data;
          if (data.success) {
            (_a = this._processing) === null || _a === void 0 ? void 0 : _a.resolve(data.result);
          } else {
            (_b = this._processing) === null || _b === void 0 ? void 0 : _b.reject(data.result);
          }
          this._processing = void 0;
          this._processNext();
        };
        return ParallelHasher2;
      }()
    );
    exports.ParallelHasher = ParallelHasher;
  }
});

// node_modules/ts-md5/dist/cjs/index.js
var require_cjs = __commonJS({
  "node_modules/ts-md5/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ParallelHasher = exports.Md5FileHasher = exports.Md5 = void 0;
    var md5_1 = require_md5();
    Object.defineProperty(exports, "Md5", { enumerable: true, get: function() {
      return md5_1.Md5;
    } });
    var md5_file_hasher_1 = require_md5_file_hasher();
    Object.defineProperty(exports, "Md5FileHasher", { enumerable: true, get: function() {
      return md5_file_hasher_1.Md5FileHasher;
    } });
    var parallel_hasher_1 = require_parallel_hasher();
    Object.defineProperty(exports, "ParallelHasher", { enumerable: true, get: function() {
      return parallel_hasher_1.ParallelHasher;
    } });
  }
});

// node_modules/fs.realpath/old.js
var require_old = __commonJS({
  "node_modules/fs.realpath/old.js"(exports) {
    var pathModule = require("path");
    var isWindows = process.platform === "win32";
    var fs2 = require("fs");
    var DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);
    function rethrow() {
      var callback;
      if (DEBUG) {
        var backtrace = new Error();
        callback = debugCallback;
      } else
        callback = missingCallback;
      return callback;
      function debugCallback(err) {
        if (err) {
          backtrace.message = err.message;
          err = backtrace;
          missingCallback(err);
        }
      }
      function missingCallback(err) {
        if (err) {
          if (process.throwDeprecation)
            throw err;
          else if (!process.noDeprecation) {
            var msg = "fs: missing callback " + (err.stack || err.message);
            if (process.traceDeprecation)
              console.trace(msg);
            else
              console.error(msg);
          }
        }
      }
    }
    function maybeCallback(cb) {
      return typeof cb === "function" ? cb : rethrow();
    }
    var normalize = pathModule.normalize;
    if (isWindows) {
      nextPartRe = /(.*?)(?:[\/\\]+|$)/g;
    } else {
      nextPartRe = /(.*?)(?:[\/]+|$)/g;
    }
    var nextPartRe;
    if (isWindows) {
      splitRootRe = /^(?:[a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/][^\\\/]+)?[\\\/]*/;
    } else {
      splitRootRe = /^[\/]*/;
    }
    var splitRootRe;
    exports.realpathSync = function realpathSync(p, cache) {
      p = pathModule.resolve(p);
      if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {
        return cache[p];
      }
      var original = p, seenLinks = {}, knownHard = {};
      var pos;
      var current;
      var base;
      var previous;
      start();
      function start() {
        var m = splitRootRe.exec(p);
        pos = m[0].length;
        current = m[0];
        base = m[0];
        previous = "";
        if (isWindows && !knownHard[base]) {
          fs2.lstatSync(base);
          knownHard[base] = true;
        }
      }
      while (pos < p.length) {
        nextPartRe.lastIndex = pos;
        var result = nextPartRe.exec(p);
        previous = current;
        current += result[0];
        base = previous + result[1];
        pos = nextPartRe.lastIndex;
        if (knownHard[base] || cache && cache[base] === base) {
          continue;
        }
        var resolvedLink;
        if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {
          resolvedLink = cache[base];
        } else {
          var stat = fs2.lstatSync(base);
          if (!stat.isSymbolicLink()) {
            knownHard[base] = true;
            if (cache)
              cache[base] = base;
            continue;
          }
          var linkTarget = null;
          if (!isWindows) {
            var id = stat.dev.toString(32) + ":" + stat.ino.toString(32);
            if (seenLinks.hasOwnProperty(id)) {
              linkTarget = seenLinks[id];
            }
          }
          if (linkTarget === null) {
            fs2.statSync(base);
            linkTarget = fs2.readlinkSync(base);
          }
          resolvedLink = pathModule.resolve(previous, linkTarget);
          if (cache)
            cache[base] = resolvedLink;
          if (!isWindows)
            seenLinks[id] = linkTarget;
        }
        p = pathModule.resolve(resolvedLink, p.slice(pos));
        start();
      }
      if (cache)
        cache[original] = p;
      return p;
    };
    exports.realpath = function realpath(p, cache, cb) {
      if (typeof cb !== "function") {
        cb = maybeCallback(cache);
        cache = null;
      }
      p = pathModule.resolve(p);
      if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {
        return process.nextTick(cb.bind(null, null, cache[p]));
      }
      var original = p, seenLinks = {}, knownHard = {};
      var pos;
      var current;
      var base;
      var previous;
      start();
      function start() {
        var m = splitRootRe.exec(p);
        pos = m[0].length;
        current = m[0];
        base = m[0];
        previous = "";
        if (isWindows && !knownHard[base]) {
          fs2.lstat(base, function(err) {
            if (err)
              return cb(err);
            knownHard[base] = true;
            LOOP();
          });
        } else {
          process.nextTick(LOOP);
        }
      }
      function LOOP() {
        if (pos >= p.length) {
          if (cache)
            cache[original] = p;
          return cb(null, p);
        }
        nextPartRe.lastIndex = pos;
        var result = nextPartRe.exec(p);
        previous = current;
        current += result[0];
        base = previous + result[1];
        pos = nextPartRe.lastIndex;
        if (knownHard[base] || cache && cache[base] === base) {
          return process.nextTick(LOOP);
        }
        if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {
          return gotResolvedLink(cache[base]);
        }
        return fs2.lstat(base, gotStat);
      }
      function gotStat(err, stat) {
        if (err)
          return cb(err);
        if (!stat.isSymbolicLink()) {
          knownHard[base] = true;
          if (cache)
            cache[base] = base;
          return process.nextTick(LOOP);
        }
        if (!isWindows) {
          var id = stat.dev.toString(32) + ":" + stat.ino.toString(32);
          if (seenLinks.hasOwnProperty(id)) {
            return gotTarget(null, seenLinks[id], base);
          }
        }
        fs2.stat(base, function(err2) {
          if (err2)
            return cb(err2);
          fs2.readlink(base, function(err3, target) {
            if (!isWindows)
              seenLinks[id] = target;
            gotTarget(err3, target);
          });
        });
      }
      function gotTarget(err, target, base2) {
        if (err)
          return cb(err);
        var resolvedLink = pathModule.resolve(previous, target);
        if (cache)
          cache[base2] = resolvedLink;
        gotResolvedLink(resolvedLink);
      }
      function gotResolvedLink(resolvedLink) {
        p = pathModule.resolve(resolvedLink, p.slice(pos));
        start();
      }
    };
  }
});

// node_modules/fs.realpath/index.js
var require_fs = __commonJS({
  "node_modules/fs.realpath/index.js"(exports, module2) {
    module2.exports = realpath;
    realpath.realpath = realpath;
    realpath.sync = realpathSync;
    realpath.realpathSync = realpathSync;
    realpath.monkeypatch = monkeypatch;
    realpath.unmonkeypatch = unmonkeypatch;
    var fs2 = require("fs");
    var origRealpath = fs2.realpath;
    var origRealpathSync = fs2.realpathSync;
    var version = process.version;
    var ok = /^v[0-5]\./.test(version);
    var old = require_old();
    function newError(er) {
      return er && er.syscall === "realpath" && (er.code === "ELOOP" || er.code === "ENOMEM" || er.code === "ENAMETOOLONG");
    }
    function realpath(p, cache, cb) {
      if (ok) {
        return origRealpath(p, cache, cb);
      }
      if (typeof cache === "function") {
        cb = cache;
        cache = null;
      }
      origRealpath(p, cache, function(er, result) {
        if (newError(er)) {
          old.realpath(p, cache, cb);
        } else {
          cb(er, result);
        }
      });
    }
    function realpathSync(p, cache) {
      if (ok) {
        return origRealpathSync(p, cache);
      }
      try {
        return origRealpathSync(p, cache);
      } catch (er) {
        if (newError(er)) {
          return old.realpathSync(p, cache);
        } else {
          throw er;
        }
      }
    }
    function monkeypatch() {
      fs2.realpath = realpath;
      fs2.realpathSync = realpathSync;
    }
    function unmonkeypatch() {
      fs2.realpath = origRealpath;
      fs2.realpathSync = origRealpathSync;
    }
  }
});

// node_modules/concat-map/index.js
var require_concat_map = __commonJS({
  "node_modules/concat-map/index.js"(exports, module2) {
    module2.exports = function(xs, fn) {
      var res = [];
      for (var i = 0; i < xs.length; i++) {
        var x = fn(xs[i], i);
        if (isArray(x))
          res.push.apply(res, x);
        else
          res.push(x);
      }
      return res;
    };
    var isArray = Array.isArray || function(xs) {
      return Object.prototype.toString.call(xs) === "[object Array]";
    };
  }
});

// node_modules/balanced-match/index.js
var require_balanced_match = __commonJS({
  "node_modules/balanced-match/index.js"(exports, module2) {
    "use strict";
    module2.exports = balanced;
    function balanced(a, b, str) {
      if (a instanceof RegExp)
        a = maybeMatch(a, str);
      if (b instanceof RegExp)
        b = maybeMatch(b, str);
      var r = range(a, b, str);
      return r && {
        start: r[0],
        end: r[1],
        pre: str.slice(0, r[0]),
        body: str.slice(r[0] + a.length, r[1]),
        post: str.slice(r[1] + b.length)
      };
    }
    function maybeMatch(reg, str) {
      var m = str.match(reg);
      return m ? m[0] : null;
    }
    balanced.range = range;
    function range(a, b, str) {
      var begs, beg, left, right, result;
      var ai = str.indexOf(a);
      var bi = str.indexOf(b, ai + 1);
      var i = ai;
      if (ai >= 0 && bi > 0) {
        if (a === b) {
          return [ai, bi];
        }
        begs = [];
        left = str.length;
        while (i >= 0 && !result) {
          if (i == ai) {
            begs.push(i);
            ai = str.indexOf(a, i + 1);
          } else if (begs.length == 1) {
            result = [begs.pop(), bi];
          } else {
            beg = begs.pop();
            if (beg < left) {
              left = beg;
              right = bi;
            }
            bi = str.indexOf(b, i + 1);
          }
          i = ai < bi && ai >= 0 ? ai : bi;
        }
        if (begs.length) {
          result = [left, right];
        }
      }
      return result;
    }
  }
});

// node_modules/brace-expansion/index.js
var require_brace_expansion = __commonJS({
  "node_modules/brace-expansion/index.js"(exports, module2) {
    var concatMap = require_concat_map();
    var balanced = require_balanced_match();
    module2.exports = expandTop;
    var escSlash = "\0SLASH" + Math.random() + "\0";
    var escOpen = "\0OPEN" + Math.random() + "\0";
    var escClose = "\0CLOSE" + Math.random() + "\0";
    var escComma = "\0COMMA" + Math.random() + "\0";
    var escPeriod = "\0PERIOD" + Math.random() + "\0";
    function numeric(str) {
      return parseInt(str, 10) == str ? parseInt(str, 10) : str.charCodeAt(0);
    }
    function escapeBraces(str) {
      return str.split("\\\\").join(escSlash).split("\\{").join(escOpen).split("\\}").join(escClose).split("\\,").join(escComma).split("\\.").join(escPeriod);
    }
    function unescapeBraces(str) {
      return str.split(escSlash).join("\\").split(escOpen).join("{").split(escClose).join("}").split(escComma).join(",").split(escPeriod).join(".");
    }
    function parseCommaParts(str) {
      if (!str)
        return [""];
      var parts = [];
      var m = balanced("{", "}", str);
      if (!m)
        return str.split(",");
      var pre = m.pre;
      var body = m.body;
      var post = m.post;
      var p = pre.split(",");
      p[p.length - 1] += "{" + body + "}";
      var postParts = parseCommaParts(post);
      if (post.length) {
        p[p.length - 1] += postParts.shift();
        p.push.apply(p, postParts);
      }
      parts.push.apply(parts, p);
      return parts;
    }
    function expandTop(str) {
      if (!str)
        return [];
      if (str.substr(0, 2) === "{}") {
        str = "\\{\\}" + str.substr(2);
      }
      return expand(escapeBraces(str), true).map(unescapeBraces);
    }
    function embrace(str) {
      return "{" + str + "}";
    }
    function isPadded(el) {
      return /^-?0\d/.test(el);
    }
    function lte(i, y) {
      return i <= y;
    }
    function gte(i, y) {
      return i >= y;
    }
    function expand(str, isTop) {
      var expansions = [];
      var m = balanced("{", "}", str);
      if (!m || /\$$/.test(m.pre))
        return [str];
      var isNumericSequence = /^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(m.body);
      var isAlphaSequence = /^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(m.body);
      var isSequence = isNumericSequence || isAlphaSequence;
      var isOptions = m.body.indexOf(",") >= 0;
      if (!isSequence && !isOptions) {
        if (m.post.match(/,.*\}/)) {
          str = m.pre + "{" + m.body + escClose + m.post;
          return expand(str);
        }
        return [str];
      }
      var n;
      if (isSequence) {
        n = m.body.split(/\.\./);
      } else {
        n = parseCommaParts(m.body);
        if (n.length === 1) {
          n = expand(n[0], false).map(embrace);
          if (n.length === 1) {
            var post = m.post.length ? expand(m.post, false) : [""];
            return post.map(function(p) {
              return m.pre + n[0] + p;
            });
          }
        }
      }
      var pre = m.pre;
      var post = m.post.length ? expand(m.post, false) : [""];
      var N;
      if (isSequence) {
        var x = numeric(n[0]);
        var y = numeric(n[1]);
        var width = Math.max(n[0].length, n[1].length);
        var incr = n.length == 3 ? Math.abs(numeric(n[2])) : 1;
        var test = lte;
        var reverse = y < x;
        if (reverse) {
          incr *= -1;
          test = gte;
        }
        var pad = n.some(isPadded);
        N = [];
        for (var i = x; test(i, y); i += incr) {
          var c;
          if (isAlphaSequence) {
            c = String.fromCharCode(i);
            if (c === "\\")
              c = "";
          } else {
            c = String(i);
            if (pad) {
              var need = width - c.length;
              if (need > 0) {
                var z = new Array(need + 1).join("0");
                if (i < 0)
                  c = "-" + z + c.slice(1);
                else
                  c = z + c;
              }
            }
          }
          N.push(c);
        }
      } else {
        N = concatMap(n, function(el) {
          return expand(el, false);
        });
      }
      for (var j = 0; j < N.length; j++) {
        for (var k = 0; k < post.length; k++) {
          var expansion = pre + N[j] + post[k];
          if (!isTop || isSequence || expansion)
            expansions.push(expansion);
        }
      }
      return expansions;
    }
  }
});

// node_modules/minimatch/minimatch.js
var require_minimatch = __commonJS({
  "node_modules/minimatch/minimatch.js"(exports, module2) {
    module2.exports = minimatch;
    minimatch.Minimatch = Minimatch;
    var path2 = function() {
      try {
        return require("path");
      } catch (e) {
      }
    }() || {
      sep: "/"
    };
    minimatch.sep = path2.sep;
    var GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {};
    var expand = require_brace_expansion();
    var plTypes = {
      "!": { open: "(?:(?!(?:", close: "))[^/]*?)" },
      "?": { open: "(?:", close: ")?" },
      "+": { open: "(?:", close: ")+" },
      "*": { open: "(?:", close: ")*" },
      "@": { open: "(?:", close: ")" }
    };
    var qmark = "[^/]";
    var star = qmark + "*?";
    var twoStarDot = "(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?";
    var twoStarNoDot = "(?:(?!(?:\\/|^)\\.).)*?";
    var reSpecials = charSet("().*{}+?[]^$\\!");
    function charSet(s) {
      return s.split("").reduce(function(set, c) {
        set[c] = true;
        return set;
      }, {});
    }
    var slashSplit = /\/+/;
    minimatch.filter = filter;
    function filter(pattern, options) {
      options = options || {};
      return function(p, i, list) {
        return minimatch(p, pattern, options);
      };
    }
    function ext(a, b) {
      b = b || {};
      var t = {};
      Object.keys(a).forEach(function(k) {
        t[k] = a[k];
      });
      Object.keys(b).forEach(function(k) {
        t[k] = b[k];
      });
      return t;
    }
    minimatch.defaults = function(def) {
      if (!def || typeof def !== "object" || !Object.keys(def).length) {
        return minimatch;
      }
      var orig = minimatch;
      var m = function minimatch2(p, pattern, options) {
        return orig(p, pattern, ext(def, options));
      };
      m.Minimatch = function Minimatch2(pattern, options) {
        return new orig.Minimatch(pattern, ext(def, options));
      };
      m.Minimatch.defaults = function defaults(options) {
        return orig.defaults(ext(def, options)).Minimatch;
      };
      m.filter = function filter2(pattern, options) {
        return orig.filter(pattern, ext(def, options));
      };
      m.defaults = function defaults(options) {
        return orig.defaults(ext(def, options));
      };
      m.makeRe = function makeRe2(pattern, options) {
        return orig.makeRe(pattern, ext(def, options));
      };
      m.braceExpand = function braceExpand2(pattern, options) {
        return orig.braceExpand(pattern, ext(def, options));
      };
      m.match = function(list, pattern, options) {
        return orig.match(list, pattern, ext(def, options));
      };
      return m;
    };
    Minimatch.defaults = function(def) {
      return minimatch.defaults(def).Minimatch;
    };
    function minimatch(p, pattern, options) {
      assertValidPattern(pattern);
      if (!options)
        options = {};
      if (!options.nocomment && pattern.charAt(0) === "#") {
        return false;
      }
      return new Minimatch(pattern, options).match(p);
    }
    function Minimatch(pattern, options) {
      if (!(this instanceof Minimatch)) {
        return new Minimatch(pattern, options);
      }
      assertValidPattern(pattern);
      if (!options)
        options = {};
      pattern = pattern.trim();
      if (!options.allowWindowsEscape && path2.sep !== "/") {
        pattern = pattern.split(path2.sep).join("/");
      }
      this.options = options;
      this.set = [];
      this.pattern = pattern;
      this.regexp = null;
      this.negate = false;
      this.comment = false;
      this.empty = false;
      this.partial = !!options.partial;
      this.make();
    }
    Minimatch.prototype.debug = function() {
    };
    Minimatch.prototype.make = make;
    function make() {
      var pattern = this.pattern;
      var options = this.options;
      if (!options.nocomment && pattern.charAt(0) === "#") {
        this.comment = true;
        return;
      }
      if (!pattern) {
        this.empty = true;
        return;
      }
      this.parseNegate();
      var set = this.globSet = this.braceExpand();
      if (options.debug)
        this.debug = function debug() {
          console.error.apply(console, arguments);
        };
      this.debug(this.pattern, set);
      set = this.globParts = set.map(function(s) {
        return s.split(slashSplit);
      });
      this.debug(this.pattern, set);
      set = set.map(function(s, si, set2) {
        return s.map(this.parse, this);
      }, this);
      this.debug(this.pattern, set);
      set = set.filter(function(s) {
        return s.indexOf(false) === -1;
      });
      this.debug(this.pattern, set);
      this.set = set;
    }
    Minimatch.prototype.parseNegate = parseNegate;
    function parseNegate() {
      var pattern = this.pattern;
      var negate = false;
      var options = this.options;
      var negateOffset = 0;
      if (options.nonegate)
        return;
      for (var i = 0, l = pattern.length; i < l && pattern.charAt(i) === "!"; i++) {
        negate = !negate;
        negateOffset++;
      }
      if (negateOffset)
        this.pattern = pattern.substr(negateOffset);
      this.negate = negate;
    }
    minimatch.braceExpand = function(pattern, options) {
      return braceExpand(pattern, options);
    };
    Minimatch.prototype.braceExpand = braceExpand;
    function braceExpand(pattern, options) {
      if (!options) {
        if (this instanceof Minimatch) {
          options = this.options;
        } else {
          options = {};
        }
      }
      pattern = typeof pattern === "undefined" ? this.pattern : pattern;
      assertValidPattern(pattern);
      if (options.nobrace || !/\{(?:(?!\{).)*\}/.test(pattern)) {
        return [pattern];
      }
      return expand(pattern);
    }
    var MAX_PATTERN_LENGTH = 1024 * 64;
    var assertValidPattern = function(pattern) {
      if (typeof pattern !== "string") {
        throw new TypeError("invalid pattern");
      }
      if (pattern.length > MAX_PATTERN_LENGTH) {
        throw new TypeError("pattern is too long");
      }
    };
    Minimatch.prototype.parse = parse;
    var SUBPARSE = {};
    function parse(pattern, isSub) {
      assertValidPattern(pattern);
      var options = this.options;
      if (pattern === "**") {
        if (!options.noglobstar)
          return GLOBSTAR;
        else
          pattern = "*";
      }
      if (pattern === "")
        return "";
      var re = "";
      var hasMagic = !!options.nocase;
      var escaping = false;
      var patternListStack = [];
      var negativeLists = [];
      var stateChar;
      var inClass = false;
      var reClassStart = -1;
      var classStart = -1;
      var patternStart = pattern.charAt(0) === "." ? "" : options.dot ? "(?!(?:^|\\/)\\.{1,2}(?:$|\\/))" : "(?!\\.)";
      var self = this;
      function clearStateChar() {
        if (stateChar) {
          switch (stateChar) {
            case "*":
              re += star;
              hasMagic = true;
              break;
            case "?":
              re += qmark;
              hasMagic = true;
              break;
            default:
              re += "\\" + stateChar;
              break;
          }
          self.debug("clearStateChar %j %j", stateChar, re);
          stateChar = false;
        }
      }
      for (var i = 0, len = pattern.length, c; i < len && (c = pattern.charAt(i)); i++) {
        this.debug("%s	%s %s %j", pattern, i, re, c);
        if (escaping && reSpecials[c]) {
          re += "\\" + c;
          escaping = false;
          continue;
        }
        switch (c) {
          case "/": {
            return false;
          }
          case "\\":
            clearStateChar();
            escaping = true;
            continue;
          case "?":
          case "*":
          case "+":
          case "@":
          case "!":
            this.debug("%s	%s %s %j <-- stateChar", pattern, i, re, c);
            if (inClass) {
              this.debug("  in class");
              if (c === "!" && i === classStart + 1)
                c = "^";
              re += c;
              continue;
            }
            self.debug("call clearStateChar %j", stateChar);
            clearStateChar();
            stateChar = c;
            if (options.noext)
              clearStateChar();
            continue;
          case "(":
            if (inClass) {
              re += "(";
              continue;
            }
            if (!stateChar) {
              re += "\\(";
              continue;
            }
            patternListStack.push({
              type: stateChar,
              start: i - 1,
              reStart: re.length,
              open: plTypes[stateChar].open,
              close: plTypes[stateChar].close
            });
            re += stateChar === "!" ? "(?:(?!(?:" : "(?:";
            this.debug("plType %j %j", stateChar, re);
            stateChar = false;
            continue;
          case ")":
            if (inClass || !patternListStack.length) {
              re += "\\)";
              continue;
            }
            clearStateChar();
            hasMagic = true;
            var pl = patternListStack.pop();
            re += pl.close;
            if (pl.type === "!") {
              negativeLists.push(pl);
            }
            pl.reEnd = re.length;
            continue;
          case "|":
            if (inClass || !patternListStack.length || escaping) {
              re += "\\|";
              escaping = false;
              continue;
            }
            clearStateChar();
            re += "|";
            continue;
          case "[":
            clearStateChar();
            if (inClass) {
              re += "\\" + c;
              continue;
            }
            inClass = true;
            classStart = i;
            reClassStart = re.length;
            re += c;
            continue;
          case "]":
            if (i === classStart + 1 || !inClass) {
              re += "\\" + c;
              escaping = false;
              continue;
            }
            var cs = pattern.substring(classStart + 1, i);
            try {
              RegExp("[" + cs + "]");
            } catch (er) {
              var sp = this.parse(cs, SUBPARSE);
              re = re.substr(0, reClassStart) + "\\[" + sp[0] + "\\]";
              hasMagic = hasMagic || sp[1];
              inClass = false;
              continue;
            }
            hasMagic = true;
            inClass = false;
            re += c;
            continue;
          default:
            clearStateChar();
            if (escaping) {
              escaping = false;
            } else if (reSpecials[c] && !(c === "^" && inClass)) {
              re += "\\";
            }
            re += c;
        }
      }
      if (inClass) {
        cs = pattern.substr(classStart + 1);
        sp = this.parse(cs, SUBPARSE);
        re = re.substr(0, reClassStart) + "\\[" + sp[0];
        hasMagic = hasMagic || sp[1];
      }
      for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {
        var tail = re.slice(pl.reStart + pl.open.length);
        this.debug("setting tail", re, pl);
        tail = tail.replace(/((?:\\{2}){0,64})(\\?)\|/g, function(_, $1, $2) {
          if (!$2) {
            $2 = "\\";
          }
          return $1 + $1 + $2 + "|";
        });
        this.debug("tail=%j\n   %s", tail, tail, pl, re);
        var t = pl.type === "*" ? star : pl.type === "?" ? qmark : "\\" + pl.type;
        hasMagic = true;
        re = re.slice(0, pl.reStart) + t + "\\(" + tail;
      }
      clearStateChar();
      if (escaping) {
        re += "\\\\";
      }
      var addPatternStart = false;
      switch (re.charAt(0)) {
        case "[":
        case ".":
        case "(":
          addPatternStart = true;
      }
      for (var n = negativeLists.length - 1; n > -1; n--) {
        var nl = negativeLists[n];
        var nlBefore = re.slice(0, nl.reStart);
        var nlFirst = re.slice(nl.reStart, nl.reEnd - 8);
        var nlLast = re.slice(nl.reEnd - 8, nl.reEnd);
        var nlAfter = re.slice(nl.reEnd);
        nlLast += nlAfter;
        var openParensBefore = nlBefore.split("(").length - 1;
        var cleanAfter = nlAfter;
        for (i = 0; i < openParensBefore; i++) {
          cleanAfter = cleanAfter.replace(/\)[+*?]?/, "");
        }
        nlAfter = cleanAfter;
        var dollar = "";
        if (nlAfter === "" && isSub !== SUBPARSE) {
          dollar = "$";
        }
        var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast;
        re = newRe;
      }
      if (re !== "" && hasMagic) {
        re = "(?=.)" + re;
      }
      if (addPatternStart) {
        re = patternStart + re;
      }
      if (isSub === SUBPARSE) {
        return [re, hasMagic];
      }
      if (!hasMagic) {
        return globUnescape(pattern);
      }
      var flags = options.nocase ? "i" : "";
      try {
        var regExp = new RegExp("^" + re + "$", flags);
      } catch (er) {
        return new RegExp("$.");
      }
      regExp._glob = pattern;
      regExp._src = re;
      return regExp;
    }
    minimatch.makeRe = function(pattern, options) {
      return new Minimatch(pattern, options || {}).makeRe();
    };
    Minimatch.prototype.makeRe = makeRe;
    function makeRe() {
      if (this.regexp || this.regexp === false)
        return this.regexp;
      var set = this.set;
      if (!set.length) {
        this.regexp = false;
        return this.regexp;
      }
      var options = this.options;
      var twoStar = options.noglobstar ? star : options.dot ? twoStarDot : twoStarNoDot;
      var flags = options.nocase ? "i" : "";
      var re = set.map(function(pattern) {
        return pattern.map(function(p) {
          return p === GLOBSTAR ? twoStar : typeof p === "string" ? regExpEscape(p) : p._src;
        }).join("\\/");
      }).join("|");
      re = "^(?:" + re + ")$";
      if (this.negate)
        re = "^(?!" + re + ").*$";
      try {
        this.regexp = new RegExp(re, flags);
      } catch (ex) {
        this.regexp = false;
      }
      return this.regexp;
    }
    minimatch.match = function(list, pattern, options) {
      options = options || {};
      var mm = new Minimatch(pattern, options);
      list = list.filter(function(f) {
        return mm.match(f);
      });
      if (mm.options.nonull && !list.length) {
        list.push(pattern);
      }
      return list;
    };
    Minimatch.prototype.match = function match(f, partial) {
      if (typeof partial === "undefined")
        partial = this.partial;
      this.debug("match", f, this.pattern);
      if (this.comment)
        return false;
      if (this.empty)
        return f === "";
      if (f === "/" && partial)
        return true;
      var options = this.options;
      if (path2.sep !== "/") {
        f = f.split(path2.sep).join("/");
      }
      f = f.split(slashSplit);
      this.debug(this.pattern, "split", f);
      var set = this.set;
      this.debug(this.pattern, "set", set);
      var filename;
      var i;
      for (i = f.length - 1; i >= 0; i--) {
        filename = f[i];
        if (filename)
          break;
      }
      for (i = 0; i < set.length; i++) {
        var pattern = set[i];
        var file = f;
        if (options.matchBase && pattern.length === 1) {
          file = [filename];
        }
        var hit = this.matchOne(file, pattern, partial);
        if (hit) {
          if (options.flipNegate)
            return true;
          return !this.negate;
        }
      }
      if (options.flipNegate)
        return false;
      return this.negate;
    };
    Minimatch.prototype.matchOne = function(file, pattern, partial) {
      var options = this.options;
      this.debug(
        "matchOne",
        { "this": this, file, pattern }
      );
      this.debug("matchOne", file.length, pattern.length);
      for (var fi = 0, pi = 0, fl = file.length, pl = pattern.length; fi < fl && pi < pl; fi++, pi++) {
        this.debug("matchOne loop");
        var p = pattern[pi];
        var f = file[fi];
        this.debug(pattern, p, f);
        if (p === false)
          return false;
        if (p === GLOBSTAR) {
          this.debug("GLOBSTAR", [pattern, p, f]);
          var fr = fi;
          var pr = pi + 1;
          if (pr === pl) {
            this.debug("** at the end");
            for (; fi < fl; fi++) {
              if (file[fi] === "." || file[fi] === ".." || !options.dot && file[fi].charAt(0) === ".")
                return false;
            }
            return true;
          }
          while (fr < fl) {
            var swallowee = file[fr];
            this.debug("\nglobstar while", file, fr, pattern, pr, swallowee);
            if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {
              this.debug("globstar found match!", fr, fl, swallowee);
              return true;
            } else {
              if (swallowee === "." || swallowee === ".." || !options.dot && swallowee.charAt(0) === ".") {
                this.debug("dot detected!", file, fr, pattern, pr);
                break;
              }
              this.debug("globstar swallow a segment, and continue");
              fr++;
            }
          }
          if (partial) {
            this.debug("\n>>> no match, partial?", file, fr, pattern, pr);
            if (fr === fl)
              return true;
          }
          return false;
        }
        var hit;
        if (typeof p === "string") {
          hit = f === p;
          this.debug("string match", p, f, hit);
        } else {
          hit = f.match(p);
          this.debug("pattern match", p, f, hit);
        }
        if (!hit)
          return false;
      }
      if (fi === fl && pi === pl) {
        return true;
      } else if (fi === fl) {
        return partial;
      } else if (pi === pl) {
        return fi === fl - 1 && file[fi] === "";
      }
      throw new Error("wtf?");
    };
    function globUnescape(s) {
      return s.replace(/\\(.)/g, "$1");
    }
    function regExpEscape(s) {
      return s.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
    }
  }
});

// node_modules/inherits/inherits_browser.js
var require_inherits_browser = __commonJS({
  "node_modules/inherits/inherits_browser.js"(exports, module2) {
    if (typeof Object.create === "function") {
      module2.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          ctor.prototype = Object.create(superCtor.prototype, {
            constructor: {
              value: ctor,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
        }
      };
    } else {
      module2.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function() {
          };
          TempCtor.prototype = superCtor.prototype;
          ctor.prototype = new TempCtor();
          ctor.prototype.constructor = ctor;
        }
      };
    }
  }
});

// node_modules/inherits/inherits.js
var require_inherits = __commonJS({
  "node_modules/inherits/inherits.js"(exports, module2) {
    try {
      util = require("util");
      if (typeof util.inherits !== "function")
        throw "";
      module2.exports = util.inherits;
    } catch (e) {
      module2.exports = require_inherits_browser();
    }
    var util;
  }
});

// node_modules/path-is-absolute/index.js
var require_path_is_absolute = __commonJS({
  "node_modules/path-is-absolute/index.js"(exports, module2) {
    "use strict";
    function posix(path2) {
      return path2.charAt(0) === "/";
    }
    function win32(path2) {
      var splitDeviceRe = /^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/;
      var result = splitDeviceRe.exec(path2);
      var device = result[1] || "";
      var isUnc = Boolean(device && device.charAt(1) !== ":");
      return Boolean(result[2] || isUnc);
    }
    module2.exports = process.platform === "win32" ? win32 : posix;
    module2.exports.posix = posix;
    module2.exports.win32 = win32;
  }
});

// node_modules/glob/common.js
var require_common = __commonJS({
  "node_modules/glob/common.js"(exports) {
    exports.setopts = setopts;
    exports.ownProp = ownProp;
    exports.makeAbs = makeAbs;
    exports.finish = finish;
    exports.mark = mark;
    exports.isIgnored = isIgnored;
    exports.childrenIgnored = childrenIgnored;
    function ownProp(obj, field) {
      return Object.prototype.hasOwnProperty.call(obj, field);
    }
    var fs2 = require("fs");
    var path2 = require("path");
    var minimatch = require_minimatch();
    var isAbsolute = require_path_is_absolute();
    var Minimatch = minimatch.Minimatch;
    function alphasort(a, b) {
      return a.localeCompare(b, "en");
    }
    function setupIgnores(self, options) {
      self.ignore = options.ignore || [];
      if (!Array.isArray(self.ignore))
        self.ignore = [self.ignore];
      if (self.ignore.length) {
        self.ignore = self.ignore.map(ignoreMap);
      }
    }
    function ignoreMap(pattern) {
      var gmatcher = null;
      if (pattern.slice(-3) === "/**") {
        var gpattern = pattern.replace(/(\/\*\*)+$/, "");
        gmatcher = new Minimatch(gpattern, { dot: true });
      }
      return {
        matcher: new Minimatch(pattern, { dot: true }),
        gmatcher
      };
    }
    function setopts(self, pattern, options) {
      if (!options)
        options = {};
      if (options.matchBase && -1 === pattern.indexOf("/")) {
        if (options.noglobstar) {
          throw new Error("base matching requires globstar");
        }
        pattern = "**/" + pattern;
      }
      self.silent = !!options.silent;
      self.pattern = pattern;
      self.strict = options.strict !== false;
      self.realpath = !!options.realpath;
      self.realpathCache = options.realpathCache || /* @__PURE__ */ Object.create(null);
      self.follow = !!options.follow;
      self.dot = !!options.dot;
      self.mark = !!options.mark;
      self.nodir = !!options.nodir;
      if (self.nodir)
        self.mark = true;
      self.sync = !!options.sync;
      self.nounique = !!options.nounique;
      self.nonull = !!options.nonull;
      self.nosort = !!options.nosort;
      self.nocase = !!options.nocase;
      self.stat = !!options.stat;
      self.noprocess = !!options.noprocess;
      self.absolute = !!options.absolute;
      self.fs = options.fs || fs2;
      self.maxLength = options.maxLength || Infinity;
      self.cache = options.cache || /* @__PURE__ */ Object.create(null);
      self.statCache = options.statCache || /* @__PURE__ */ Object.create(null);
      self.symlinks = options.symlinks || /* @__PURE__ */ Object.create(null);
      setupIgnores(self, options);
      self.changedCwd = false;
      var cwd = process.cwd();
      if (!ownProp(options, "cwd"))
        self.cwd = cwd;
      else {
        self.cwd = path2.resolve(options.cwd);
        self.changedCwd = self.cwd !== cwd;
      }
      self.root = options.root || path2.resolve(self.cwd, "/");
      self.root = path2.resolve(self.root);
      if (process.platform === "win32")
        self.root = self.root.replace(/\\/g, "/");
      self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd);
      if (process.platform === "win32")
        self.cwdAbs = self.cwdAbs.replace(/\\/g, "/");
      self.nomount = !!options.nomount;
      options.nonegate = true;
      options.nocomment = true;
      options.allowWindowsEscape = false;
      self.minimatch = new Minimatch(pattern, options);
      self.options = self.minimatch.options;
    }
    function finish(self) {
      var nou = self.nounique;
      var all = nou ? [] : /* @__PURE__ */ Object.create(null);
      for (var i = 0, l = self.matches.length; i < l; i++) {
        var matches = self.matches[i];
        if (!matches || Object.keys(matches).length === 0) {
          if (self.nonull) {
            var literal = self.minimatch.globSet[i];
            if (nou)
              all.push(literal);
            else
              all[literal] = true;
          }
        } else {
          var m = Object.keys(matches);
          if (nou)
            all.push.apply(all, m);
          else
            m.forEach(function(m2) {
              all[m2] = true;
            });
        }
      }
      if (!nou)
        all = Object.keys(all);
      if (!self.nosort)
        all = all.sort(alphasort);
      if (self.mark) {
        for (var i = 0; i < all.length; i++) {
          all[i] = self._mark(all[i]);
        }
        if (self.nodir) {
          all = all.filter(function(e) {
            var notDir = !/\/$/.test(e);
            var c = self.cache[e] || self.cache[makeAbs(self, e)];
            if (notDir && c)
              notDir = c !== "DIR" && !Array.isArray(c);
            return notDir;
          });
        }
      }
      if (self.ignore.length)
        all = all.filter(function(m2) {
          return !isIgnored(self, m2);
        });
      self.found = all;
    }
    function mark(self, p) {
      var abs = makeAbs(self, p);
      var c = self.cache[abs];
      var m = p;
      if (c) {
        var isDir = c === "DIR" || Array.isArray(c);
        var slash = p.slice(-1) === "/";
        if (isDir && !slash)
          m += "/";
        else if (!isDir && slash)
          m = m.slice(0, -1);
        if (m !== p) {
          var mabs = makeAbs(self, m);
          self.statCache[mabs] = self.statCache[abs];
          self.cache[mabs] = self.cache[abs];
        }
      }
      return m;
    }
    function makeAbs(self, f) {
      var abs = f;
      if (f.charAt(0) === "/") {
        abs = path2.join(self.root, f);
      } else if (isAbsolute(f) || f === "") {
        abs = f;
      } else if (self.changedCwd) {
        abs = path2.resolve(self.cwd, f);
      } else {
        abs = path2.resolve(f);
      }
      if (process.platform === "win32")
        abs = abs.replace(/\\/g, "/");
      return abs;
    }
    function isIgnored(self, path3) {
      if (!self.ignore.length)
        return false;
      return self.ignore.some(function(item) {
        return item.matcher.match(path3) || !!(item.gmatcher && item.gmatcher.match(path3));
      });
    }
    function childrenIgnored(self, path3) {
      if (!self.ignore.length)
        return false;
      return self.ignore.some(function(item) {
        return !!(item.gmatcher && item.gmatcher.match(path3));
      });
    }
  }
});

// node_modules/glob/sync.js
var require_sync = __commonJS({
  "node_modules/glob/sync.js"(exports, module2) {
    module2.exports = globSync;
    globSync.GlobSync = GlobSync;
    var rp = require_fs();
    var minimatch = require_minimatch();
    var Minimatch = minimatch.Minimatch;
    var Glob = require_glob().Glob;
    var util = require("util");
    var path2 = require("path");
    var assert = require("assert");
    var isAbsolute = require_path_is_absolute();
    var common = require_common();
    var setopts = common.setopts;
    var ownProp = common.ownProp;
    var childrenIgnored = common.childrenIgnored;
    var isIgnored = common.isIgnored;
    function globSync(pattern, options) {
      if (typeof options === "function" || arguments.length === 3)
        throw new TypeError("callback provided to sync glob\nSee: https://github.com/isaacs/node-glob/issues/167");
      return new GlobSync(pattern, options).found;
    }
    function GlobSync(pattern, options) {
      if (!pattern)
        throw new Error("must provide pattern");
      if (typeof options === "function" || arguments.length === 3)
        throw new TypeError("callback provided to sync glob\nSee: https://github.com/isaacs/node-glob/issues/167");
      if (!(this instanceof GlobSync))
        return new GlobSync(pattern, options);
      setopts(this, pattern, options);
      if (this.noprocess)
        return this;
      var n = this.minimatch.set.length;
      this.matches = new Array(n);
      for (var i = 0; i < n; i++) {
        this._process(this.minimatch.set[i], i, false);
      }
      this._finish();
    }
    GlobSync.prototype._finish = function() {
      assert.ok(this instanceof GlobSync);
      if (this.realpath) {
        var self = this;
        this.matches.forEach(function(matchset, index) {
          var set = self.matches[index] = /* @__PURE__ */ Object.create(null);
          for (var p in matchset) {
            try {
              p = self._makeAbs(p);
              var real = rp.realpathSync(p, self.realpathCache);
              set[real] = true;
            } catch (er) {
              if (er.syscall === "stat")
                set[self._makeAbs(p)] = true;
              else
                throw er;
            }
          }
        });
      }
      common.finish(this);
    };
    GlobSync.prototype._process = function(pattern, index, inGlobStar) {
      assert.ok(this instanceof GlobSync);
      var n = 0;
      while (typeof pattern[n] === "string") {
        n++;
      }
      var prefix;
      switch (n) {
        case pattern.length:
          this._processSimple(pattern.join("/"), index);
          return;
        case 0:
          prefix = null;
          break;
        default:
          prefix = pattern.slice(0, n).join("/");
          break;
      }
      var remain = pattern.slice(n);
      var read;
      if (prefix === null)
        read = ".";
      else if (isAbsolute(prefix) || isAbsolute(pattern.map(function(p) {
        return typeof p === "string" ? p : "[*]";
      }).join("/"))) {
        if (!prefix || !isAbsolute(prefix))
          prefix = "/" + prefix;
        read = prefix;
      } else
        read = prefix;
      var abs = this._makeAbs(read);
      if (childrenIgnored(this, read))
        return;
      var isGlobStar = remain[0] === minimatch.GLOBSTAR;
      if (isGlobStar)
        this._processGlobStar(prefix, read, abs, remain, index, inGlobStar);
      else
        this._processReaddir(prefix, read, abs, remain, index, inGlobStar);
    };
    GlobSync.prototype._processReaddir = function(prefix, read, abs, remain, index, inGlobStar) {
      var entries = this._readdir(abs, inGlobStar);
      if (!entries)
        return;
      var pn = remain[0];
      var negate = !!this.minimatch.negate;
      var rawGlob = pn._glob;
      var dotOk = this.dot || rawGlob.charAt(0) === ".";
      var matchedEntries = [];
      for (var i = 0; i < entries.length; i++) {
        var e = entries[i];
        if (e.charAt(0) !== "." || dotOk) {
          var m;
          if (negate && !prefix) {
            m = !e.match(pn);
          } else {
            m = e.match(pn);
          }
          if (m)
            matchedEntries.push(e);
        }
      }
      var len = matchedEntries.length;
      if (len === 0)
        return;
      if (remain.length === 1 && !this.mark && !this.stat) {
        if (!this.matches[index])
          this.matches[index] = /* @__PURE__ */ Object.create(null);
        for (var i = 0; i < len; i++) {
          var e = matchedEntries[i];
          if (prefix) {
            if (prefix.slice(-1) !== "/")
              e = prefix + "/" + e;
            else
              e = prefix + e;
          }
          if (e.charAt(0) === "/" && !this.nomount) {
            e = path2.join(this.root, e);
          }
          this._emitMatch(index, e);
        }
        return;
      }
      remain.shift();
      for (var i = 0; i < len; i++) {
        var e = matchedEntries[i];
        var newPattern;
        if (prefix)
          newPattern = [prefix, e];
        else
          newPattern = [e];
        this._process(newPattern.concat(remain), index, inGlobStar);
      }
    };
    GlobSync.prototype._emitMatch = function(index, e) {
      if (isIgnored(this, e))
        return;
      var abs = this._makeAbs(e);
      if (this.mark)
        e = this._mark(e);
      if (this.absolute) {
        e = abs;
      }
      if (this.matches[index][e])
        return;
      if (this.nodir) {
        var c = this.cache[abs];
        if (c === "DIR" || Array.isArray(c))
          return;
      }
      this.matches[index][e] = true;
      if (this.stat)
        this._stat(e);
    };
    GlobSync.prototype._readdirInGlobStar = function(abs) {
      if (this.follow)
        return this._readdir(abs, false);
      var entries;
      var lstat;
      var stat;
      try {
        lstat = this.fs.lstatSync(abs);
      } catch (er) {
        if (er.code === "ENOENT") {
          return null;
        }
      }
      var isSym = lstat && lstat.isSymbolicLink();
      this.symlinks[abs] = isSym;
      if (!isSym && lstat && !lstat.isDirectory())
        this.cache[abs] = "FILE";
      else
        entries = this._readdir(abs, false);
      return entries;
    };
    GlobSync.prototype._readdir = function(abs, inGlobStar) {
      var entries;
      if (inGlobStar && !ownProp(this.symlinks, abs))
        return this._readdirInGlobStar(abs);
      if (ownProp(this.cache, abs)) {
        var c = this.cache[abs];
        if (!c || c === "FILE")
          return null;
        if (Array.isArray(c))
          return c;
      }
      try {
        return this._readdirEntries(abs, this.fs.readdirSync(abs));
      } catch (er) {
        this._readdirError(abs, er);
        return null;
      }
    };
    GlobSync.prototype._readdirEntries = function(abs, entries) {
      if (!this.mark && !this.stat) {
        for (var i = 0; i < entries.length; i++) {
          var e = entries[i];
          if (abs === "/")
            e = abs + e;
          else
            e = abs + "/" + e;
          this.cache[e] = true;
        }
      }
      this.cache[abs] = entries;
      return entries;
    };
    GlobSync.prototype._readdirError = function(f, er) {
      switch (er.code) {
        case "ENOTSUP":
        case "ENOTDIR":
          var abs = this._makeAbs(f);
          this.cache[abs] = "FILE";
          if (abs === this.cwdAbs) {
            var error = new Error(er.code + " invalid cwd " + this.cwd);
            error.path = this.cwd;
            error.code = er.code;
            throw error;
          }
          break;
        case "ENOENT":
        case "ELOOP":
        case "ENAMETOOLONG":
        case "UNKNOWN":
          this.cache[this._makeAbs(f)] = false;
          break;
        default:
          this.cache[this._makeAbs(f)] = false;
          if (this.strict)
            throw er;
          if (!this.silent)
            console.error("glob error", er);
          break;
      }
    };
    GlobSync.prototype._processGlobStar = function(prefix, read, abs, remain, index, inGlobStar) {
      var entries = this._readdir(abs, inGlobStar);
      if (!entries)
        return;
      var remainWithoutGlobStar = remain.slice(1);
      var gspref = prefix ? [prefix] : [];
      var noGlobStar = gspref.concat(remainWithoutGlobStar);
      this._process(noGlobStar, index, false);
      var len = entries.length;
      var isSym = this.symlinks[abs];
      if (isSym && inGlobStar)
        return;
      for (var i = 0; i < len; i++) {
        var e = entries[i];
        if (e.charAt(0) === "." && !this.dot)
          continue;
        var instead = gspref.concat(entries[i], remainWithoutGlobStar);
        this._process(instead, index, true);
        var below = gspref.concat(entries[i], remain);
        this._process(below, index, true);
      }
    };
    GlobSync.prototype._processSimple = function(prefix, index) {
      var exists = this._stat(prefix);
      if (!this.matches[index])
        this.matches[index] = /* @__PURE__ */ Object.create(null);
      if (!exists)
        return;
      if (prefix && isAbsolute(prefix) && !this.nomount) {
        var trail = /[\/\\]$/.test(prefix);
        if (prefix.charAt(0) === "/") {
          prefix = path2.join(this.root, prefix);
        } else {
          prefix = path2.resolve(this.root, prefix);
          if (trail)
            prefix += "/";
        }
      }
      if (process.platform === "win32")
        prefix = prefix.replace(/\\/g, "/");
      this._emitMatch(index, prefix);
    };
    GlobSync.prototype._stat = function(f) {
      var abs = this._makeAbs(f);
      var needDir = f.slice(-1) === "/";
      if (f.length > this.maxLength)
        return false;
      if (!this.stat && ownProp(this.cache, abs)) {
        var c = this.cache[abs];
        if (Array.isArray(c))
          c = "DIR";
        if (!needDir || c === "DIR")
          return c;
        if (needDir && c === "FILE")
          return false;
      }
      var exists;
      var stat = this.statCache[abs];
      if (!stat) {
        var lstat;
        try {
          lstat = this.fs.lstatSync(abs);
        } catch (er) {
          if (er && (er.code === "ENOENT" || er.code === "ENOTDIR")) {
            this.statCache[abs] = false;
            return false;
          }
        }
        if (lstat && lstat.isSymbolicLink()) {
          try {
            stat = this.fs.statSync(abs);
          } catch (er) {
            stat = lstat;
          }
        } else {
          stat = lstat;
        }
      }
      this.statCache[abs] = stat;
      var c = true;
      if (stat)
        c = stat.isDirectory() ? "DIR" : "FILE";
      this.cache[abs] = this.cache[abs] || c;
      if (needDir && c === "FILE")
        return false;
      return c;
    };
    GlobSync.prototype._mark = function(p) {
      return common.mark(this, p);
    };
    GlobSync.prototype._makeAbs = function(f) {
      return common.makeAbs(this, f);
    };
  }
});

// node_modules/wrappy/wrappy.js
var require_wrappy = __commonJS({
  "node_modules/wrappy/wrappy.js"(exports, module2) {
    module2.exports = wrappy;
    function wrappy(fn, cb) {
      if (fn && cb)
        return wrappy(fn)(cb);
      if (typeof fn !== "function")
        throw new TypeError("need wrapper function");
      Object.keys(fn).forEach(function(k) {
        wrapper[k] = fn[k];
      });
      return wrapper;
      function wrapper() {
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i];
        }
        var ret = fn.apply(this, args);
        var cb2 = args[args.length - 1];
        if (typeof ret === "function" && ret !== cb2) {
          Object.keys(cb2).forEach(function(k) {
            ret[k] = cb2[k];
          });
        }
        return ret;
      }
    }
  }
});

// node_modules/once/once.js
var require_once = __commonJS({
  "node_modules/once/once.js"(exports, module2) {
    var wrappy = require_wrappy();
    module2.exports = wrappy(once);
    module2.exports.strict = wrappy(onceStrict);
    once.proto = once(function() {
      Object.defineProperty(Function.prototype, "once", {
        value: function() {
          return once(this);
        },
        configurable: true
      });
      Object.defineProperty(Function.prototype, "onceStrict", {
        value: function() {
          return onceStrict(this);
        },
        configurable: true
      });
    });
    function once(fn) {
      var f = function() {
        if (f.called)
          return f.value;
        f.called = true;
        return f.value = fn.apply(this, arguments);
      };
      f.called = false;
      return f;
    }
    function onceStrict(fn) {
      var f = function() {
        if (f.called)
          throw new Error(f.onceError);
        f.called = true;
        return f.value = fn.apply(this, arguments);
      };
      var name = fn.name || "Function wrapped with `once`";
      f.onceError = name + " shouldn't be called more than once";
      f.called = false;
      return f;
    }
  }
});

// node_modules/inflight/inflight.js
var require_inflight = __commonJS({
  "node_modules/inflight/inflight.js"(exports, module2) {
    var wrappy = require_wrappy();
    var reqs = /* @__PURE__ */ Object.create(null);
    var once = require_once();
    module2.exports = wrappy(inflight);
    function inflight(key, cb) {
      if (reqs[key]) {
        reqs[key].push(cb);
        return null;
      } else {
        reqs[key] = [cb];
        return makeres(key);
      }
    }
    function makeres(key) {
      return once(function RES() {
        var cbs = reqs[key];
        var len = cbs.length;
        var args = slice(arguments);
        try {
          for (var i = 0; i < len; i++) {
            cbs[i].apply(null, args);
          }
        } finally {
          if (cbs.length > len) {
            cbs.splice(0, len);
            process.nextTick(function() {
              RES.apply(null, args);
            });
          } else {
            delete reqs[key];
          }
        }
      });
    }
    function slice(args) {
      var length = args.length;
      var array = [];
      for (var i = 0; i < length; i++)
        array[i] = args[i];
      return array;
    }
  }
});

// node_modules/glob/glob.js
var require_glob = __commonJS({
  "node_modules/glob/glob.js"(exports, module2) {
    module2.exports = glob;
    var rp = require_fs();
    var minimatch = require_minimatch();
    var Minimatch = minimatch.Minimatch;
    var inherits = require_inherits();
    var EE = require("events").EventEmitter;
    var path2 = require("path");
    var assert = require("assert");
    var isAbsolute = require_path_is_absolute();
    var globSync = require_sync();
    var common = require_common();
    var setopts = common.setopts;
    var ownProp = common.ownProp;
    var inflight = require_inflight();
    var util = require("util");
    var childrenIgnored = common.childrenIgnored;
    var isIgnored = common.isIgnored;
    var once = require_once();
    function glob(pattern, options, cb) {
      if (typeof options === "function")
        cb = options, options = {};
      if (!options)
        options = {};
      if (options.sync) {
        if (cb)
          throw new TypeError("callback provided to sync glob");
        return globSync(pattern, options);
      }
      return new Glob(pattern, options, cb);
    }
    glob.sync = globSync;
    var GlobSync = glob.GlobSync = globSync.GlobSync;
    glob.glob = glob;
    function extend(origin, add) {
      if (add === null || typeof add !== "object") {
        return origin;
      }
      var keys = Object.keys(add);
      var i = keys.length;
      while (i--) {
        origin[keys[i]] = add[keys[i]];
      }
      return origin;
    }
    glob.hasMagic = function(pattern, options_) {
      var options = extend({}, options_);
      options.noprocess = true;
      var g = new Glob(pattern, options);
      var set = g.minimatch.set;
      if (!pattern)
        return false;
      if (set.length > 1)
        return true;
      for (var j = 0; j < set[0].length; j++) {
        if (typeof set[0][j] !== "string")
          return true;
      }
      return false;
    };
    glob.Glob = Glob;
    inherits(Glob, EE);
    function Glob(pattern, options, cb) {
      if (typeof options === "function") {
        cb = options;
        options = null;
      }
      if (options && options.sync) {
        if (cb)
          throw new TypeError("callback provided to sync glob");
        return new GlobSync(pattern, options);
      }
      if (!(this instanceof Glob))
        return new Glob(pattern, options, cb);
      setopts(this, pattern, options);
      this._didRealPath = false;
      var n = this.minimatch.set.length;
      this.matches = new Array(n);
      if (typeof cb === "function") {
        cb = once(cb);
        this.on("error", cb);
        this.on("end", function(matches) {
          cb(null, matches);
        });
      }
      var self = this;
      this._processing = 0;
      this._emitQueue = [];
      this._processQueue = [];
      this.paused = false;
      if (this.noprocess)
        return this;
      if (n === 0)
        return done();
      var sync = true;
      for (var i = 0; i < n; i++) {
        this._process(this.minimatch.set[i], i, false, done);
      }
      sync = false;
      function done() {
        --self._processing;
        if (self._processing <= 0) {
          if (sync) {
            process.nextTick(function() {
              self._finish();
            });
          } else {
            self._finish();
          }
        }
      }
    }
    Glob.prototype._finish = function() {
      assert(this instanceof Glob);
      if (this.aborted)
        return;
      if (this.realpath && !this._didRealpath)
        return this._realpath();
      common.finish(this);
      this.emit("end", this.found);
    };
    Glob.prototype._realpath = function() {
      if (this._didRealpath)
        return;
      this._didRealpath = true;
      var n = this.matches.length;
      if (n === 0)
        return this._finish();
      var self = this;
      for (var i = 0; i < this.matches.length; i++)
        this._realpathSet(i, next);
      function next() {
        if (--n === 0)
          self._finish();
      }
    };
    Glob.prototype._realpathSet = function(index, cb) {
      var matchset = this.matches[index];
      if (!matchset)
        return cb();
      var found = Object.keys(matchset);
      var self = this;
      var n = found.length;
      if (n === 0)
        return cb();
      var set = this.matches[index] = /* @__PURE__ */ Object.create(null);
      found.forEach(function(p, i) {
        p = self._makeAbs(p);
        rp.realpath(p, self.realpathCache, function(er, real) {
          if (!er)
            set[real] = true;
          else if (er.syscall === "stat")
            set[p] = true;
          else
            self.emit("error", er);
          if (--n === 0) {
            self.matches[index] = set;
            cb();
          }
        });
      });
    };
    Glob.prototype._mark = function(p) {
      return common.mark(this, p);
    };
    Glob.prototype._makeAbs = function(f) {
      return common.makeAbs(this, f);
    };
    Glob.prototype.abort = function() {
      this.aborted = true;
      this.emit("abort");
    };
    Glob.prototype.pause = function() {
      if (!this.paused) {
        this.paused = true;
        this.emit("pause");
      }
    };
    Glob.prototype.resume = function() {
      if (this.paused) {
        this.emit("resume");
        this.paused = false;
        if (this._emitQueue.length) {
          var eq = this._emitQueue.slice(0);
          this._emitQueue.length = 0;
          for (var i = 0; i < eq.length; i++) {
            var e = eq[i];
            this._emitMatch(e[0], e[1]);
          }
        }
        if (this._processQueue.length) {
          var pq = this._processQueue.slice(0);
          this._processQueue.length = 0;
          for (var i = 0; i < pq.length; i++) {
            var p = pq[i];
            this._processing--;
            this._process(p[0], p[1], p[2], p[3]);
          }
        }
      }
    };
    Glob.prototype._process = function(pattern, index, inGlobStar, cb) {
      assert(this instanceof Glob);
      assert(typeof cb === "function");
      if (this.aborted)
        return;
      this._processing++;
      if (this.paused) {
        this._processQueue.push([pattern, index, inGlobStar, cb]);
        return;
      }
      var n = 0;
      while (typeof pattern[n] === "string") {
        n++;
      }
      var prefix;
      switch (n) {
        case pattern.length:
          this._processSimple(pattern.join("/"), index, cb);
          return;
        case 0:
          prefix = null;
          break;
        default:
          prefix = pattern.slice(0, n).join("/");
          break;
      }
      var remain = pattern.slice(n);
      var read;
      if (prefix === null)
        read = ".";
      else if (isAbsolute(prefix) || isAbsolute(pattern.map(function(p) {
        return typeof p === "string" ? p : "[*]";
      }).join("/"))) {
        if (!prefix || !isAbsolute(prefix))
          prefix = "/" + prefix;
        read = prefix;
      } else
        read = prefix;
      var abs = this._makeAbs(read);
      if (childrenIgnored(this, read))
        return cb();
      var isGlobStar = remain[0] === minimatch.GLOBSTAR;
      if (isGlobStar)
        this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb);
      else
        this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb);
    };
    Glob.prototype._processReaddir = function(prefix, read, abs, remain, index, inGlobStar, cb) {
      var self = this;
      this._readdir(abs, inGlobStar, function(er, entries) {
        return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb);
      });
    };
    Glob.prototype._processReaddir2 = function(prefix, read, abs, remain, index, inGlobStar, entries, cb) {
      if (!entries)
        return cb();
      var pn = remain[0];
      var negate = !!this.minimatch.negate;
      var rawGlob = pn._glob;
      var dotOk = this.dot || rawGlob.charAt(0) === ".";
      var matchedEntries = [];
      for (var i = 0; i < entries.length; i++) {
        var e = entries[i];
        if (e.charAt(0) !== "." || dotOk) {
          var m;
          if (negate && !prefix) {
            m = !e.match(pn);
          } else {
            m = e.match(pn);
          }
          if (m)
            matchedEntries.push(e);
        }
      }
      var len = matchedEntries.length;
      if (len === 0)
        return cb();
      if (remain.length === 1 && !this.mark && !this.stat) {
        if (!this.matches[index])
          this.matches[index] = /* @__PURE__ */ Object.create(null);
        for (var i = 0; i < len; i++) {
          var e = matchedEntries[i];
          if (prefix) {
            if (prefix !== "/")
              e = prefix + "/" + e;
            else
              e = prefix + e;
          }
          if (e.charAt(0) === "/" && !this.nomount) {
            e = path2.join(this.root, e);
          }
          this._emitMatch(index, e);
        }
        return cb();
      }
      remain.shift();
      for (var i = 0; i < len; i++) {
        var e = matchedEntries[i];
        var newPattern;
        if (prefix) {
          if (prefix !== "/")
            e = prefix + "/" + e;
          else
            e = prefix + e;
        }
        this._process([e].concat(remain), index, inGlobStar, cb);
      }
      cb();
    };
    Glob.prototype._emitMatch = function(index, e) {
      if (this.aborted)
        return;
      if (isIgnored(this, e))
        return;
      if (this.paused) {
        this._emitQueue.push([index, e]);
        return;
      }
      var abs = isAbsolute(e) ? e : this._makeAbs(e);
      if (this.mark)
        e = this._mark(e);
      if (this.absolute)
        e = abs;
      if (this.matches[index][e])
        return;
      if (this.nodir) {
        var c = this.cache[abs];
        if (c === "DIR" || Array.isArray(c))
          return;
      }
      this.matches[index][e] = true;
      var st = this.statCache[abs];
      if (st)
        this.emit("stat", e, st);
      this.emit("match", e);
    };
    Glob.prototype._readdirInGlobStar = function(abs, cb) {
      if (this.aborted)
        return;
      if (this.follow)
        return this._readdir(abs, false, cb);
      var lstatkey = "lstat\0" + abs;
      var self = this;
      var lstatcb = inflight(lstatkey, lstatcb_);
      if (lstatcb)
        self.fs.lstat(abs, lstatcb);
      function lstatcb_(er, lstat) {
        if (er && er.code === "ENOENT")
          return cb();
        var isSym = lstat && lstat.isSymbolicLink();
        self.symlinks[abs] = isSym;
        if (!isSym && lstat && !lstat.isDirectory()) {
          self.cache[abs] = "FILE";
          cb();
        } else
          self._readdir(abs, false, cb);
      }
    };
    Glob.prototype._readdir = function(abs, inGlobStar, cb) {
      if (this.aborted)
        return;
      cb = inflight("readdir\0" + abs + "\0" + inGlobStar, cb);
      if (!cb)
        return;
      if (inGlobStar && !ownProp(this.symlinks, abs))
        return this._readdirInGlobStar(abs, cb);
      if (ownProp(this.cache, abs)) {
        var c = this.cache[abs];
        if (!c || c === "FILE")
          return cb();
        if (Array.isArray(c))
          return cb(null, c);
      }
      var self = this;
      self.fs.readdir(abs, readdirCb(this, abs, cb));
    };
    function readdirCb(self, abs, cb) {
      return function(er, entries) {
        if (er)
          self._readdirError(abs, er, cb);
        else
          self._readdirEntries(abs, entries, cb);
      };
    }
    Glob.prototype._readdirEntries = function(abs, entries, cb) {
      if (this.aborted)
        return;
      if (!this.mark && !this.stat) {
        for (var i = 0; i < entries.length; i++) {
          var e = entries[i];
          if (abs === "/")
            e = abs + e;
          else
            e = abs + "/" + e;
          this.cache[e] = true;
        }
      }
      this.cache[abs] = entries;
      return cb(null, entries);
    };
    Glob.prototype._readdirError = function(f, er, cb) {
      if (this.aborted)
        return;
      switch (er.code) {
        case "ENOTSUP":
        case "ENOTDIR":
          var abs = this._makeAbs(f);
          this.cache[abs] = "FILE";
          if (abs === this.cwdAbs) {
            var error = new Error(er.code + " invalid cwd " + this.cwd);
            error.path = this.cwd;
            error.code = er.code;
            this.emit("error", error);
            this.abort();
          }
          break;
        case "ENOENT":
        case "ELOOP":
        case "ENAMETOOLONG":
        case "UNKNOWN":
          this.cache[this._makeAbs(f)] = false;
          break;
        default:
          this.cache[this._makeAbs(f)] = false;
          if (this.strict) {
            this.emit("error", er);
            this.abort();
          }
          if (!this.silent)
            console.error("glob error", er);
          break;
      }
      return cb();
    };
    Glob.prototype._processGlobStar = function(prefix, read, abs, remain, index, inGlobStar, cb) {
      var self = this;
      this._readdir(abs, inGlobStar, function(er, entries) {
        self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb);
      });
    };
    Glob.prototype._processGlobStar2 = function(prefix, read, abs, remain, index, inGlobStar, entries, cb) {
      if (!entries)
        return cb();
      var remainWithoutGlobStar = remain.slice(1);
      var gspref = prefix ? [prefix] : [];
      var noGlobStar = gspref.concat(remainWithoutGlobStar);
      this._process(noGlobStar, index, false, cb);
      var isSym = this.symlinks[abs];
      var len = entries.length;
      if (isSym && inGlobStar)
        return cb();
      for (var i = 0; i < len; i++) {
        var e = entries[i];
        if (e.charAt(0) === "." && !this.dot)
          continue;
        var instead = gspref.concat(entries[i], remainWithoutGlobStar);
        this._process(instead, index, true, cb);
        var below = gspref.concat(entries[i], remain);
        this._process(below, index, true, cb);
      }
      cb();
    };
    Glob.prototype._processSimple = function(prefix, index, cb) {
      var self = this;
      this._stat(prefix, function(er, exists) {
        self._processSimple2(prefix, index, er, exists, cb);
      });
    };
    Glob.prototype._processSimple2 = function(prefix, index, er, exists, cb) {
      if (!this.matches[index])
        this.matches[index] = /* @__PURE__ */ Object.create(null);
      if (!exists)
        return cb();
      if (prefix && isAbsolute(prefix) && !this.nomount) {
        var trail = /[\/\\]$/.test(prefix);
        if (prefix.charAt(0) === "/") {
          prefix = path2.join(this.root, prefix);
        } else {
          prefix = path2.resolve(this.root, prefix);
          if (trail)
            prefix += "/";
        }
      }
      if (process.platform === "win32")
        prefix = prefix.replace(/\\/g, "/");
      this._emitMatch(index, prefix);
      cb();
    };
    Glob.prototype._stat = function(f, cb) {
      var abs = this._makeAbs(f);
      var needDir = f.slice(-1) === "/";
      if (f.length > this.maxLength)
        return cb();
      if (!this.stat && ownProp(this.cache, abs)) {
        var c = this.cache[abs];
        if (Array.isArray(c))
          c = "DIR";
        if (!needDir || c === "DIR")
          return cb(null, c);
        if (needDir && c === "FILE")
          return cb();
      }
      var exists;
      var stat = this.statCache[abs];
      if (stat !== void 0) {
        if (stat === false)
          return cb(null, stat);
        else {
          var type = stat.isDirectory() ? "DIR" : "FILE";
          if (needDir && type === "FILE")
            return cb();
          else
            return cb(null, type, stat);
        }
      }
      var self = this;
      var statcb = inflight("stat\0" + abs, lstatcb_);
      if (statcb)
        self.fs.lstat(abs, statcb);
      function lstatcb_(er, lstat) {
        if (lstat && lstat.isSymbolicLink()) {
          return self.fs.stat(abs, function(er2, stat2) {
            if (er2)
              self._stat2(f, abs, null, lstat, cb);
            else
              self._stat2(f, abs, er2, stat2, cb);
          });
        } else {
          self._stat2(f, abs, er, lstat, cb);
        }
      }
    };
    Glob.prototype._stat2 = function(f, abs, er, stat, cb) {
      if (er && (er.code === "ENOENT" || er.code === "ENOTDIR")) {
        this.statCache[abs] = false;
        return cb();
      }
      var needDir = f.slice(-1) === "/";
      this.statCache[abs] = stat;
      if (abs.slice(-1) === "/" && stat && !stat.isDirectory())
        return cb(null, false, stat);
      var c = true;
      if (stat)
        c = stat.isDirectory() ? "DIR" : "FILE";
      this.cache[abs] = this.cache[abs] || c;
      if (needDir && c === "FILE")
        return cb();
      return cb(null, c, stat);
    };
  }
});

// node_modules/temp/node_modules/rimraf/rimraf.js
var require_rimraf = __commonJS({
  "node_modules/temp/node_modules/rimraf/rimraf.js"(exports, module2) {
    module2.exports = rimraf;
    rimraf.sync = rimrafSync;
    var assert = require("assert");
    var path2 = require("path");
    var fs2 = require("fs");
    var glob = require_glob();
    var _0666 = parseInt("666", 8);
    var defaultGlobOpts = {
      nosort: true,
      silent: true
    };
    var timeout = 0;
    var isWindows = process.platform === "win32";
    function defaults(options) {
      var methods = [
        "unlink",
        "chmod",
        "stat",
        "lstat",
        "rmdir",
        "readdir"
      ];
      methods.forEach(function(m) {
        options[m] = options[m] || fs2[m];
        m = m + "Sync";
        options[m] = options[m] || fs2[m];
      });
      options.maxBusyTries = options.maxBusyTries || 3;
      options.emfileWait = options.emfileWait || 1e3;
      if (options.glob === false) {
        options.disableGlob = true;
      }
      options.disableGlob = options.disableGlob || false;
      options.glob = options.glob || defaultGlobOpts;
    }
    function rimraf(p, options, cb) {
      if (typeof options === "function") {
        cb = options;
        options = {};
      }
      assert(p, "rimraf: missing path");
      assert.equal(typeof p, "string", "rimraf: path should be a string");
      assert.equal(typeof cb, "function", "rimraf: callback function required");
      assert(options, "rimraf: invalid options argument provided");
      assert.equal(typeof options, "object", "rimraf: options should be object");
      defaults(options);
      var busyTries = 0;
      var errState = null;
      var n = 0;
      if (options.disableGlob || !glob.hasMagic(p))
        return afterGlob(null, [p]);
      options.lstat(p, function(er, stat) {
        if (!er)
          return afterGlob(null, [p]);
        glob(p, options.glob, afterGlob);
      });
      function next(er) {
        errState = errState || er;
        if (--n === 0)
          cb(errState);
      }
      function afterGlob(er, results) {
        if (er)
          return cb(er);
        n = results.length;
        if (n === 0)
          return cb();
        results.forEach(function(p2) {
          rimraf_(p2, options, function CB(er2) {
            if (er2) {
              if ((er2.code === "EBUSY" || er2.code === "ENOTEMPTY" || er2.code === "EPERM") && busyTries < options.maxBusyTries) {
                busyTries++;
                var time = busyTries * 100;
                return setTimeout(function() {
                  rimraf_(p2, options, CB);
                }, time);
              }
              if (er2.code === "EMFILE" && timeout < options.emfileWait) {
                return setTimeout(function() {
                  rimraf_(p2, options, CB);
                }, timeout++);
              }
              if (er2.code === "ENOENT")
                er2 = null;
            }
            timeout = 0;
            next(er2);
          });
        });
      }
    }
    function rimraf_(p, options, cb) {
      assert(p);
      assert(options);
      assert(typeof cb === "function");
      options.lstat(p, function(er, st) {
        if (er && er.code === "ENOENT")
          return cb(null);
        if (er && er.code === "EPERM" && isWindows)
          fixWinEPERM(p, options, er, cb);
        if (st && st.isDirectory())
          return rmdir(p, options, er, cb);
        options.unlink(p, function(er2) {
          if (er2) {
            if (er2.code === "ENOENT")
              return cb(null);
            if (er2.code === "EPERM")
              return isWindows ? fixWinEPERM(p, options, er2, cb) : rmdir(p, options, er2, cb);
            if (er2.code === "EISDIR")
              return rmdir(p, options, er2, cb);
          }
          return cb(er2);
        });
      });
    }
    function fixWinEPERM(p, options, er, cb) {
      assert(p);
      assert(options);
      assert(typeof cb === "function");
      if (er)
        assert(er instanceof Error);
      options.chmod(p, _0666, function(er2) {
        if (er2)
          cb(er2.code === "ENOENT" ? null : er);
        else
          options.stat(p, function(er3, stats) {
            if (er3)
              cb(er3.code === "ENOENT" ? null : er);
            else if (stats.isDirectory())
              rmdir(p, options, er, cb);
            else
              options.unlink(p, cb);
          });
      });
    }
    function fixWinEPERMSync(p, options, er) {
      assert(p);
      assert(options);
      if (er)
        assert(er instanceof Error);
      try {
        options.chmodSync(p, _0666);
      } catch (er2) {
        if (er2.code === "ENOENT")
          return;
        else
          throw er;
      }
      try {
        var stats = options.statSync(p);
      } catch (er3) {
        if (er3.code === "ENOENT")
          return;
        else
          throw er;
      }
      if (stats.isDirectory())
        rmdirSync2(p, options, er);
      else
        options.unlinkSync(p);
    }
    function rmdir(p, options, originalEr, cb) {
      assert(p);
      assert(options);
      if (originalEr)
        assert(originalEr instanceof Error);
      assert(typeof cb === "function");
      options.rmdir(p, function(er) {
        if (er && (er.code === "ENOTEMPTY" || er.code === "EEXIST" || er.code === "EPERM"))
          rmkids(p, options, cb);
        else if (er && er.code === "ENOTDIR")
          cb(originalEr);
        else
          cb(er);
      });
    }
    function rmkids(p, options, cb) {
      assert(p);
      assert(options);
      assert(typeof cb === "function");
      options.readdir(p, function(er, files) {
        if (er)
          return cb(er);
        var n = files.length;
        if (n === 0)
          return options.rmdir(p, cb);
        var errState;
        files.forEach(function(f) {
          rimraf(path2.join(p, f), options, function(er2) {
            if (errState)
              return;
            if (er2)
              return cb(errState = er2);
            if (--n === 0)
              options.rmdir(p, cb);
          });
        });
      });
    }
    function rimrafSync(p, options) {
      options = options || {};
      defaults(options);
      assert(p, "rimraf: missing path");
      assert.equal(typeof p, "string", "rimraf: path should be a string");
      assert(options, "rimraf: missing options");
      assert.equal(typeof options, "object", "rimraf: options should be object");
      var results;
      if (options.disableGlob || !glob.hasMagic(p)) {
        results = [p];
      } else {
        try {
          options.lstatSync(p);
          results = [p];
        } catch (er) {
          results = glob.sync(p, options.glob);
        }
      }
      if (!results.length)
        return;
      for (var i = 0; i < results.length; i++) {
        var p = results[i];
        try {
          var st = options.lstatSync(p);
        } catch (er) {
          if (er.code === "ENOENT")
            return;
          if (er.code === "EPERM" && isWindows)
            fixWinEPERMSync(p, options, er);
        }
        try {
          if (st && st.isDirectory())
            rmdirSync2(p, options, null);
          else
            options.unlinkSync(p);
        } catch (er) {
          if (er.code === "ENOENT")
            return;
          if (er.code === "EPERM")
            return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync2(p, options, er);
          if (er.code !== "EISDIR")
            throw er;
          rmdirSync2(p, options, er);
        }
      }
    }
    function rmdirSync2(p, options, originalEr) {
      assert(p);
      assert(options);
      if (originalEr)
        assert(originalEr instanceof Error);
      try {
        options.rmdirSync(p);
      } catch (er) {
        if (er.code === "ENOENT")
          return;
        if (er.code === "ENOTDIR")
          throw originalEr;
        if (er.code === "ENOTEMPTY" || er.code === "EEXIST" || er.code === "EPERM")
          rmkidsSync(p, options);
      }
    }
    function rmkidsSync(p, options) {
      assert(p);
      assert(options);
      options.readdirSync(p).forEach(function(f) {
        rimrafSync(path2.join(p, f), options);
      });
      var retries = isWindows ? 100 : 1;
      var i = 0;
      do {
        var threw = true;
        try {
          var ret = options.rmdirSync(p, options);
          threw = false;
          return ret;
        } finally {
          if (++i < retries && threw)
            continue;
        }
      } while (true);
    }
  }
});

// node_modules/mkdirp/index.js
var require_mkdirp = __commonJS({
  "node_modules/mkdirp/index.js"(exports, module2) {
    var path2 = require("path");
    var fs2 = require("fs");
    var _0777 = parseInt("0777", 8);
    module2.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;
    function mkdirP(p, opts, f, made) {
      if (typeof opts === "function") {
        f = opts;
        opts = {};
      } else if (!opts || typeof opts !== "object") {
        opts = { mode: opts };
      }
      var mode = opts.mode;
      var xfs = opts.fs || fs2;
      if (mode === void 0) {
        mode = _0777;
      }
      if (!made)
        made = null;
      var cb = f || /* istanbul ignore next */
      function() {
      };
      p = path2.resolve(p);
      xfs.mkdir(p, mode, function(er) {
        if (!er) {
          made = made || p;
          return cb(null, made);
        }
        switch (er.code) {
          case "ENOENT":
            if (path2.dirname(p) === p)
              return cb(er);
            mkdirP(path2.dirname(p), opts, function(er2, made2) {
              if (er2)
                cb(er2, made2);
              else
                mkdirP(p, opts, cb, made2);
            });
            break;
          default:
            xfs.stat(p, function(er2, stat) {
              if (er2 || !stat.isDirectory())
                cb(er, made);
              else
                cb(null, made);
            });
            break;
        }
      });
    }
    mkdirP.sync = function sync(p, opts, made) {
      if (!opts || typeof opts !== "object") {
        opts = { mode: opts };
      }
      var mode = opts.mode;
      var xfs = opts.fs || fs2;
      if (mode === void 0) {
        mode = _0777;
      }
      if (!made)
        made = null;
      p = path2.resolve(p);
      try {
        xfs.mkdirSync(p, mode);
        made = made || p;
      } catch (err0) {
        switch (err0.code) {
          case "ENOENT":
            made = sync(path2.dirname(p), opts, made);
            sync(p, opts, made);
            break;
          default:
            var stat;
            try {
              stat = xfs.statSync(p);
            } catch (err1) {
              throw err0;
            }
            if (!stat.isDirectory())
              throw err0;
            break;
        }
      }
      return made;
    };
  }
});

// node_modules/temp/lib/temp.js
var require_temp = __commonJS({
  "node_modules/temp/lib/temp.js"(exports, module2) {
    var fs2 = require("fs");
    var path2 = require("path");
    var cnst = require("constants");
    var os = require("os");
    var rimraf = require_rimraf();
    var mkdirp = require_mkdirp();
    var osTmpdir = require("os").tmpdir();
    var rimrafSync = rimraf.sync;
    var dir = path2.resolve(os.tmpdir());
    var RDWR_EXCL = cnst.O_CREAT | cnst.O_TRUNC | cnst.O_RDWR | cnst.O_EXCL;
    var promisify = function(callback) {
      if (typeof callback === "function") {
        return [void 0, callback];
      }
      var promiseCallback;
      var promise = new Promise(function(resolve, reject) {
        promiseCallback = function() {
          var args = Array.from(arguments);
          var err = args.shift();
          process.nextTick(function() {
            if (err) {
              reject(err);
            } else if (args.length === 1) {
              resolve(args[0]);
            } else {
              resolve(args);
            }
          });
        };
      });
      return [promise, promiseCallback];
    };
    var generateName = function(rawAffixes, defaultPrefix) {
      var affixes = parseAffixes(rawAffixes, defaultPrefix);
      var now = new Date();
      var name = [
        affixes.prefix,
        now.getFullYear(),
        now.getMonth(),
        now.getDate(),
        "-",
        process.pid,
        "-",
        (Math.random() * 4294967296 + 1).toString(36),
        affixes.suffix
      ].join("");
      return path2.join(affixes.dir || dir, name);
    };
    var parseAffixes = function(rawAffixes, defaultPrefix) {
      var affixes = { prefix: null, suffix: null };
      if (rawAffixes) {
        switch (typeof rawAffixes) {
          case "string":
            affixes.prefix = rawAffixes;
            break;
          case "object":
            affixes = rawAffixes;
            break;
          default:
            throw new Error("Unknown affix declaration: " + affixes);
        }
      } else {
        affixes.prefix = defaultPrefix;
      }
      return affixes;
    };
    var tracking = false;
    var track = function(value) {
      tracking = value !== false;
      return module2.exports;
    };
    var exitListenerAttached = false;
    var filesToDelete = [];
    var dirsToDelete = [];
    function deleteFileOnExit(filePath) {
      if (!tracking)
        return false;
      attachExitListener();
      filesToDelete.push(filePath);
    }
    function deleteDirOnExit(dirPath) {
      if (!tracking)
        return false;
      attachExitListener();
      dirsToDelete.push(dirPath);
    }
    function attachExitListener() {
      if (!tracking)
        return false;
      if (!exitListenerAttached) {
        process.addListener("exit", function() {
          try {
            cleanupSync();
          } catch (err) {
            console.warn("Fail to clean temporary files on exit : ", err);
            throw err;
          }
        });
        exitListenerAttached = true;
      }
    }
    function cleanupFilesSync() {
      if (!tracking) {
        return false;
      }
      var count = 0;
      var toDelete;
      while ((toDelete = filesToDelete.shift()) !== void 0) {
        rimrafSync(toDelete, { maxBusyTries: 6 });
        count++;
      }
      return count;
    }
    function cleanupFiles(callback) {
      var p = promisify(callback);
      var promise = p[0];
      callback = p[1];
      if (!tracking) {
        callback(new Error("not tracking"));
        return promise;
      }
      var count = 0;
      var left = filesToDelete.length;
      if (!left) {
        callback(null, count);
        return promise;
      }
      var toDelete;
      var rimrafCallback = function(err) {
        if (!left) {
          return;
        }
        if (err) {
          callback(err);
          left = 0;
          return;
        } else {
          count++;
        }
        left--;
        if (!left) {
          callback(null, count);
        }
      };
      while ((toDelete = filesToDelete.shift()) !== void 0) {
        rimraf(toDelete, { maxBusyTries: 6 }, rimrafCallback);
      }
      return promise;
    }
    function cleanupDirsSync() {
      if (!tracking) {
        return false;
      }
      var count = 0;
      var toDelete;
      while ((toDelete = dirsToDelete.shift()) !== void 0) {
        rimrafSync(toDelete, { maxBusyTries: 6 });
        count++;
      }
      return count;
    }
    function cleanupDirs(callback) {
      var p = promisify(callback);
      var promise = p[0];
      callback = p[1];
      if (!tracking) {
        callback(new Error("not tracking"));
        return promise;
      }
      var count = 0;
      var left = dirsToDelete.length;
      if (!left) {
        callback(null, count);
        return promise;
      }
      var toDelete;
      var rimrafCallback = function(err) {
        if (!left) {
          return;
        }
        if (err) {
          callback(err, count);
          left = 0;
          return;
        } else {
          count++;
        }
        left--;
        if (!left) {
          callback(null, count);
        }
      };
      while ((toDelete = dirsToDelete.shift()) !== void 0) {
        rimraf(toDelete, { maxBusyTries: 6 }, rimrafCallback);
      }
      return promise;
    }
    function cleanupSync() {
      if (!tracking) {
        return false;
      }
      var fileCount = cleanupFilesSync();
      var dirCount = cleanupDirsSync();
      return { files: fileCount, dirs: dirCount };
    }
    function cleanup(callback) {
      var p = promisify(callback);
      var promise = p[0];
      callback = p[1];
      if (!tracking) {
        callback(new Error("not tracking"));
        return promise;
      }
      cleanupFiles(function(fileErr, fileCount) {
        if (fileErr) {
          callback(fileErr, { files: fileCount });
        } else {
          cleanupDirs(function(dirErr, dirCount) {
            callback(dirErr, { files: fileCount, dirs: dirCount });
          });
        }
      });
      return promise;
    }
    var mkdir2 = (affixes, callback) => {
      const p = promisify(callback);
      const promise = p[0];
      callback = p[1];
      let dirPath = generateName(affixes, "d-");
      mkdirp(dirPath, 448, (err) => {
        if (!err) {
          deleteDirOnExit(dirPath);
        }
        callback(err, dirPath);
      });
      return promise;
    };
    var mkdirSync2 = (affixes) => {
      let dirPath = generateName(affixes, "d-");
      mkdirp.sync(dirPath, 448);
      deleteDirOnExit(dirPath);
      return dirPath;
    };
    var open = (affixes, callback) => {
      const p = promisify(callback);
      const promise = p[0];
      callback = p[1];
      const path3 = generateName(affixes, "f-");
      fs2.open(path3, RDWR_EXCL, 384, (err, fd) => {
        if (!err) {
          deleteFileOnExit(path3);
        }
        callback(err, { path: path3, fd });
      });
      return promise;
    };
    var openSync = (affixes) => {
      const path3 = generateName(affixes, "f-");
      let fd = fs2.openSync(path3, RDWR_EXCL, 384);
      deleteFileOnExit(path3);
      return { path: path3, fd };
    };
    var createWriteStream = (affixes) => {
      const path3 = generateName(affixes, "s-");
      let stream = fs2.createWriteStream(path3, { flags: RDWR_EXCL, mode: 384 });
      deleteFileOnExit(path3);
      return stream;
    };
    exports.dir = dir;
    exports.track = track;
    exports.mkdir = mkdir2;
    exports.mkdirSync = mkdirSync2;
    exports.open = open;
    exports.openSync = openSync;
    exports.path = generateName;
    exports.cleanup = cleanup;
    exports.cleanupSync = cleanupSync;
    exports.createWriteStream = createWriteStream;
  }
});

// inline-worker:__inline-worker
function inlineWorker(scriptText) {
  let blob = new Blob([scriptText], { type: "text/javascript" });
  let url = URL.createObjectURL(blob);
  let worker = new Worker(url);
  URL.revokeObjectURL(url);
  return worker;
}
var init_inline_worker = __esm({
  "inline-worker:__inline-worker"() {
  }
});

// swiftlatexpdftex.worker.js
var swiftlatexpdftex_worker_exports = {};
__export(swiftlatexpdftex_worker_exports, {
  default: () => Worker2
});
function Worker2() {
  return inlineWorker('var i=typeof i<"u"?i:{},IA="/tex",j="/work",i={};self.memlog="";self.initmem=void 0;self.mainfile="main.tex";self.texlive_endpoint="https://texlive2.swiftlatex.com/";i.print=function(A){self.memlog+=A+`\n`};i.printErr=function(A){self.memlog+=A+`\n`,console.log(A)};i.preRun=function(){I.mkdir(IA),I.mkdir(j)};function GA(A){let B=bA(A.length);return r.set(new Uint8Array(A),B),B}function MB(){var A=u.buffer,B=new Uint8Array(A.byteLength);return B.set(new Uint8Array(A)),B}function KB(){if(self.initmem){var A=new Uint8Array(u.buffer);A.set(self.initmem)}}function YB(){for(var A=0;A<I.streams.length;A++){var B=I.streams[A];!B||B.fd<=2||I.close(B)}}function pA(){self.memlog="",KB(),YB(),I.chdir(j)}i.postRun=function(){self.postMessage({result:"ok"}),self.initmem=MB()};function fA(A){let B=I.readdir(A);for(let g in B){let Q=B[g];if(Q==="."||Q==="..")continue;Q=A+"/"+Q;let C;try{C=I.stat(Q)}catch{console.error("Not able to fsstat "+Q);continue}if(I.isDir(C.mode))fA(Q);else try{I.unlink(Q)}catch{console.error("Not able to unlink "+Q)}}if(A!==j)try{I.rmdir(A)}catch{console.error("Not able to top level "+A)}}i.onAbort=function(){self.memlog+="Engine crashed",self.postMessage({result:"failed",status:-254,log:self.memlog,cmd:"compile"})};function hB(){pA(),DB("setMainEntry","number",["string"])(self.mainfile);let B=iB();if(B===0){let g=null;GB();try{let Q=j+"/"+self.mainfile.substr(0,self.mainfile.length-4)+".pdf";g=I.readFile(Q,{encoding:"binary"})}catch{console.error("Fetch content failed."),B=-253,self.postMessage({result:"failed",status:B,log:self.memlog,cmd:"compile"});return}self.postMessage({result:"ok",status:B,log:self.memlog,pdf:g.buffer,cmd:"compile"},[g.buffer])}else console.error("Compilation failed, with status code "+B),self.postMessage({result:"failed",status:B,log:self.memlog,cmd:"compile"})}function aB(){pA();let A=NB();if(A===0){let B=null;try{let g=j+"/pdflatex.fmt";B=I.readFile(g,{encoding:"binary"})}catch{console.error("Fetch content failed."),A=-253,self.postMessage({result:"failed",status:A,log:self.memlog,cmd:"compile"});return}self.postMessage({result:"ok",status:A,log:self.memlog,pdf:B.buffer,cmd:"compile"},[B.buffer])}else console.error("Compilation format failed, with status code "+A),self.postMessage({result:"failed",status:A,log:self.memlog,cmd:"compile"})}function UB(A){try{I.mkdir(j+"/"+A),self.postMessage({result:"ok",cmd:"mkdir"})}catch{console.error("Not able to mkdir "+A),self.postMessage({result:"failed",cmd:"mkdir"})}}function SB(A,B){try{I.writeFile(j+"/"+A,B),self.postMessage({result:"ok",cmd:"writefile"})}catch{console.error("Unable to write mem file"),self.postMessage({result:"failed",cmd:"writefile"})}}function HB(A,B){try{I.writeFile(IA+"/"+A,B),self.postMessage({result:"ok",cmd:"writetexfile"})}catch{console.error("Unable to write mem file"),self.postMessage({result:"failed",cmd:"writetexfile"})}}function kB(A){try{let B=I.readFile(IA+"/"+A,{encoding:"binary"});self.postMessage({result:"ok",cmd:"fetchfile",filename:A,content:B},[B.buffer])}catch{console.error("Unable to fetch mem file"),self.postMessage({result:"failed",cmd:"fetchfile"})}}function yB(){try{self.postMessage({result:"ok",cmd:"fetchcache",texlive404_cache:wA,texlive200_cache:P,pk404_cache:RA,pk200_cache:_})}catch{console.error("Unable to fetch cache"),self.postMessage({result:"failed",cmd:"fetchcache"})}}function JB(A){A&&(A.endsWith("/")||(A+="/"),self.texlive_endpoint=A)}self.onmessage=function(A){let B=A.data,g=B.cmd;g==="compilelatex"?hB():g==="compileformat"?aB():g==="settexliveurl"?JB(B.url):g==="mkdir"?UB(B.url):g==="writefile"?SB(B.url,B.src):g==="setmainfile"?self.mainfile=B.url:g==="grace"?(console.error("Gracefully Close"),self.close()):g==="flushcache"?fA(j):g==="fetchfile"?kB(B.filename):g==="fetchcache"?yB():g==="writetexfile"?HB(B.url,B.src):g==="writecache"?(wA=B.texlive404_cache,P=B.texlive200_cache,RA=B.pk404_cache,_=B.pk200_cache):console.error("Unknown command "+g)};var wA={},P={};function cB(A,B,g){let Q=m(A);if(Q.includes("/"))return 0;let C=B+"/"+Q;if(C in wA)return 0;if(C in P){let o=P[C];return GA(O(o))}let E=self.texlive_endpoint+"pdftex/"+C,D=new XMLHttpRequest;D.open("GET",E,!1),D.timeout=15e4,D.responseType="arraybuffer",console.log("Start downloading texlive file "+E);try{D.send()}catch{return console.log("TexLive Download Failed "+E),0}if(D.status===200){let o=D.response,G=D.getResponseHeader("fileid"),w=IA+"/"+G;return I.writeFile(w,new Uint8Array(o)),P[C]=w,GA(O(w))}else if(D.status===301)return console.log("TexLive File not exists "+E),wA[C]=1,0;return 0}var RA={},_={};function sB(A,B){let g=m(A);if(g.includes("/"))return 0;let Q=B+"/"+g;if(Q in RA)return 0;if(Q in _){let D=_[Q];return GA(O(D))}let C=self.texlive_endpoint+"pdftex/pk/"+Q,E=new XMLHttpRequest;E.open("GET",C,!1),E.timeout=15e4,E.responseType="arraybuffer",console.log("Start downloading texlive file "+C);try{E.send()}catch{return console.log("TexLive Download Failed "+C),0}if(E.status===200){let D=E.response,o=E.getResponseHeader("pkid"),G=IA+"/"+o;return I.writeFile(G,new Uint8Array(D)),_[Q]=G,GA(O(G))}else if(E.status===301)return console.log("TexLive File not exists "+C),RA[Q]=1,0;return 0}var OA=Object.assign({},i),TA=[],UA="./this.program",SA=(A,B)=>{throw B},jA=!1,QA=!0,$="";function LB(A){return i.locateFile?i.locateFile(A,$):$+A}var FA,nA,ZA;QA&&(NA=require("fs"),EA=require("path"),jA?$=EA.dirname($)+"/":$=__dirname+"/",FA=(A,B)=>(A=zA(A)?new URL(A):EA.normalize(A),NA.readFileSync(A,B?void 0:"utf8")),ZA=A=>{var B=FA(A,!0);return B.buffer||(B=new Uint8Array(B)),B},nA=(A,B,g,Q=!0)=>{A=zA(A)?new URL(A):EA.normalize(A),NA.readFile(A,Q?void 0:"utf8",(C,E)=>{C?g(C):B(Q?E.buffer:E)})},!i.thisProgram&&process.argv.length>1&&(UA=process.argv[1].replace(/\\\\/g,"/")),TA=process.argv.slice(2),typeof module<"u"&&(module.exports=i),process.on("uncaughtException",A=>{if(A!=="unwind"&&!(A instanceof hA)&&!(A.context instanceof hA))throw A}),SA=(A,B)=>{throw process.exitCode=A,B});var NA,EA,dA=i.print||console.log.bind(console),v=i.printErr||console.error.bind(console);Object.assign(i,OA);OA=null;i.arguments&&(TA=i.arguments);i.thisProgram&&(UA=i.thisProgram);i.quit&&(SA=i.quit);var MA;i.wasmBinary&&(MA=i.wasmBinary);typeof WebAssembly!="object"&&V("no native wasm support detected");function ZB(A){if(typeof QA<"u"&&QA){var B=Buffer.from(A,"base64");return new Uint8Array(B.buffer,B.byteOffset,B.length)}for(var g=atob(A),Q=new Uint8Array(g.length),C=0;C<g.length;++C)Q[C]=g.charCodeAt(C);return Q}function dB(A){if(uA(A))return ZB(A.slice(vA.length))}var u,qA=!1,HA,x,r,KA,TB,Y,c,qB,xB;function rA(){var A=u.buffer;i.HEAP8=x=new Int8Array(A),i.HEAP16=KA=new Int16Array(A),i.HEAPU8=r=new Uint8Array(A),i.HEAPU16=TB=new Uint16Array(A),i.HEAP32=Y=new Int32Array(A),i.HEAPU32=c=new Uint32Array(A),i.HEAPF32=qB=new Float32Array(A),i.HEAPF64=xB=new Float64Array(A)}var VA=[],eA=[],tB=[],XA=[],WB=!1;function bB(){if(i.preRun)for(typeof i.preRun=="function"&&(i.preRun=[i.preRun]);i.preRun.length;)pB(i.preRun.shift());kA(VA)}function zB(){WB=!0,!i.noFSInit&&!I.init.initialized&&I.init(),I.ignorePermissions=!1,f.init(),kA(eA)}function lB(){kA(tB)}function mB(){if(i.postRun)for(typeof i.postRun=="function"&&(i.postRun=[i.postRun]);i.postRun.length;)OB(i.postRun.shift());kA(XA)}function pB(A){VA.unshift(A)}function fB(A){eA.unshift(A)}function OB(A){XA.unshift(A)}var n=0,JA=null,AA=null;function xA(A){var B;n++,(B=i.monitorRunDependencies)==null||B.call(i,n)}function YA(A){var g;if(n--,(g=i.monitorRunDependencies)==null||g.call(i,n),n==0&&(JA!==null&&(clearInterval(JA),JA=null),AA)){var B=AA;AA=null,B()}}function V(A){var g;(g=i.onAbort)==null||g.call(i,A),A="Aborted("+A+")",v(A),qA=!0,HA=1,A+=". Build with -sASSERTIONS for more info.";var B=new WebAssembly.RuntimeError(A);throw B}var vA="data:application/octet-stream;base64,",uA=A=>A.startsWith(vA),zA=A=>A.startsWith("file://"),X;X="data:application/octet-stream;base64,";uA(X)||(X=LB(X));function jB(A){if(A==X&&MA)return new Uint8Array(MA);var B=dB(A);if(B)return B;if(ZA)return ZA(A);throw"both async and sync fetching of the wasm failed"}function nB(A){return Promise.resolve().then(()=>jB(A))}function rB(A,B,g){return nB(A).then(Q=>WebAssembly.instantiate(Q,B)).then(g,Q=>{v(`failed to asynchronously prepare wasm: ${Q}`),V(Q)})}function VB(A,B,g,Q){return rB(B,g,Q)}function eB(){var A={a:rg};function B(Q,C){return T=Q.exports,u=T.J,rA(),CB=T.R,fB(T.K),YA("wasm-instantiate"),T}xA("wasm-instantiate");function g(Q){B(Q.instance)}if(i.instantiateWasm)try{return i.instantiateWasm(A,B)}catch(Q){return v(`Module.instantiateWasm callback failed with error: ${Q}`),!1}return VB(MA,X,A,g),{}}var U,Z;function hA(A){this.name="ExitStatus",this.message=`Program terminated with exit(${A})`,this.status=A}var kA=A=>{for(;A.length>0;)A.shift()(i)},XB=i.noExitRuntime||!0,lA=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,e=(A,B,g)=>{for(var Q=B+g,C=B;A[C]&&!(C>=Q);)++C;if(C-B>16&&A.buffer&&lA)return lA.decode(A.subarray(B,C));for(var E="";B<C;){var D=A[B++];if(!(D&128)){E+=String.fromCharCode(D);continue}var o=A[B++]&63;if((D&224)==192){E+=String.fromCharCode((D&31)<<6|o);continue}var G=A[B++]&63;if((D&240)==224?D=(D&15)<<12|o<<6|G:D=(D&7)<<18|o<<12|G<<6|A[B++]&63,D<65536)E+=String.fromCharCode(D);else{var w=D-65536;E+=String.fromCharCode(55296|w>>10,56320|w&1023)}}return E},m=(A,B)=>A?e(r,A,B):"",vB=(A,B,g,Q)=>{V(`Assertion failed: ${m(A)}, at: `+[B?m(B):"unknown filename",g,Q?m(Q):"unknown function"])},k={isAbs:A=>A.charAt(0)==="/",splitPath:A=>{var B=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return B.exec(A).slice(1)},normalizeArray:(A,B)=>{for(var g=0,Q=A.length-1;Q>=0;Q--){var C=A[Q];C==="."?A.splice(Q,1):C===".."?(A.splice(Q,1),g++):g&&(A.splice(Q,1),g--)}if(B)for(;g;g--)A.unshift("..");return A},normalize:A=>{var B=k.isAbs(A),g=A.substr(-1)==="/";return A=k.normalizeArray(A.split("/").filter(Q=>!!Q),!B).join("/"),!A&&!B&&(A="."),A&&g&&(A+="/"),(B?"/":"")+A},dirname:A=>{var B=k.splitPath(A),g=B[0],Q=B[1];return!g&&!Q?".":(Q&&(Q=Q.substr(0,Q.length-1)),g+Q)},basename:A=>{if(A==="/")return"/";A=k.normalize(A),A=A.replace(/\\/$/,"");var B=A.lastIndexOf("/");return B===-1?A:A.substr(B+1)},join:(...A)=>k.normalize(A.join("/")),join2:(A,B)=>k.normalize(A+"/"+B)},uB=()=>{if(typeof crypto=="object"&&typeof crypto.getRandomValues=="function")return Q=>crypto.getRandomValues(Q);if(QA)try{var A=require("crypto"),B=A.randomFillSync;if(B)return Q=>A.randomFillSync(Q);var g=A.randomBytes;return Q=>(Q.set(g(Q.byteLength)),Q)}catch{}V("initRandomDevice")},PA=A=>(PA=uB())(A),l={resolve:(...A)=>{for(var B="",g=!1,Q=A.length-1;Q>=-1&&!g;Q--){var C=Q>=0?A[Q]:I.cwd();if(typeof C!="string")throw new TypeError("Arguments to path.resolve must be strings");if(!C)return"";B=C+"/"+B,g=k.isAbs(C)}return B=k.normalizeArray(B.split("/").filter(E=>!!E),!g).join("/"),(g?"/":"")+B||"."},relative:(A,B)=>{A=l.resolve(A).substr(1),B=l.resolve(B).substr(1);function g(w){for(var a=0;a<w.length&&w[a]==="";a++);for(var S=w.length-1;S>=0&&w[S]==="";S--);return a>S?[]:w.slice(a,S-a+1)}for(var Q=g(A.split("/")),C=g(B.split("/")),E=Math.min(Q.length,C.length),D=E,o=0;o<E;o++)if(Q[o]!==C[o]){D=o;break}for(var G=[],o=D;o<Q.length;o++)G.push("..");return G=G.concat(C.slice(D)),G.join("/")}},cA=[],CA=A=>{for(var B=0,g=0;g<A.length;++g){var Q=A.charCodeAt(g);Q<=127?B++:Q<=2047?B+=2:Q>=55296&&Q<=57343?(B+=4,++g):B+=3}return B},tA=(A,B,g,Q)=>{if(!(Q>0))return 0;for(var C=g,E=g+Q-1,D=0;D<A.length;++D){var o=A.charCodeAt(D);if(o>=55296&&o<=57343){var G=A.charCodeAt(++D);o=65536+((o&1023)<<10)|G&1023}if(o<=127){if(g>=E)break;B[g++]=o}else if(o<=2047){if(g+1>=E)break;B[g++]=192|o>>6,B[g++]=128|o&63}else if(o<=65535){if(g+2>=E)break;B[g++]=224|o>>12,B[g++]=128|o>>6&63,B[g++]=128|o&63}else{if(g+3>=E)break;B[g++]=240|o>>18,B[g++]=128|o>>12&63,B[g++]=128|o>>6&63,B[g++]=128|o&63}}return B[g]=0,g-C};function O(A,B,g){var Q=g>0?g:CA(A)+1,C=new Array(Q),E=tA(A,C,0,C.length);return B&&(C.length=E),C}var PB=()=>{if(!cA.length){var A=null;if(QA){var B=256,g=Buffer.alloc(B),Q=0,C=process.stdin.fd;try{Q=NA.readSync(C,g)}catch(E){if(E.toString().includes("EOF"))Q=0;else throw E}Q>0?A=g.slice(0,Q).toString("utf-8"):A=null}else typeof window<"u"&&typeof window.prompt=="function"?(A=window.prompt("Input: "),A!==null&&(A+=`\n`)):typeof readline=="function"&&(A=readline(),A!==null&&(A+=`\n`));if(!A)return null;cA=O(A,!0)}return cA.shift()},f={ttys:[],init(){},shutdown(){},register(A,B){f.ttys[A]={input:[],output:[],ops:B},I.registerDevice(A,f.stream_ops)},stream_ops:{open(A){var B=f.ttys[A.node.rdev];if(!B)throw new I.ErrnoError(43);A.tty=B,A.seekable=!1},close(A){A.tty.ops.fsync(A.tty)},fsync(A){A.tty.ops.fsync(A.tty)},read(A,B,g,Q,C){if(!A.tty||!A.tty.ops.get_char)throw new I.ErrnoError(60);for(var E=0,D=0;D<Q;D++){var o;try{o=A.tty.ops.get_char(A.tty)}catch{throw new I.ErrnoError(29)}if(o===void 0&&E===0)throw new I.ErrnoError(6);if(o==null)break;E++,B[g+D]=o}return E&&(A.node.timestamp=Date.now()),E},write(A,B,g,Q,C){if(!A.tty||!A.tty.ops.put_char)throw new I.ErrnoError(60);try{for(var E=0;E<Q;E++)A.tty.ops.put_char(A.tty,B[g+E])}catch{throw new I.ErrnoError(29)}return Q&&(A.node.timestamp=Date.now()),E}},default_tty_ops:{get_char(A){return PB()},put_char(A,B){B===null||B===10?(dA(e(A.output,0)),A.output=[]):B!=0&&A.output.push(B)},fsync(A){A.output&&A.output.length>0&&(dA(e(A.output,0)),A.output=[])},ioctl_tcgets(A){return{c_iflag:25856,c_oflag:5,c_cflag:191,c_lflag:35387,c_cc:[3,28,127,21,4,0,1,0,17,19,26,0,18,15,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},ioctl_tcsets(A,B,g){return 0},ioctl_tiocgwinsz(A){return[24,80]}},default_tty1_ops:{put_char(A,B){B===null||B===10?(v(e(A.output,0)),A.output=[]):B!=0&&A.output.push(B)},fsync(A){A.output&&A.output.length>0&&(v(e(A.output,0)),A.output=[])}}},_A=A=>{V()},h={ops_table:null,mount(A){return h.createNode(null,"/",16895,0)},createNode(A,B,g,Q){if(I.isBlkdev(g)||I.isFIFO(g))throw new I.ErrnoError(63);h.ops_table||(h.ops_table={dir:{node:{getattr:h.node_ops.getattr,setattr:h.node_ops.setattr,lookup:h.node_ops.lookup,mknod:h.node_ops.mknod,rename:h.node_ops.rename,unlink:h.node_ops.unlink,rmdir:h.node_ops.rmdir,readdir:h.node_ops.readdir,symlink:h.node_ops.symlink},stream:{llseek:h.stream_ops.llseek}},file:{node:{getattr:h.node_ops.getattr,setattr:h.node_ops.setattr},stream:{llseek:h.stream_ops.llseek,read:h.stream_ops.read,write:h.stream_ops.write,allocate:h.stream_ops.allocate,mmap:h.stream_ops.mmap,msync:h.stream_ops.msync}},link:{node:{getattr:h.node_ops.getattr,setattr:h.node_ops.setattr,readlink:h.node_ops.readlink},stream:{}},chrdev:{node:{getattr:h.node_ops.getattr,setattr:h.node_ops.setattr},stream:I.chrdev_stream_ops}});var C=I.createNode(A,B,g,Q);return I.isDir(C.mode)?(C.node_ops=h.ops_table.dir.node,C.stream_ops=h.ops_table.dir.stream,C.contents={}):I.isFile(C.mode)?(C.node_ops=h.ops_table.file.node,C.stream_ops=h.ops_table.file.stream,C.usedBytes=0,C.contents=null):I.isLink(C.mode)?(C.node_ops=h.ops_table.link.node,C.stream_ops=h.ops_table.link.stream):I.isChrdev(C.mode)&&(C.node_ops=h.ops_table.chrdev.node,C.stream_ops=h.ops_table.chrdev.stream),C.timestamp=Date.now(),A&&(A.contents[B]=C,A.timestamp=C.timestamp),C},getFileDataAsTypedArray(A){return A.contents?A.contents.subarray?A.contents.subarray(0,A.usedBytes):new Uint8Array(A.contents):new Uint8Array(0)},expandFileStorage(A,B){var g=A.contents?A.contents.length:0;if(!(g>=B)){var Q=1024*1024;B=Math.max(B,g*(g<Q?2:1.125)>>>0),g!=0&&(B=Math.max(B,256));var C=A.contents;A.contents=new Uint8Array(B),A.usedBytes>0&&A.contents.set(C.subarray(0,A.usedBytes),0)}},resizeFileStorage(A,B){if(A.usedBytes!=B)if(B==0)A.contents=null,A.usedBytes=0;else{var g=A.contents;A.contents=new Uint8Array(B),g&&A.contents.set(g.subarray(0,Math.min(B,A.usedBytes))),A.usedBytes=B}},node_ops:{getattr(A){var B={};return B.dev=I.isChrdev(A.mode)?A.id:1,B.ino=A.id,B.mode=A.mode,B.nlink=1,B.uid=0,B.gid=0,B.rdev=A.rdev,I.isDir(A.mode)?B.size=4096:I.isFile(A.mode)?B.size=A.usedBytes:I.isLink(A.mode)?B.size=A.link.length:B.size=0,B.atime=new Date(A.timestamp),B.mtime=new Date(A.timestamp),B.ctime=new Date(A.timestamp),B.blksize=4096,B.blocks=Math.ceil(B.size/B.blksize),B},setattr(A,B){B.mode!==void 0&&(A.mode=B.mode),B.timestamp!==void 0&&(A.timestamp=B.timestamp),B.size!==void 0&&h.resizeFileStorage(A,B.size)},lookup(A,B){throw I.genericErrors[44]},mknod(A,B,g,Q){return h.createNode(A,B,g,Q)},rename(A,B,g){if(I.isDir(A.mode)){var Q;try{Q=I.lookupNode(B,g)}catch{}if(Q)for(var C in Q.contents)throw new I.ErrnoError(55)}delete A.parent.contents[A.name],A.parent.timestamp=Date.now(),A.name=g,B.contents[g]=A,B.timestamp=A.parent.timestamp,A.parent=B},unlink(A,B){delete A.contents[B],A.timestamp=Date.now()},rmdir(A,B){var g=I.lookupNode(A,B);for(var Q in g.contents)throw new I.ErrnoError(55);delete A.contents[B],A.timestamp=Date.now()},readdir(A){var B=[".",".."];for(var g of Object.keys(A.contents))B.push(g);return B},symlink(A,B,g){var Q=h.createNode(A,B,41471,0);return Q.link=g,Q},readlink(A){if(!I.isLink(A.mode))throw new I.ErrnoError(28);return A.link}},stream_ops:{read(A,B,g,Q,C){var E=A.node.contents;if(C>=A.node.usedBytes)return 0;var D=Math.min(A.node.usedBytes-C,Q);if(D>8&&E.subarray)B.set(E.subarray(C,C+D),g);else for(var o=0;o<D;o++)B[g+o]=E[C+o];return D},write(A,B,g,Q,C,E){if(B.buffer===x.buffer&&(E=!1),!Q)return 0;var D=A.node;if(D.timestamp=Date.now(),B.subarray&&(!D.contents||D.contents.subarray)){if(E)return D.contents=B.subarray(g,g+Q),D.usedBytes=Q,Q;if(D.usedBytes===0&&C===0)return D.contents=B.slice(g,g+Q),D.usedBytes=Q,Q;if(C+Q<=D.usedBytes)return D.contents.set(B.subarray(g,g+Q),C),Q}if(h.expandFileStorage(D,C+Q),D.contents.subarray&&B.subarray)D.contents.set(B.subarray(g,g+Q),C);else for(var o=0;o<Q;o++)D.contents[C+o]=B[g+o];return D.usedBytes=Math.max(D.usedBytes,C+Q),Q},llseek(A,B,g){var Q=B;if(g===1?Q+=A.position:g===2&&I.isFile(A.node.mode)&&(Q+=A.node.usedBytes),Q<0)throw new I.ErrnoError(28);return Q},allocate(A,B,g){h.expandFileStorage(A.node,B+g),A.node.usedBytes=Math.max(A.node.usedBytes,B+g)},mmap(A,B,g,Q,C){if(!I.isFile(A.node.mode))throw new I.ErrnoError(43);var E,D,o=A.node.contents;if(!(C&2)&&o.buffer===x.buffer)D=!1,E=o.byteOffset;else{if((g>0||g+B<o.length)&&(o.subarray?o=o.subarray(g,g+B):o=Array.prototype.slice.call(o,g,g+B)),D=!0,E=_A(B),!E)throw new I.ErrnoError(48);x.set(o,E)}return{ptr:E,allocated:D}},msync(A,B,g,Q,C){return h.stream_ops.write(A,B,0,Q,g,!1),0}}},_B=(A,B,g,Q)=>{var C=Q?"":`al ${A}`;nA(A,E=>{B(new Uint8Array(E)),C&&YA(C)},E=>{if(g)g();else throw`Loading data file "${A}" failed.`}),C&&xA(C)},$B=(A,B,g,Q,C,E)=>{I.createDataFile(A,B,g,Q,C,E)},Ag=i.preloadPlugins||[],Bg=(A,B,g,Q)=>{typeof Browser<"u"&&Browser.init();var C=!1;return Ag.forEach(E=>{C||E.canHandle(B)&&(E.handle(A,B,g,Q),C=!0)}),C},gg=(A,B,g,Q,C,E,D,o,G,w)=>{var a=B?l.resolve(k.join2(A,B)):A,S=`cp ${a}`;function M(R){function K(y){w==null||w(),o||$B(A,B,y,Q,C,G),E==null||E(),YA(S)}Bg(R,a,K,()=>{D==null||D(),YA(S)})||K(R)}xA(S),typeof g=="string"?_B(g,M,D):M(g)},Qg=A=>{var B={r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090},g=B[A];if(typeof g>"u")throw new Error(`Unknown file open mode: ${A}`);return g},sA=(A,B)=>{var g=0;return A&&(g|=365),B&&(g|=146),g},I={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:class{constructor(A){this.name="ErrnoError",this.errno=A}},genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath(A,B={}){if(A=l.resolve(A),!A)return{path:"",node:null};var g={follow_mount:!0,recurse_count:0};if(B=Object.assign(g,B),B.recurse_count>8)throw new I.ErrnoError(32);for(var Q=A.split("/").filter(S=>!!S),C=I.root,E="/",D=0;D<Q.length;D++){var o=D===Q.length-1;if(o&&B.parent)break;if(C=I.lookupNode(C,Q[D]),E=k.join2(E,Q[D]),I.isMountpoint(C)&&(!o||o&&B.follow_mount)&&(C=C.mounted.root),!o||B.follow)for(var G=0;I.isLink(C.mode);){var w=I.readlink(E);E=l.resolve(k.dirname(E),w);var a=I.lookupPath(E,{recurse_count:B.recurse_count+1});if(C=a.node,G++>40)throw new I.ErrnoError(32)}}return{path:E,node:C}},getPath(A){for(var B;;){if(I.isRoot(A)){var g=A.mount.mountpoint;return B?g[g.length-1]!=="/"?`${g}/${B}`:g+B:g}B=B?`${A.name}/${B}`:A.name,A=A.parent}},hashName(A,B){for(var g=0,Q=0;Q<B.length;Q++)g=(g<<5)-g+B.charCodeAt(Q)|0;return(A+g>>>0)%I.nameTable.length},hashAddNode(A){var B=I.hashName(A.parent.id,A.name);A.name_next=I.nameTable[B],I.nameTable[B]=A},hashRemoveNode(A){var B=I.hashName(A.parent.id,A.name);if(I.nameTable[B]===A)I.nameTable[B]=A.name_next;else for(var g=I.nameTable[B];g;){if(g.name_next===A){g.name_next=A.name_next;break}g=g.name_next}},lookupNode(A,B){var g=I.mayLookup(A);if(g)throw new I.ErrnoError(g);for(var Q=I.hashName(A.id,B),C=I.nameTable[Q];C;C=C.name_next){var E=C.name;if(C.parent.id===A.id&&E===B)return C}return I.lookup(A,B)},createNode(A,B,g,Q){var C=new I.FSNode(A,B,g,Q);return I.hashAddNode(C),C},destroyNode(A){I.hashRemoveNode(A)},isRoot(A){return A===A.parent},isMountpoint(A){return!!A.mounted},isFile(A){return(A&61440)===32768},isDir(A){return(A&61440)===16384},isLink(A){return(A&61440)===40960},isChrdev(A){return(A&61440)===8192},isBlkdev(A){return(A&61440)===24576},isFIFO(A){return(A&61440)===4096},isSocket(A){return(A&49152)===49152},flagsToPermissionString(A){var B=["r","w","rw"][A&3];return A&512&&(B+="w"),B},nodePermissions(A,B){return I.ignorePermissions?0:B.includes("r")&&!(A.mode&292)||B.includes("w")&&!(A.mode&146)||B.includes("x")&&!(A.mode&73)?2:0},mayLookup(A){if(!I.isDir(A.mode))return 54;var B=I.nodePermissions(A,"x");return B||(A.node_ops.lookup?0:2)},mayCreate(A,B){try{var g=I.lookupNode(A,B);return 20}catch{}return I.nodePermissions(A,"wx")},mayDelete(A,B,g){var Q;try{Q=I.lookupNode(A,B)}catch(E){return E.errno}var C=I.nodePermissions(A,"wx");if(C)return C;if(g){if(!I.isDir(Q.mode))return 54;if(I.isRoot(Q)||I.getPath(Q)===I.cwd())return 10}else if(I.isDir(Q.mode))return 31;return 0},mayOpen(A,B){return A?I.isLink(A.mode)?32:I.isDir(A.mode)&&(I.flagsToPermissionString(B)!=="r"||B&512)?31:I.nodePermissions(A,I.flagsToPermissionString(B)):44},MAX_OPEN_FDS:4096,nextfd(){for(var A=0;A<=I.MAX_OPEN_FDS;A++)if(!I.streams[A])return A;throw new I.ErrnoError(33)},getStreamChecked(A){var B=I.getStream(A);if(!B)throw new I.ErrnoError(8);return B},getStream:A=>I.streams[A],createStream(A,B=-1){return I.FSStream||(I.FSStream=function(){this.shared={}},I.FSStream.prototype={},Object.defineProperties(I.FSStream.prototype,{object:{get(){return this.node},set(g){this.node=g}},isRead:{get(){return(this.flags&2097155)!==1}},isWrite:{get(){return(this.flags&2097155)!==0}},isAppend:{get(){return this.flags&1024}},flags:{get(){return this.shared.flags},set(g){this.shared.flags=g}},position:{get(){return this.shared.position},set(g){this.shared.position=g}}})),A=Object.assign(new I.FSStream,A),B==-1&&(B=I.nextfd()),A.fd=B,I.streams[B]=A,A},closeStream(A){I.streams[A]=null},chrdev_stream_ops:{open(A){var g,Q;var B=I.getDevice(A.node.rdev);A.stream_ops=B.stream_ops,(Q=(g=A.stream_ops).open)==null||Q.call(g,A)},llseek(){throw new I.ErrnoError(70)}},major:A=>A>>8,minor:A=>A&255,makedev:(A,B)=>A<<8|B,registerDevice(A,B){I.devices[A]={stream_ops:B}},getDevice:A=>I.devices[A],getMounts(A){for(var B=[],g=[A];g.length;){var Q=g.pop();B.push(Q),g.push(...Q.mounts)}return B},syncfs(A,B){typeof A=="function"&&(B=A,A=!1),I.syncFSRequests++,I.syncFSRequests>1&&v(`warning: ${I.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);var g=I.getMounts(I.root.mount),Q=0;function C(D){return I.syncFSRequests--,B(D)}function E(D){if(D)return E.errored?void 0:(E.errored=!0,C(D));++Q>=g.length&&C(null)}g.forEach(D=>{if(!D.type.syncfs)return E(null);D.type.syncfs(D,A,E)})},mount(A,B,g){var Q=g==="/",C=!g,E;if(Q&&I.root)throw new I.ErrnoError(10);if(!Q&&!C){var D=I.lookupPath(g,{follow_mount:!1});if(g=D.path,E=D.node,I.isMountpoint(E))throw new I.ErrnoError(10);if(!I.isDir(E.mode))throw new I.ErrnoError(54)}var o={type:A,opts:B,mountpoint:g,mounts:[]},G=A.mount(o);return G.mount=o,o.root=G,Q?I.root=G:E&&(E.mounted=o,E.mount&&E.mount.mounts.push(o)),G},unmount(A){var B=I.lookupPath(A,{follow_mount:!1});if(!I.isMountpoint(B.node))throw new I.ErrnoError(28);var g=B.node,Q=g.mounted,C=I.getMounts(Q);Object.keys(I.nameTable).forEach(D=>{for(var o=I.nameTable[D];o;){var G=o.name_next;C.includes(o.mount)&&I.destroyNode(o),o=G}}),g.mounted=null;var E=g.mount.mounts.indexOf(Q);g.mount.mounts.splice(E,1)},lookup(A,B){return A.node_ops.lookup(A,B)},mknod(A,B,g){var Q=I.lookupPath(A,{parent:!0}),C=Q.node,E=k.basename(A);if(!E||E==="."||E==="..")throw new I.ErrnoError(28);var D=I.mayCreate(C,E);if(D)throw new I.ErrnoError(D);if(!C.node_ops.mknod)throw new I.ErrnoError(63);return C.node_ops.mknod(C,E,B,g)},create(A,B){return B=B!==void 0?B:438,B&=4095,B|=32768,I.mknod(A,B,0)},mkdir(A,B){return B=B!==void 0?B:511,B&=1023,B|=16384,I.mknod(A,B,0)},mkdirTree(A,B){for(var g=A.split("/"),Q="",C=0;C<g.length;++C)if(g[C]){Q+="/"+g[C];try{I.mkdir(Q,B)}catch(E){if(E.errno!=20)throw E}}},mkdev(A,B,g){return typeof g>"u"&&(g=B,B=438),B|=8192,I.mknod(A,B,g)},symlink(A,B){if(!l.resolve(A))throw new I.ErrnoError(44);var g=I.lookupPath(B,{parent:!0}),Q=g.node;if(!Q)throw new I.ErrnoError(44);var C=k.basename(B),E=I.mayCreate(Q,C);if(E)throw new I.ErrnoError(E);if(!Q.node_ops.symlink)throw new I.ErrnoError(63);return Q.node_ops.symlink(Q,C,A)},rename(A,B){var g=k.dirname(A),Q=k.dirname(B),C=k.basename(A),E=k.basename(B),D,o,G;if(D=I.lookupPath(A,{parent:!0}),o=D.node,D=I.lookupPath(B,{parent:!0}),G=D.node,!o||!G)throw new I.ErrnoError(44);if(o.mount!==G.mount)throw new I.ErrnoError(75);var w=I.lookupNode(o,C),a=l.relative(A,Q);if(a.charAt(0)!==".")throw new I.ErrnoError(28);if(a=l.relative(B,g),a.charAt(0)!==".")throw new I.ErrnoError(55);var S;try{S=I.lookupNode(G,E)}catch{}if(w!==S){var M=I.isDir(w.mode),R=I.mayDelete(o,C,M);if(R)throw new I.ErrnoError(R);if(R=S?I.mayDelete(G,E,M):I.mayCreate(G,E),R)throw new I.ErrnoError(R);if(!o.node_ops.rename)throw new I.ErrnoError(63);if(I.isMountpoint(w)||S&&I.isMountpoint(S))throw new I.ErrnoError(10);if(G!==o&&(R=I.nodePermissions(o,"w"),R))throw new I.ErrnoError(R);I.hashRemoveNode(w);try{o.node_ops.rename(w,G,E)}catch(K){throw K}finally{I.hashAddNode(w)}}},rmdir(A){var B=I.lookupPath(A,{parent:!0}),g=B.node,Q=k.basename(A),C=I.lookupNode(g,Q),E=I.mayDelete(g,Q,!0);if(E)throw new I.ErrnoError(E);if(!g.node_ops.rmdir)throw new I.ErrnoError(63);if(I.isMountpoint(C))throw new I.ErrnoError(10);g.node_ops.rmdir(g,Q),I.destroyNode(C)},readdir(A){var B=I.lookupPath(A,{follow:!0}),g=B.node;if(!g.node_ops.readdir)throw new I.ErrnoError(54);return g.node_ops.readdir(g)},unlink(A){var B=I.lookupPath(A,{parent:!0}),g=B.node;if(!g)throw new I.ErrnoError(44);var Q=k.basename(A),C=I.lookupNode(g,Q),E=I.mayDelete(g,Q,!1);if(E)throw new I.ErrnoError(E);if(!g.node_ops.unlink)throw new I.ErrnoError(63);if(I.isMountpoint(C))throw new I.ErrnoError(10);g.node_ops.unlink(g,Q),I.destroyNode(C)},readlink(A){var B=I.lookupPath(A),g=B.node;if(!g)throw new I.ErrnoError(44);if(!g.node_ops.readlink)throw new I.ErrnoError(28);return l.resolve(I.getPath(g.parent),g.node_ops.readlink(g))},stat(A,B){var g=I.lookupPath(A,{follow:!B}),Q=g.node;if(!Q)throw new I.ErrnoError(44);if(!Q.node_ops.getattr)throw new I.ErrnoError(63);return Q.node_ops.getattr(Q)},lstat(A){return I.stat(A,!0)},chmod(A,B,g){var Q;if(typeof A=="string"){var C=I.lookupPath(A,{follow:!g});Q=C.node}else Q=A;if(!Q.node_ops.setattr)throw new I.ErrnoError(63);Q.node_ops.setattr(Q,{mode:B&4095|Q.mode&-4096,timestamp:Date.now()})},lchmod(A,B){I.chmod(A,B,!0)},fchmod(A,B){var g=I.getStreamChecked(A);I.chmod(g.node,B)},chown(A,B,g,Q){var C;if(typeof A=="string"){var E=I.lookupPath(A,{follow:!Q});C=E.node}else C=A;if(!C.node_ops.setattr)throw new I.ErrnoError(63);C.node_ops.setattr(C,{timestamp:Date.now()})},lchown(A,B,g){I.chown(A,B,g,!0)},fchown(A,B,g){var Q=I.getStreamChecked(A);I.chown(Q.node,B,g)},truncate(A,B){if(B<0)throw new I.ErrnoError(28);var g;if(typeof A=="string"){var Q=I.lookupPath(A,{follow:!0});g=Q.node}else g=A;if(!g.node_ops.setattr)throw new I.ErrnoError(63);if(I.isDir(g.mode))throw new I.ErrnoError(31);if(!I.isFile(g.mode))throw new I.ErrnoError(28);var C=I.nodePermissions(g,"w");if(C)throw new I.ErrnoError(C);g.node_ops.setattr(g,{size:B,timestamp:Date.now()})},ftruncate(A,B){var g=I.getStreamChecked(A);if(!(g.flags&2097155))throw new I.ErrnoError(28);I.truncate(g.node,B)},utime(A,B,g){var Q=I.lookupPath(A,{follow:!0}),C=Q.node;C.node_ops.setattr(C,{timestamp:Math.max(B,g)})},open(A,B,g){if(A==="")throw new I.ErrnoError(44);B=typeof B=="string"?Qg(B):B,g=typeof g>"u"?438:g,B&64?g=g&4095|32768:g=0;var Q;if(typeof A=="object")Q=A;else{A=k.normalize(A);try{var C=I.lookupPath(A,{follow:!(B&131072)});Q=C.node}catch{}}var E=!1;if(B&64)if(Q){if(B&128)throw new I.ErrnoError(20)}else Q=I.mknod(A,g,0),E=!0;if(!Q)throw new I.ErrnoError(44);if(I.isChrdev(Q.mode)&&(B&=-513),B&65536&&!I.isDir(Q.mode))throw new I.ErrnoError(54);if(!E){var D=I.mayOpen(Q,B);if(D)throw new I.ErrnoError(D)}B&512&&!E&&I.truncate(Q,0),B&=-131713;var o=I.createStream({node:Q,path:I.getPath(Q),flags:B,seekable:!0,position:0,stream_ops:Q.stream_ops,ungotten:[],error:!1});return o.stream_ops.open&&o.stream_ops.open(o),i.logReadFiles&&!(B&1)&&(I.readFiles||(I.readFiles={}),A in I.readFiles||(I.readFiles[A]=1)),o},close(A){if(I.isClosed(A))throw new I.ErrnoError(8);A.getdents&&(A.getdents=null);try{A.stream_ops.close&&A.stream_ops.close(A)}catch(B){throw B}finally{I.closeStream(A.fd)}A.fd=null},isClosed(A){return A.fd===null},llseek(A,B,g){if(I.isClosed(A))throw new I.ErrnoError(8);if(!A.seekable||!A.stream_ops.llseek)throw new I.ErrnoError(70);if(g!=0&&g!=1&&g!=2)throw new I.ErrnoError(28);return A.position=A.stream_ops.llseek(A,B,g),A.ungotten=[],A.position},read(A,B,g,Q,C){if(Q<0||C<0)throw new I.ErrnoError(28);if(I.isClosed(A))throw new I.ErrnoError(8);if((A.flags&2097155)===1)throw new I.ErrnoError(8);if(I.isDir(A.node.mode))throw new I.ErrnoError(31);if(!A.stream_ops.read)throw new I.ErrnoError(28);var E=typeof C<"u";if(!E)C=A.position;else if(!A.seekable)throw new I.ErrnoError(70);var D=A.stream_ops.read(A,B,g,Q,C);return E||(A.position+=D),D},write(A,B,g,Q,C,E){if(Q<0||C<0)throw new I.ErrnoError(28);if(I.isClosed(A))throw new I.ErrnoError(8);if(!(A.flags&2097155))throw new I.ErrnoError(8);if(I.isDir(A.node.mode))throw new I.ErrnoError(31);if(!A.stream_ops.write)throw new I.ErrnoError(28);A.seekable&&A.flags&1024&&I.llseek(A,0,2);var D=typeof C<"u";if(!D)C=A.position;else if(!A.seekable)throw new I.ErrnoError(70);var o=A.stream_ops.write(A,B,g,Q,C,E);return D||(A.position+=o),o},allocate(A,B,g){if(I.isClosed(A))throw new I.ErrnoError(8);if(B<0||g<=0)throw new I.ErrnoError(28);if(!(A.flags&2097155))throw new I.ErrnoError(8);if(!I.isFile(A.node.mode)&&!I.isDir(A.node.mode))throw new I.ErrnoError(43);if(!A.stream_ops.allocate)throw new I.ErrnoError(138);A.stream_ops.allocate(A,B,g)},mmap(A,B,g,Q,C){if(Q&2&&!(C&2)&&(A.flags&2097155)!==2)throw new I.ErrnoError(2);if((A.flags&2097155)===1)throw new I.ErrnoError(2);if(!A.stream_ops.mmap)throw new I.ErrnoError(43);return A.stream_ops.mmap(A,B,g,Q,C)},msync(A,B,g,Q,C){return A.stream_ops.msync?A.stream_ops.msync(A,B,g,Q,C):0},munmap:A=>0,ioctl(A,B,g){if(!A.stream_ops.ioctl)throw new I.ErrnoError(59);return A.stream_ops.ioctl(A,B,g)},readFile(A,B={}){if(B.flags=B.flags||0,B.encoding=B.encoding||"binary",B.encoding!=="utf8"&&B.encoding!=="binary")throw new Error(`Invalid encoding type "${B.encoding}"`);var g,Q=I.open(A,B.flags),C=I.stat(A),E=C.size,D=new Uint8Array(E);return I.read(Q,D,0,E,0),B.encoding==="utf8"?g=e(D,0):B.encoding==="binary"&&(g=D),I.close(Q),g},writeFile(A,B,g={}){g.flags=g.flags||577;var Q=I.open(A,g.flags,g.mode);if(typeof B=="string"){var C=new Uint8Array(CA(B)+1),E=tA(B,C,0,C.length);I.write(Q,C,0,E,void 0,g.canOwn)}else if(ArrayBuffer.isView(B))I.write(Q,B,0,B.byteLength,void 0,g.canOwn);else throw new Error("Unsupported data type");I.close(Q)},cwd:()=>I.currentPath,chdir(A){var B=I.lookupPath(A,{follow:!0});if(B.node===null)throw new I.ErrnoError(44);if(!I.isDir(B.node.mode))throw new I.ErrnoError(54);var g=I.nodePermissions(B.node,"x");if(g)throw new I.ErrnoError(g);I.currentPath=B.path},createDefaultDirectories(){I.mkdir("/tmp"),I.mkdir("/home"),I.mkdir("/home/web_user")},createDefaultDevices(){I.mkdir("/dev"),I.registerDevice(I.makedev(1,3),{read:()=>0,write:(Q,C,E,D,o)=>D}),I.mkdev("/dev/null",I.makedev(1,3)),f.register(I.makedev(5,0),f.default_tty_ops),f.register(I.makedev(6,0),f.default_tty1_ops),I.mkdev("/dev/tty",I.makedev(5,0)),I.mkdev("/dev/tty1",I.makedev(6,0));var A=new Uint8Array(1024),B=0,g=()=>(B===0&&(B=PA(A).byteLength),A[--B]);I.createDevice("/dev","random",g),I.createDevice("/dev","urandom",g),I.mkdir("/dev/shm"),I.mkdir("/dev/shm/tmp")},createSpecialDirectories(){I.mkdir("/proc");var A=I.mkdir("/proc/self");I.mkdir("/proc/self/fd"),I.mount({mount(){var B=I.createNode(A,"fd",16895,73);return B.node_ops={lookup(g,Q){var C=+Q,E=I.getStreamChecked(C),D={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>E.path}};return D.parent=D,D}},B}},{},"/proc/self/fd")},createStandardStreams(){i.stdin?I.createDevice("/dev","stdin",i.stdin):I.symlink("/dev/tty","/dev/stdin"),i.stdout?I.createDevice("/dev","stdout",null,i.stdout):I.symlink("/dev/tty","/dev/stdout"),i.stderr?I.createDevice("/dev","stderr",null,i.stderr):I.symlink("/dev/tty1","/dev/stderr");var A=I.open("/dev/stdin",0),B=I.open("/dev/stdout",1),g=I.open("/dev/stderr",1)},staticInit(){[44].forEach(A=>{I.genericErrors[A]=new I.ErrnoError(A),I.genericErrors[A].stack="<generic error, no stack>"}),I.nameTable=new Array(4096),I.mount(h,{},"/"),I.createDefaultDirectories(),I.createDefaultDevices(),I.createSpecialDirectories(),I.filesystems={MEMFS:h}},init(A,B,g){I.init.initialized=!0,i.stdin=A||i.stdin,i.stdout=B||i.stdout,i.stderr=g||i.stderr,I.createStandardStreams()},quit(){I.init.initialized=!1;for(var A=0;A<I.streams.length;A++){var B=I.streams[A];B&&I.close(B)}},findObject(A,B){var g=I.analyzePath(A,B);return g.exists?g.object:null},analyzePath(A,B){try{var g=I.lookupPath(A,{follow:!B});A=g.path}catch{}var Q={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var g=I.lookupPath(A,{parent:!0});Q.parentExists=!0,Q.parentPath=g.path,Q.parentObject=g.node,Q.name=k.basename(A),g=I.lookupPath(A,{follow:!B}),Q.exists=!0,Q.path=g.path,Q.object=g.node,Q.name=g.node.name,Q.isRoot=g.path==="/"}catch(C){Q.error=C.errno}return Q},createPath(A,B,g,Q){A=typeof A=="string"?A:I.getPath(A);for(var C=B.split("/").reverse();C.length;){var E=C.pop();if(E){var D=k.join2(A,E);try{I.mkdir(D)}catch{}A=D}}return D},createFile(A,B,g,Q,C){var E=k.join2(typeof A=="string"?A:I.getPath(A),B),D=sA(Q,C);return I.create(E,D)},createDataFile(A,B,g,Q,C,E){var D=B;A&&(A=typeof A=="string"?A:I.getPath(A),D=B?k.join2(A,B):A);var o=sA(Q,C),G=I.create(D,o);if(g){if(typeof g=="string"){for(var w=new Array(g.length),a=0,S=g.length;a<S;++a)w[a]=g.charCodeAt(a);g=w}I.chmod(G,o|146);var M=I.open(G,577);I.write(M,g,0,g.length,0,E),I.close(M),I.chmod(G,o)}},createDevice(A,B,g,Q){var C=k.join2(typeof A=="string"?A:I.getPath(A),B),E=sA(!!g,!!Q);I.createDevice.major||(I.createDevice.major=64);var D=I.makedev(I.createDevice.major++,0);return I.registerDevice(D,{open(o){o.seekable=!1},close(o){var G;(G=Q==null?void 0:Q.buffer)!=null&&G.length&&Q(10)},read(o,G,w,a,S){for(var M=0,R=0;R<a;R++){var K;try{K=g()}catch{throw new I.ErrnoError(29)}if(K===void 0&&M===0)throw new I.ErrnoError(6);if(K==null)break;M++,G[w+R]=K}return M&&(o.node.timestamp=Date.now()),M},write(o,G,w,a,S){for(var M=0;M<a;M++)try{Q(G[w+M])}catch{throw new I.ErrnoError(29)}return a&&(o.node.timestamp=Date.now()),M}}),I.mkdev(C,E,D)},forceLoadFile(A){if(A.isDevice||A.isFolder||A.link||A.contents)return!0;if(typeof XMLHttpRequest<"u")throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(FA)try{A.contents=O(FA(A.url),!0),A.usedBytes=A.contents.length}catch{throw new I.ErrnoError(29)}else throw new Error("Cannot load without read() or XMLHttpRequest.")},createLazyFile(A,B,g,Q,C){function E(){this.lengthKnown=!1,this.chunks=[]}if(E.prototype.get=function(R){if(!(R>this.length-1||R<0)){var K=R%this.chunkSize,y=R/this.chunkSize|0;return this.getter(y)[K]}},E.prototype.setDataGetter=function(R){this.getter=R},E.prototype.cacheLength=function(){var R=new XMLHttpRequest;if(R.open("HEAD",g,!1),R.send(null),!(R.status>=200&&R.status<300||R.status===304))throw new Error("Couldn\'t load "+g+". Status: "+R.status);var K=Number(R.getResponseHeader("Content-length")),y,q=(y=R.getResponseHeader("Accept-Ranges"))&&y==="bytes",d=(y=R.getResponseHeader("Content-Encoding"))&&y==="gzip",N=1024*1024;q||(N=K);var F=(J,t)=>{if(J>t)throw new Error("invalid range ("+J+", "+t+") or no bytes requested!");if(t>K-1)throw new Error("only "+K+" bytes available! programmer error!");var s=new XMLHttpRequest;if(s.open("GET",g,!1),K!==N&&s.setRequestHeader("Range","bytes="+J+"-"+t),s.responseType="arraybuffer",s.overrideMimeType&&s.overrideMimeType("text/plain; charset=x-user-defined"),s.send(null),!(s.status>=200&&s.status<300||s.status===304))throw new Error("Couldn\'t load "+g+". Status: "+s.status);return s.response!==void 0?new Uint8Array(s.response||[]):O(s.responseText||"",!0)},L=this;L.setDataGetter(J=>{var t=J*N,s=(J+1)*N-1;if(s=Math.min(s,K-1),typeof L.chunks[J]>"u"&&(L.chunks[J]=F(t,s)),typeof L.chunks[J]>"u")throw new Error("doXHR failed!");return L.chunks[J]}),(d||!K)&&(N=K=1,K=this.getter(0).length,N=K,dA("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=K,this._chunkSize=N,this.lengthKnown=!0},typeof XMLHttpRequest<"u"){if(!jA)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var D=new E;Object.defineProperties(D,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var o={isDevice:!1,contents:D}}else var o={isDevice:!1,url:g};var G=I.createFile(A,B,o,Q,C);o.contents?G.contents=o.contents:o.url&&(G.contents=null,G.url=o.url),Object.defineProperties(G,{usedBytes:{get:function(){return this.contents.length}}});var w={},a=Object.keys(G.stream_ops);a.forEach(M=>{var R=G.stream_ops[M];w[M]=(...K)=>(I.forceLoadFile(G),R(...K))});function S(M,R,K,y,q){var d=M.node.contents;if(q>=d.length)return 0;var N=Math.min(d.length-q,y);if(d.slice)for(var F=0;F<N;F++)R[K+F]=d[q+F];else for(var F=0;F<N;F++)R[K+F]=d.get(q+F);return N}return w.read=(M,R,K,y,q)=>(I.forceLoadFile(G),S(M,R,K,y,q)),w.mmap=(M,R,K,y,q)=>{I.forceLoadFile(G);var d=_A(R);if(!d)throw new I.ErrnoError(48);return S(M,x,d,R,K),{ptr:d,allocated:!0}},G.stream_ops=w,G}},H={DEFAULT_POLLMASK:5,calculateAt(A,B,g){if(k.isAbs(B))return B;var Q;if(A===-100)Q=I.cwd();else{var C=H.getStreamFromFD(A);Q=C.path}if(B.length==0){if(!g)throw new I.ErrnoError(44);return Q}return k.join2(Q,B)},doStat(A,B,g){var Q=A(B);Y[g>>2]=Q.dev,Y[g+4>>2]=Q.mode,c[g+8>>2]=Q.nlink,Y[g+12>>2]=Q.uid,Y[g+16>>2]=Q.gid,Y[g+20>>2]=Q.rdev,Z=[Q.size>>>0,(U=Q.size,+Math.abs(U)>=1?U>0?+Math.floor(U/4294967296)>>>0:~~+Math.ceil((U-+(~~U>>>0))/4294967296)>>>0:0)],Y[g+24>>2]=Z[0],Y[g+28>>2]=Z[1],Y[g+32>>2]=4096,Y[g+36>>2]=Q.blocks;var C=Q.atime.getTime(),E=Q.mtime.getTime(),D=Q.ctime.getTime();return Z=[Math.floor(C/1e3)>>>0,(U=Math.floor(C/1e3),+Math.abs(U)>=1?U>0?+Math.floor(U/4294967296)>>>0:~~+Math.ceil((U-+(~~U>>>0))/4294967296)>>>0:0)],Y[g+40>>2]=Z[0],Y[g+44>>2]=Z[1],c[g+48>>2]=C%1e3*1e3,Z=[Math.floor(E/1e3)>>>0,(U=Math.floor(E/1e3),+Math.abs(U)>=1?U>0?+Math.floor(U/4294967296)>>>0:~~+Math.ceil((U-+(~~U>>>0))/4294967296)>>>0:0)],Y[g+56>>2]=Z[0],Y[g+60>>2]=Z[1],c[g+64>>2]=E%1e3*1e3,Z=[Math.floor(D/1e3)>>>0,(U=Math.floor(D/1e3),+Math.abs(U)>=1?U>0?+Math.floor(U/4294967296)>>>0:~~+Math.ceil((U-+(~~U>>>0))/4294967296)>>>0:0)],Y[g+72>>2]=Z[0],Y[g+76>>2]=Z[1],c[g+80>>2]=D%1e3*1e3,Z=[Q.ino>>>0,(U=Q.ino,+Math.abs(U)>=1?U>0?+Math.floor(U/4294967296)>>>0:~~+Math.ceil((U-+(~~U>>>0))/4294967296)>>>0:0)],Y[g+88>>2]=Z[0],Y[g+92>>2]=Z[1],0},doMsync(A,B,g,Q,C){if(!I.isFile(B.node.mode))throw new I.ErrnoError(43);if(Q&2)return 0;var E=r.slice(A,A+g);I.msync(B,E,C,g,Q)},varargs:void 0,get(){var A=Y[+H.varargs>>2];return H.varargs+=4,A},getp(){return H.get()},getStr(A){var B=m(A);return B},getStreamFromFD(A){var B=I.getStreamChecked(A);return B}};function Ig(A,B,g,Q){try{if(B=H.getStr(B),B=H.calculateAt(A,B),g&-8)return-28;var C=I.lookupPath(B,{follow:!0}),E=C.node;if(!E)return-44;var D="";return g&4&&(D+="r"),g&2&&(D+="w"),g&1&&(D+="x"),D&&I.nodePermissions(E,D)?-2:0}catch(o){if(typeof I>"u"||o.name!=="ErrnoError")throw o;return-o.errno}}function Cg(A,B,g){H.varargs=g;try{var Q=H.getStreamFromFD(A);switch(B){case 0:{var C=H.get();if(C<0)return-28;for(;I.streams[C];)C++;var E;return E=I.createStream(Q,C),E.fd}case 1:case 2:return 0;case 3:return Q.flags;case 4:{var C=H.get();return Q.flags|=C,0}case 12:{var C=H.getp(),D=0;return KA[C+D>>1]=2,0}case 13:case 14:return 0}return-28}catch(o){if(typeof I>"u"||o.name!=="ErrnoError")throw o;return-o.errno}}var WA=(A,B,g)=>tA(A,r,B,g);function Eg(A,B){try{if(B===0)return-28;var g=I.cwd(),Q=CA(g)+1;return B<Q?-68:(WA(g,A,B),Q)}catch(C){if(typeof I>"u"||C.name!=="ErrnoError")throw C;return-C.errno}}function Dg(A,B,g){H.varargs=g;try{var Q=H.getStreamFromFD(A);switch(B){case 21509:return Q.tty?0:-59;case 21505:{if(!Q.tty)return-59;if(Q.tty.ops.ioctl_tcgets){var C=Q.tty.ops.ioctl_tcgets(Q),E=H.getp();Y[E>>2]=C.c_iflag||0,Y[E+4>>2]=C.c_oflag||0,Y[E+8>>2]=C.c_cflag||0,Y[E+12>>2]=C.c_lflag||0;for(var D=0;D<32;D++)x[E+D+17]=C.c_cc[D]||0;return 0}return 0}case 21510:case 21511:case 21512:return Q.tty?0:-59;case 21506:case 21507:case 21508:{if(!Q.tty)return-59;if(Q.tty.ops.ioctl_tcsets){for(var E=H.getp(),o=Y[E>>2],G=Y[E+4>>2],w=Y[E+8>>2],a=Y[E+12>>2],S=[],D=0;D<32;D++)S.push(x[E+D+17]);return Q.tty.ops.ioctl_tcsets(Q.tty,B,{c_iflag:o,c_oflag:G,c_cflag:w,c_lflag:a,c_cc:S})}return 0}case 21519:{if(!Q.tty)return-59;var E=H.getp();return Y[E>>2]=0,0}case 21520:return Q.tty?-28:-59;case 21531:{var E=H.getp();return I.ioctl(Q,B,E)}case 21523:{if(!Q.tty)return-59;if(Q.tty.ops.ioctl_tiocgwinsz){var M=Q.tty.ops.ioctl_tiocgwinsz(Q.tty),E=H.getp();KA[E>>1]=M[0],KA[E+2>>1]=M[1]}return 0}case 21524:return Q.tty?0:-59;case 21515:return Q.tty?0:-59;default:return-28}}catch(R){if(typeof I>"u"||R.name!=="ErrnoError")throw R;return-R.errno}}function og(A,B,g,Q){H.varargs=Q;try{B=H.getStr(B),B=H.calculateAt(A,B);var C=Q?H.get():0;return I.open(B,g,C).fd}catch(E){if(typeof I>"u"||E.name!=="ErrnoError")throw E;return-E.errno}}function ig(A){try{return A=H.getStr(A),I.rmdir(A),0}catch(B){if(typeof I>"u"||B.name!=="ErrnoError")throw B;return-B.errno}}function Ng(A,B){try{return A=H.getStr(A),H.doStat(I.stat,A,B)}catch(g){if(typeof I>"u"||g.name!=="ErrnoError")throw g;return-g.errno}}function Gg(A,B,g){try{return B=H.getStr(B),B=H.calculateAt(A,B),g===0?I.unlink(B):g===512?I.rmdir(B):V("Invalid flags passed to unlinkat"),0}catch(Q){if(typeof I>"u"||Q.name!=="ErrnoError")throw Q;return-Q.errno}}var wg=()=>{throw 1/0},BA=A=>A%4===0&&(A%100!==0||A%400===0),Rg=[0,31,60,91,121,152,182,213,244,274,305,335],Fg=[0,31,59,90,120,151,181,212,243,273,304,334],Mg=A=>{var B=BA(A.getFullYear()),g=B?Rg:Fg,Q=g[A.getMonth()]+A.getDate()-1;return Q},$A=(A,B)=>B+2097152>>>0<4194305-!!A?(A>>>0)+B*4294967296:NaN;function Kg(A,B,g){var Q=$A(A,B),C=new Date(Q*1e3);Y[g>>2]=C.getSeconds(),Y[g+4>>2]=C.getMinutes(),Y[g+8>>2]=C.getHours(),Y[g+12>>2]=C.getDate(),Y[g+16>>2]=C.getMonth(),Y[g+20>>2]=C.getFullYear()-1900,Y[g+24>>2]=C.getDay();var E=Mg(C)|0;Y[g+28>>2]=E,Y[g+36>>2]=-(C.getTimezoneOffset()*60);var D=new Date(C.getFullYear(),0,1),o=new Date(C.getFullYear(),6,1).getTimezoneOffset(),G=D.getTimezoneOffset(),w=(o!=G&&C.getTimezoneOffset()==Math.min(G,o))|0;Y[g+32>>2]=w}var mA=A=>{var B=CA(A)+1,g=bA(B);return g&&WA(A,g,B),g},Yg=(A,B,g)=>{var Q=new Date().getFullYear(),C=new Date(Q,0,1),E=new Date(Q,6,1),D=C.getTimezoneOffset(),o=E.getTimezoneOffset(),G=Math.max(D,o);c[A>>2]=G*60,Y[B>>2]=Number(D!=o);function w(K){var y=K.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);return y?y[1]:"GMT"}var a=w(C),S=w(E),M=mA(a),R=mA(S);o<D?(c[g>>2]=M,c[g+4>>2]=R):(c[g>>2]=R,c[g+4>>2]=M)},hg=()=>{V("")},ag=()=>Date.now(),Ug=(A,B,g)=>r.copyWithin(A,B,B+g),Sg=()=>2147483648,Hg=A=>{var B=u.buffer,g=(A-B.byteLength+65535)/65536;try{return u.grow(g),rA(),1}catch{}},kg=A=>{var B=r.length;A>>>=0;var g=Sg();if(A>g)return!1;for(var Q=(G,w)=>G+(w-G%w)%w,C=1;C<=4;C*=2){var E=B*(1+.2/C);E=Math.min(E,A+100663296);var D=Math.min(g,Q(Math.max(A,E),65536)),o=Hg(D);if(o)return!0}return!1},LA={},yg=()=>UA||"./this.program",gA=()=>{if(!gA.strings){var A=(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",B={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:A,_:yg()};for(var g in LA)LA[g]===void 0?delete B[g]:B[g]=LA[g];var Q=[];for(var g in B)Q.push(`${g}=${B[g]}`);gA.strings=Q}return gA.strings},Jg=(A,B)=>{for(var g=0;g<A.length;++g)x[B++]=A.charCodeAt(g);x[B]=0},cg=(A,B)=>{var g=0;return gA().forEach((Q,C)=>{var E=B+g;c[A+C*4>>2]=E,Jg(Q,E),g+=Q.length+1}),0},sg=(A,B)=>{var g=gA();c[A>>2]=g.length;var Q=0;return g.forEach(C=>Q+=C.length+1),c[B>>2]=Q,0},Lg=0,Zg=()=>XB||Lg>0,dg=A=>{var B;HA=A,Zg()||((B=i.onExit)==null||B.call(i,A),qA=!0),SA(A,new hA(A))},AB=(A,B)=>{HA=A,dg(A)},Tg=AB;function qg(A){try{var B=H.getStreamFromFD(A);return I.close(B),0}catch(g){if(typeof I>"u"||g.name!=="ErrnoError")throw g;return g.errno}}var xg=(A,B,g,Q)=>{for(var C=0,E=0;E<g;E++){var D=c[B>>2],o=c[B+4>>2];B+=8;var G=I.read(A,x,D,o,Q);if(G<0)return-1;if(C+=G,G<o)break;typeof Q<"u"&&(Q+=G)}return C};function tg(A,B,g,Q){try{var C=H.getStreamFromFD(A),E=xg(C,B,g);return c[Q>>2]=E,0}catch(D){if(typeof I>"u"||D.name!=="ErrnoError")throw D;return D.errno}}function Wg(A,B,g,Q,C){var E=$A(B,g);try{if(isNaN(E))return 61;var D=H.getStreamFromFD(A);return I.llseek(D,E,Q),Z=[D.position>>>0,(U=D.position,+Math.abs(U)>=1?U>0?+Math.floor(U/4294967296)>>>0:~~+Math.ceil((U-+(~~U>>>0))/4294967296)>>>0:0)],Y[C>>2]=Z[0],Y[C+4>>2]=Z[1],D.getdents&&E===0&&Q===0&&(D.getdents=null),0}catch(o){if(typeof I>"u"||o.name!=="ErrnoError")throw o;return o.errno}}var bg=(A,B,g,Q)=>{for(var C=0,E=0;E<g;E++){var D=c[B>>2],o=c[B+4>>2];B+=8;var G=I.write(A,x,D,o,Q);if(G<0)return-1;C+=G,typeof Q<"u"&&(Q+=G)}return C};function zg(A,B,g,Q){try{var C=H.getStreamFromFD(A),E=bg(C,B,g);return c[Q>>2]=E,0}catch(D){if(typeof I>"u"||D.name!=="ErrnoError")throw D;return D.errno}}function lg(A,B,g){return cB(A,B,g)}function mg(A,B){return sB(A,B)}var pg=(A,B)=>{for(var g=0,Q=0;Q<=B;g+=A[Q++]);return g},BB=[31,29,31,30,31,30,31,31,30,31,30,31],gB=[31,28,31,30,31,30,31,31,30,31,30,31],fg=(A,B)=>{for(var g=new Date(A.getTime());B>0;){var Q=BA(g.getFullYear()),C=g.getMonth(),E=(Q?BB:gB)[C];if(B>E-g.getDate())B-=E-g.getDate()+1,g.setDate(1),C<11?g.setMonth(C+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1));else return g.setDate(g.getDate()+B),g}return g},QB=(A,B)=>{x.set(A,B)},Og=(A,B,g,Q)=>{var C=c[Q+40>>2],E={tm_sec:Y[Q>>2],tm_min:Y[Q+4>>2],tm_hour:Y[Q+8>>2],tm_mday:Y[Q+12>>2],tm_mon:Y[Q+16>>2],tm_year:Y[Q+20>>2],tm_wday:Y[Q+24>>2],tm_yday:Y[Q+28>>2],tm_isdst:Y[Q+32>>2],tm_gmtoff:Y[Q+36>>2],tm_zone:C?m(C):""},D=m(g),o={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var G in o)D=D.replace(new RegExp(G,"g"),o[G]);var w=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],a=["January","February","March","April","May","June","July","August","September","October","November","December"];function S(N,F,L){for(var J=typeof N=="number"?N.toString():N||"";J.length<F;)J=L[0]+J;return J}function M(N,F){return S(N,F,"0")}function R(N,F){function L(t){return t<0?-1:t>0?1:0}var J;return(J=L(N.getFullYear()-F.getFullYear()))===0&&(J=L(N.getMonth()-F.getMonth()))===0&&(J=L(N.getDate()-F.getDate())),J}function K(N){switch(N.getDay()){case 0:return new Date(N.getFullYear()-1,11,29);case 1:return N;case 2:return new Date(N.getFullYear(),0,3);case 3:return new Date(N.getFullYear(),0,2);case 4:return new Date(N.getFullYear(),0,1);case 5:return new Date(N.getFullYear()-1,11,31);case 6:return new Date(N.getFullYear()-1,11,30)}}function y(N){var F=fg(new Date(N.tm_year+1900,0,1),N.tm_yday),L=new Date(F.getFullYear(),0,4),J=new Date(F.getFullYear()+1,0,4),t=K(L),s=K(J);return R(t,F)<=0?R(s,F)<=0?F.getFullYear()+1:F.getFullYear():F.getFullYear()-1}var q={"%a":N=>w[N.tm_wday].substring(0,3),"%A":N=>w[N.tm_wday],"%b":N=>a[N.tm_mon].substring(0,3),"%B":N=>a[N.tm_mon],"%C":N=>{var F=N.tm_year+1900;return M(F/100|0,2)},"%d":N=>M(N.tm_mday,2),"%e":N=>S(N.tm_mday,2," "),"%g":N=>y(N).toString().substring(2),"%G":y,"%H":N=>M(N.tm_hour,2),"%I":N=>{var F=N.tm_hour;return F==0?F=12:F>12&&(F-=12),M(F,2)},"%j":N=>M(N.tm_mday+pg(BA(N.tm_year+1900)?BB:gB,N.tm_mon-1),3),"%m":N=>M(N.tm_mon+1,2),"%M":N=>M(N.tm_min,2),"%n":()=>`\n`,"%p":N=>N.tm_hour>=0&&N.tm_hour<12?"AM":"PM","%S":N=>M(N.tm_sec,2),"%t":()=>"	","%u":N=>N.tm_wday||7,"%U":N=>{var F=N.tm_yday+7-N.tm_wday;return M(Math.floor(F/7),2)},"%V":N=>{var F=Math.floor((N.tm_yday+7-(N.tm_wday+6)%7)/7);if((N.tm_wday+371-N.tm_yday-2)%7<=2&&F++,F){if(F==53){var J=(N.tm_wday+371-N.tm_yday)%7;J!=4&&(J!=3||!BA(N.tm_year))&&(F=1)}}else{F=52;var L=(N.tm_wday+7-N.tm_yday-1)%7;(L==4||L==5&&BA(N.tm_year%400-1))&&F++}return M(F,2)},"%w":N=>N.tm_wday,"%W":N=>{var F=N.tm_yday+7-(N.tm_wday+6)%7;return M(Math.floor(F/7),2)},"%y":N=>(N.tm_year+1900).toString().substring(2),"%Y":N=>N.tm_year+1900,"%z":N=>{var F=N.tm_gmtoff,L=F>=0;return F=Math.abs(F)/60,F=F/60*100+F%60,(L?"+":"-")+String("0000"+F).slice(-4)},"%Z":N=>N.tm_zone,"%%":()=>"%"};D=D.replace(/%%/g,"\\0\\0");for(var G in q)D.includes(G)&&(D=D.replace(new RegExp(G,"g"),q[G](E)));D=D.replace(/\\0\\0/g,"%");var d=O(D,!1);return d.length>B?0:(QB(d,A),d.length-1)},jg=A=>{if(A instanceof hA||A=="unwind")return HA;SA(1,A)},IB=A=>{var B=CA(A)+1,g=yA(B);return WA(A,g,B),g},DA=[],CB,p=A=>{var B=DA[A];return B||(A>=DA.length&&(DA.length=A+1),DA[A]=B=CB.get(A)),B},EB=A=>{var B=i["_"+A];return B},ng=(A,B,g,Q,C)=>{var E={string:K=>{var y=0;return K!=null&&K!==0&&(y=IB(K)),y},array:K=>{var y=yA(K.length);return QB(K,y),y}};function D(K){return B==="string"?m(K):B==="boolean"?Boolean(K):K}var o=EB(A),G=[],w=0;if(Q)for(var a=0;a<Q.length;a++){var S=E[g[a]];S?(w===0&&(w=W()),G[a]=S(Q[a])):G[a]=Q[a]}var M=o(...G);function R(K){return w!==0&&b(w),D(K)}return M=R(M),M},DB=(A,B,g,Q)=>{var C=!g||g.every(D=>D==="number"||D==="boolean"),E=B!=="string";return E&&C&&!Q?EB(A):(...D)=>ng(A,B,g,D,Q)},oB=function(A,B,g,Q){A||(A=this),this.parent=A,this.mount=A.mount,this.mounted=null,this.id=I.nextInode++,this.name=B,this.mode=g,this.node_ops={},this.stream_ops={},this.rdev=Q},oA=365,iA=146;Object.defineProperties(oB.prototype,{read:{get:function(){return(this.mode&oA)===oA},set:function(A){A?this.mode|=oA:this.mode&=~oA}},write:{get:function(){return(this.mode&iA)===iA},set:function(A){A?this.mode|=iA:this.mode&=~iA}},isFolder:{get:function(){return I.isDir(this.mode)}},isDevice:{get:function(){return I.isChrdev(this.mode)}}});I.FSNode=oB;I.createPreloadedFile=gg;I.staticInit();var rg={a:vB,F:Ig,p:Cg,C:Eg,H:Dg,D:og,y:ig,x:Ng,z:Gg,u:wg,s:Kg,w:Yg,f:hg,m:ag,E:Ug,v:kg,A:cg,B:sg,l:Tg,o:qg,G:tg,t:Wg,n:zg,I:BQ,i:eg,d:vg,j:Pg,b:_g,c:ug,e:Xg,h:$g,g:AQ,r:lg,q:mg,k:Og},T=eB();var bA=A=>(bA=T.L)(A),iB=i._compileLaTeX=()=>(iB=i._compileLaTeX=T.M)(),NB=i._compileFormat=()=>(NB=i._compileFormat=T.N)(),GB=i._compileBibtex=()=>(GB=i._compileBibtex=T.O)(),Vg=i._setMainEntry=A=>(Vg=i._setMainEntry=T.P)(A),wB=i._main=(A,B)=>(wB=i._main=T.Q)(A,B),z=(A,B)=>(z=T.S)(A,B),W=()=>(W=T.T)(),b=A=>(b=T.U)(A),yA=A=>(yA=T.V)(A);function eg(A,B){var g=W();try{return p(A)(B)}catch(Q){if(b(g),Q!==Q+0)throw Q;z(1,0)}}function Xg(A){var B=W();try{p(A)()}catch(g){if(b(B),g!==g+0)throw g;z(1,0)}}function vg(A,B,g){var Q=W();try{return p(A)(B,g)}catch(C){if(b(Q),C!==C+0)throw C;z(1,0)}}function ug(A,B,g,Q,C,E){var D=W();try{return p(A)(B,g,Q,C,E)}catch(o){if(b(D),o!==o+0)throw o;z(1,0)}}function Pg(A,B,g,Q){var C=W();try{return p(A)(B,g,Q)}catch(E){if(b(C),E!==E+0)throw E;z(1,0)}}function _g(A,B,g,Q,C){var E=W();try{return p(A)(B,g,Q,C)}catch(D){if(b(E),D!==D+0)throw D;z(1,0)}}function $g(A,B){var g=W();try{p(A)(B)}catch(Q){if(b(g),Q!==Q+0)throw Q;z(1,0)}}function AQ(A,B,g){var Q=W();try{p(A)(B,g)}catch(C){if(b(Q),C!==C+0)throw C;z(1,0)}}function BQ(A){var B=W();try{return p(A)()}catch(g){if(b(B),g!==g+0)throw g;z(1,0)}}i.cwrap=DB;var aA;AA=function A(){aA||RB(),aA||(AA=A)};function gQ(A=[]){var B=wB;A.unshift(UA);var g=A.length,Q=yA((g+1)*4),C=Q;A.forEach(D=>{c[C>>2]=IB(D),C+=4}),c[C>>2]=0;try{var E=B(g,Q);return AB(E,!0),E}catch(D){return jg(D)}}function RB(A=TA){if(n>0||(bB(),n>0))return;function B(){aA||(aA=!0,i.calledRun=!0,!qA&&(zB(),lB(),i.onRuntimeInitialized&&i.onRuntimeInitialized(),FB&&gQ(A),mB()))}i.setStatus?(i.setStatus("Running..."),setTimeout(function(){setTimeout(function(){i.setStatus("")},1),B()},1)):B()}if(i.preInit)for(typeof i.preInit=="function"&&(i.preInit=[i.preInit]);i.preInit.length>0;)i.preInit.pop()();var FB=!0;i.noInitialRun&&(FB=!1);RB();\n');
}
var init_swiftlatexpdftex_worker = __esm({
  "swiftlatexpdftex.worker.js"() {
    init_inline_worker();
  }
});

// PdfTeXEngine.js
var require_PdfTeXEngine = __commonJS({
  "PdfTeXEngine.js"(exports, module2) {
    "use strict";
    var __awaiter2 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator2 = exports && exports.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1)
          throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f)
          throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _)
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            if (y = 0, t)
              op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return { value: op[1], done: false };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2])
                  _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5)
          throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PdfTeXEngine = exports.CompileResult = exports.EngineStatus = void 0;
    var EngineStatus;
    (function(EngineStatus2) {
      EngineStatus2[EngineStatus2["Init"] = 1] = "Init";
      EngineStatus2[EngineStatus2["Ready"] = 2] = "Ready";
      EngineStatus2[EngineStatus2["Busy"] = 3] = "Busy";
      EngineStatus2[EngineStatus2["Error"] = 4] = "Error";
    })(EngineStatus || (exports.EngineStatus = EngineStatus = {}));
    var fs2 = require("fs");
    var path2 = require("path");
    var swiftlatexpdftex_worker_js_1 = (init_swiftlatexpdftex_worker(), __toCommonJS(swiftlatexpdftex_worker_exports));
    var CompileResult = (
      /** @class */
      function() {
        function CompileResult2() {
          this.pdf = void 0;
          this.status = -254;
          this.log = "No log";
        }
        return CompileResult2;
      }()
    );
    exports.CompileResult = CompileResult;
    var PdfTeXEngine2 = (
      /** @class */
      function() {
        function PdfTeXEngine3() {
          this.latexWorker = void 0;
          this.latexWorkerStatus = EngineStatus.Init;
        }
        PdfTeXEngine3.prototype.loadEngine = function() {
          return __awaiter2(this, void 0, void 0, function() {
            var _this = this;
            return __generator2(this, function(_a) {
              switch (_a.label) {
                case 0:
                  if (this.latexWorker !== void 0) {
                    throw new Error("Other instance is running, abort()");
                  }
                  this.latexWorkerStatus = EngineStatus.Init;
                  return [4, new Promise(function(resolve, reject) {
                    _this.latexWorker = (0, swiftlatexpdftex_worker_js_1.default)();
                    _this.latexWorker.onmessage = function(ev) {
                      var data = ev["data"];
                      var cmd = data["result"];
                      if (cmd === "ok") {
                        _this.latexWorkerStatus = EngineStatus.Ready;
                        resolve();
                      } else {
                        _this.latexWorkerStatus = EngineStatus.Error;
                        reject();
                      }
                    };
                  })];
                case 1:
                  _a.sent();
                  this.latexWorker.onmessage = function(_) {
                  };
                  this.latexWorker.onerror = function(_) {
                  };
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        };
        PdfTeXEngine3.prototype.isReady = function() {
          return this.latexWorkerStatus === EngineStatus.Ready;
        };
        PdfTeXEngine3.prototype.checkEngineStatus = function() {
          if (!this.isReady()) {
            throw Error("Engine is still spinning or not ready yet!");
          }
        };
        PdfTeXEngine3.prototype.compileLaTeX = function() {
          return __awaiter2(this, void 0, void 0, function() {
            var start_compile_time, res;
            var _this = this;
            return __generator2(this, function(_a) {
              switch (_a.label) {
                case 0:
                  this.checkEngineStatus();
                  this.latexWorkerStatus = EngineStatus.Busy;
                  start_compile_time = performance.now();
                  return [4, new Promise(function(resolve, _) {
                    _this.latexWorker.onmessage = function(ev) {
                      var data = ev["data"];
                      var cmd = data["cmd"];
                      if (cmd !== "compile")
                        return;
                      var result = data["result"];
                      var log = data["log"];
                      var status = data["status"];
                      _this.latexWorkerStatus = EngineStatus.Ready;
                      console.log("Engine compilation finish " + (performance.now() - start_compile_time));
                      var nice_report = new CompileResult();
                      nice_report.status = status;
                      nice_report.log = log;
                      if (result === "ok") {
                        var pdf = new Uint8Array(data["pdf"]);
                        nice_report.pdf = pdf;
                      }
                      resolve(nice_report);
                    };
                    _this.latexWorker.postMessage({ "cmd": "compilelatex" });
                    console.log("Engine compilation start");
                  })];
                case 1:
                  res = _a.sent();
                  this.latexWorker.onmessage = function(_) {
                  };
                  return [2, res];
              }
            });
          });
        };
        PdfTeXEngine3.prototype.compileFormat = function() {
          return __awaiter2(this, void 0, void 0, function() {
            var _this = this;
            return __generator2(this, function(_a) {
              this.checkEngineStatus();
              this.latexWorkerStatus = EngineStatus.Busy;
              new Promise(function(resolve, reject) {
                _this.latexWorker.onmessage = function(ev) {
                  var data = ev["data"];
                  var cmd = data["cmd"];
                  if (cmd !== "compile")
                    return;
                  var result = data["result"];
                  var log = data["log"];
                  _this.latexWorkerStatus = EngineStatus.Ready;
                  if (result === "ok") {
                    var formatArray = data["pdf"];
                    var formatBlob = new Blob([formatArray], { type: "application/octet-stream" });
                    var formatURL_1 = URL.createObjectURL(formatBlob);
                    setTimeout(function() {
                      URL.revokeObjectURL(formatURL_1);
                    }, 3e4);
                    console.log("Download format file via " + formatURL_1);
                    resolve();
                  } else {
                    reject(log);
                  }
                };
                _this.latexWorker.postMessage({ "cmd": "compileformat" });
              });
              this.latexWorker.onmessage = function(_) {
              };
              return [
                2
                /*return*/
              ];
            });
          });
        };
        PdfTeXEngine3.prototype.fetchCacheData = function() {
          return __awaiter2(this, void 0, void 0, function() {
            var res;
            var _this = this;
            return __generator2(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, new Promise(function(resolve, reject) {
                    _this.latexWorker.onmessage = function(ev) {
                      var data = ev["data"];
                      var cmd = data["cmd"];
                      if (cmd !== "fetchcache")
                        return;
                      var result = data["result"];
                      var texlive404_cache = data["texlive404_cache"];
                      var texlive200_cache = data["texlive200_cache"];
                      var pk404_cache = data["pk404_cache"];
                      var pk200_cache = data["pk200_cache"];
                      if (result === "ok") {
                        resolve([texlive404_cache, texlive200_cache, pk404_cache, pk200_cache]);
                      } else {
                        reject("failed to fetch cache data");
                      }
                    };
                    _this.latexWorker.postMessage({ "cmd": "fetchcache" });
                  })];
                case 1:
                  res = _a.sent();
                  this.latexWorker.onmessage = function(_) {
                  };
                  return [2, res];
              }
            });
          });
        };
        PdfTeXEngine3.prototype.writeCacheData = function(texlive404_cache, texlive200_cache, pk404_cache, pk200_cache) {
          this.checkEngineStatus();
          if (this.latexWorker !== void 0) {
            this.latexWorker.postMessage({ "cmd": "writecache", "texlive404_cache": texlive404_cache, "texlive200_cache": texlive200_cache, "pk404_cache": pk404_cache, "pk200_cache": pk200_cache });
          }
        };
        PdfTeXEngine3.prototype.fetchTexFiles = function(filenames, host_dir) {
          return __awaiter2(this, void 0, void 0, function() {
            var resolves, promises;
            var _this = this;
            return __generator2(this, function(_a) {
              switch (_a.label) {
                case 0:
                  resolves = /* @__PURE__ */ new Map();
                  this.latexWorker.onmessage = function(ev) {
                    var data = ev["data"];
                    var cmd = data["cmd"];
                    if (cmd !== "fetchfile")
                      return;
                    var result = data["result"];
                    var fileContent = new Uint8Array(data["content"]);
                    var fname = data["filename"];
                    fs2.writeFileSync(path2.join(host_dir, fname), fileContent);
                    if (result === "ok") {
                      resolves.get(fname)();
                    } else {
                      console.log("Failed to fetch ".concat(fname, " from memfs"));
                    }
                  };
                  promises = filenames.map(function(filename) {
                    return new Promise(function(resolve) {
                      resolves.set(filename, resolve);
                      _this.latexWorker.postMessage({ "cmd": "fetchfile", "filename": filename });
                    });
                  });
                  return [4, Promise.all(promises)];
                case 1:
                  _a.sent();
                  this.latexWorker.onmessage = function(_) {
                  };
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        };
        PdfTeXEngine3.prototype.writeTexFSFile = function(filename, srccode) {
          this.checkEngineStatus();
          if (this.latexWorker !== void 0) {
            this.latexWorker.postMessage({ "cmd": "writetexfile", "url": filename, "src": srccode });
          }
        };
        PdfTeXEngine3.prototype.setEngineMainFile = function(filename) {
          this.checkEngineStatus();
          if (this.latexWorker !== void 0) {
            this.latexWorker.postMessage({ "cmd": "setmainfile", "url": filename });
          }
        };
        PdfTeXEngine3.prototype.writeMemFSFile = function(filename, srccode) {
          this.checkEngineStatus();
          if (this.latexWorker !== void 0) {
            this.latexWorker.postMessage({ "cmd": "writefile", "url": filename, "src": srccode });
          }
        };
        PdfTeXEngine3.prototype.makeMemFSFolder = function(folder) {
          this.checkEngineStatus();
          if (this.latexWorker !== void 0) {
            if (folder === "" || folder === "/") {
              return;
            }
            this.latexWorker.postMessage({ "cmd": "mkdir", "url": folder });
          }
        };
        PdfTeXEngine3.prototype.flushCache = function() {
          this.checkEngineStatus();
          if (this.latexWorker !== void 0) {
            this.latexWorker.postMessage({ "cmd": "flushcache" });
          }
        };
        PdfTeXEngine3.prototype.setTexliveEndpoint = function(url) {
          if (this.latexWorker !== void 0) {
            this.latexWorker.postMessage({ "cmd": "settexliveurl", "url": url });
          }
        };
        PdfTeXEngine3.prototype.closeWorker = function() {
          if (this.latexWorker !== void 0) {
            this.latexWorker.postMessage({ "cmd": "grace" });
            this.latexWorker = void 0;
          }
        };
        return PdfTeXEngine3;
      }()
    );
    exports.PdfTeXEngine = PdfTeXEngine2;
    module2.exports = { PdfTeXEngine: PdfTeXEngine2 };
  }
});

// node_modules/pdf-lib/node_modules/tslib/tslib.es6.js
var tslib_es6_exports = {};
__export(tslib_es6_exports, {
  __assign: () => __assign,
  __asyncDelegator: () => __asyncDelegator,
  __asyncGenerator: () => __asyncGenerator,
  __asyncValues: () => __asyncValues,
  __await: () => __await,
  __awaiter: () => __awaiter,
  __classPrivateFieldGet: () => __classPrivateFieldGet,
  __classPrivateFieldSet: () => __classPrivateFieldSet,
  __createBinding: () => __createBinding,
  __decorate: () => __decorate,
  __exportStar: () => __exportStar,
  __extends: () => __extends,
  __generator: () => __generator,
  __importDefault: () => __importDefault,
  __importStar: () => __importStar,
  __makeTemplateObject: () => __makeTemplateObject,
  __metadata: () => __metadata,
  __param: () => __param,
  __read: () => __read,
  __rest: () => __rest,
  __spread: () => __spread,
  __spreadArrays: () => __spreadArrays,
  __values: () => __values
});
function __extends(d, b) {
  extendStatics(d, b);
  function __() {
    this.constructor = d;
  }
  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
function __rest(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
}
function __decorate(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d = decorators[i])
        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
  return function(target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
    return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _ = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    while (_)
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
          return t;
        if (y = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _.label++;
            return { value: op[1], done: false };
          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }
            if (t && _.label < t[2]) {
              _.label = t[2];
              _.ops.push(op);
              break;
            }
            if (t[2])
              _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __createBinding(o, m, k, k2) {
  if (k2 === void 0)
    k2 = k;
  o[k2] = m[k];
}
function __exportStar(m, exports) {
  for (var p in m)
    if (p !== "default" && !exports.hasOwnProperty(p))
      exports[p] = m[p];
}
function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m)
    return m.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function() {
        if (o && i >= o.length)
          o = void 0;
        return { value: o && o[i++], done: !o };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
}
function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++)
    ar = ar.concat(__read(arguments[i]));
  return ar;
}
function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++)
    s += arguments[i].length;
  for (var r = Array(s), k = 0, i = 0; i < il; i++)
    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
      r[k] = a[j];
  return r;
}
function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []), i, q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
    return this;
  }, i;
  function verb(n) {
    if (g[n])
      i[n] = function(v) {
        return new Promise(function(a, b) {
          q.push([n, v, a, b]) > 1 || resume(n, v);
        });
      };
  }
  function resume(n, v) {
    try {
      step(g[n](v));
    } catch (e) {
      settle(q[0][3], e);
    }
  }
  function step(r) {
    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f, v) {
    if (f(v), q.shift(), q.length)
      resume(q[0][0], q[0][1]);
  }
}
function __asyncDelegator(o) {
  var i, p;
  return i = {}, verb("next"), verb("throw", function(e) {
    throw e;
  }), verb("return"), i[Symbol.iterator] = function() {
    return this;
  }, i;
  function verb(n, f) {
    i[n] = o[n] ? function(v) {
      return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v;
    } : f;
  }
}
function __asyncValues(o) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator], i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
    return this;
  }, i);
  function verb(n) {
    i[n] = o[n] && function(v) {
      return new Promise(function(resolve, reject) {
        v = o[n](v), settle(resolve, reject, v.done, v.value);
      });
    };
  }
  function settle(resolve, reject, d, v) {
    Promise.resolve(v).then(function(v2) {
      resolve({ value: v2, done: d });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", { value: raw });
  } else {
    cooked.raw = raw;
  }
  return cooked;
}
function __importStar(mod) {
  if (mod && mod.__esModule)
    return mod;
  var result = {};
  if (mod != null) {
    for (var k in mod)
      if (Object.hasOwnProperty.call(mod, k))
        result[k] = mod[k];
  }
  result.default = mod;
  return result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : { default: mod };
}
function __classPrivateFieldGet(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }
  return privateMap.get(receiver);
}
function __classPrivateFieldSet(receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }
  privateMap.set(receiver, value);
  return value;
}
var extendStatics, __assign;
var init_tslib_es6 = __esm({
  "node_modules/pdf-lib/node_modules/tslib/tslib.es6.js"() {
    extendStatics = function(d, b) {
      extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
        d2.__proto__ = b2;
      } || function(d2, b2) {
        for (var p in b2)
          if (b2.hasOwnProperty(p))
            d2[p] = b2[p];
      };
      return extendStatics(d, b);
    };
    __assign = function() {
      __assign = Object.assign || function __assign2(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
  }
});

// node_modules/pdf-lib/cjs/utils/base64.js
var require_base64 = __commonJS({
  "node_modules/pdf-lib/cjs/utils/base64.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.decodeFromBase64DataUri = exports.decodeFromBase64 = exports.encodeToBase64 = void 0;
    var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    var lookup = new Uint8Array(256);
    for (i = 0; i < chars.length; i++) {
      lookup[chars.charCodeAt(i)] = i;
    }
    var i;
    exports.encodeToBase64 = function(bytes) {
      var base64 = "";
      var len = bytes.length;
      for (var i2 = 0; i2 < len; i2 += 3) {
        base64 += chars[bytes[i2] >> 2];
        base64 += chars[(bytes[i2] & 3) << 4 | bytes[i2 + 1] >> 4];
        base64 += chars[(bytes[i2 + 1] & 15) << 2 | bytes[i2 + 2] >> 6];
        base64 += chars[bytes[i2 + 2] & 63];
      }
      if (len % 3 === 2) {
        base64 = base64.substring(0, base64.length - 1) + "=";
      } else if (len % 3 === 1) {
        base64 = base64.substring(0, base64.length - 2) + "==";
      }
      return base64;
    };
    exports.decodeFromBase64 = function(base64) {
      var bufferLength = base64.length * 0.75;
      var len = base64.length;
      var i2;
      var p = 0;
      var encoded1;
      var encoded2;
      var encoded3;
      var encoded4;
      if (base64[base64.length - 1] === "=") {
        bufferLength--;
        if (base64[base64.length - 2] === "=") {
          bufferLength--;
        }
      }
      var bytes = new Uint8Array(bufferLength);
      for (i2 = 0; i2 < len; i2 += 4) {
        encoded1 = lookup[base64.charCodeAt(i2)];
        encoded2 = lookup[base64.charCodeAt(i2 + 1)];
        encoded3 = lookup[base64.charCodeAt(i2 + 2)];
        encoded4 = lookup[base64.charCodeAt(i2 + 3)];
        bytes[p++] = encoded1 << 2 | encoded2 >> 4;
        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;
        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;
      }
      return bytes;
    };
    var DATA_URI_PREFIX_REGEX = /^(data)?:?([\w\/\+]+)?;?(charset=[\w-]+|base64)?.*,/i;
    exports.decodeFromBase64DataUri = function(dataUri) {
      var trimmedUri = dataUri.trim();
      var prefix = trimmedUri.substring(0, 100);
      var res = prefix.match(DATA_URI_PREFIX_REGEX);
      if (!res)
        return exports.decodeFromBase64(trimmedUri);
      var fullMatch = res[0];
      var data = trimmedUri.substring(fullMatch.length);
      return exports.decodeFromBase64(data);
    };
  }
});

// node_modules/pdf-lib/cjs/utils/strings.js
var require_strings = __commonJS({
  "node_modules/pdf-lib/cjs/utils/strings.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.findLastMatch = exports.parseDate = exports.breakTextIntoLines = exports.charSplit = exports.charAtIndex = exports.mergeLines = exports.lineSplit = exports.isNewlineChar = exports.newlineChars = exports.escapedNewlineChars = exports.cleanText = exports.escapeRegExp = exports.addRandomSuffix = exports.copyStringIntoBuffer = exports.padStart = exports.charFromHexCode = exports.charFromCode = exports.toHexString = exports.toHexStringOfMinLength = exports.toCodePoint = exports.toCharCode = void 0;
    exports.toCharCode = function(character) {
      return character.charCodeAt(0);
    };
    exports.toCodePoint = function(character) {
      return character.codePointAt(0);
    };
    exports.toHexStringOfMinLength = function(num, minLength) {
      return exports.padStart(num.toString(16), minLength, "0").toUpperCase();
    };
    exports.toHexString = function(num) {
      return exports.toHexStringOfMinLength(num, 2);
    };
    exports.charFromCode = function(code) {
      return String.fromCharCode(code);
    };
    exports.charFromHexCode = function(hex) {
      return exports.charFromCode(parseInt(hex, 16));
    };
    exports.padStart = function(value, length, padChar) {
      var padding = "";
      for (var idx = 0, len = length - value.length; idx < len; idx++) {
        padding += padChar;
      }
      return padding + value;
    };
    exports.copyStringIntoBuffer = function(str, buffer, offset) {
      var length = str.length;
      for (var idx = 0; idx < length; idx++) {
        buffer[offset++] = str.charCodeAt(idx);
      }
      return length;
    };
    exports.addRandomSuffix = function(prefix, suffixLength) {
      if (suffixLength === void 0) {
        suffixLength = 4;
      }
      return prefix + "-" + Math.floor(Math.random() * Math.pow(10, suffixLength));
    };
    exports.escapeRegExp = function(str) {
      return str.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    };
    exports.cleanText = function(text) {
      return text.replace(/\t|\u0085|\u2028|\u2029/g, "    ").replace(/[\b\v]/g, "");
    };
    exports.escapedNewlineChars = ["\\n", "\\f", "\\r", "\\u000B"];
    exports.newlineChars = ["\n", "\f", "\r", "\v"];
    exports.isNewlineChar = function(text) {
      return /^[\n\f\r\u000B]$/.test(text);
    };
    exports.lineSplit = function(text) {
      return text.split(/[\n\f\r\u000B]/);
    };
    exports.mergeLines = function(text) {
      return text.replace(/[\n\f\r\u000B]/g, " ");
    };
    exports.charAtIndex = function(text, index) {
      var cuFirst = text.charCodeAt(index);
      var cuSecond;
      var nextIndex = index + 1;
      var length = 1;
      if (
        // Check if it's the start of a surrogate pair.
        cuFirst >= 55296 && cuFirst <= 56319 && // high surrogate
        text.length > nextIndex
      ) {
        cuSecond = text.charCodeAt(nextIndex);
        if (cuSecond >= 56320 && cuSecond <= 57343)
          length = 2;
      }
      return [text.slice(index, index + length), length];
    };
    exports.charSplit = function(text) {
      var chars = [];
      for (var idx = 0, len = text.length; idx < len; ) {
        var _a = exports.charAtIndex(text, idx), c = _a[0], cLen = _a[1];
        chars.push(c);
        idx += cLen;
      }
      return chars;
    };
    var buildWordBreakRegex = function(wordBreaks) {
      var newlineCharUnion = exports.escapedNewlineChars.join("|");
      var escapedRules = ["$"];
      for (var idx = 0, len = wordBreaks.length; idx < len; idx++) {
        var wordBreak = wordBreaks[idx];
        if (exports.isNewlineChar(wordBreak)) {
          throw new TypeError("`wordBreak` must not include " + newlineCharUnion);
        }
        escapedRules.push(wordBreak === "" ? "." : exports.escapeRegExp(wordBreak));
      }
      var breakRules = escapedRules.join("|");
      return new RegExp("(" + newlineCharUnion + ")|((.*?)(" + breakRules + "))", "gm");
    };
    exports.breakTextIntoLines = function(text, wordBreaks, maxWidth, computeWidthOfText) {
      var regex = buildWordBreakRegex(wordBreaks);
      var words = exports.cleanText(text).match(regex);
      var currLine = "";
      var currWidth = 0;
      var lines = [];
      var pushCurrLine = function() {
        if (currLine !== "")
          lines.push(currLine);
        currLine = "";
        currWidth = 0;
      };
      for (var idx = 0, len = words.length; idx < len; idx++) {
        var word = words[idx];
        if (exports.isNewlineChar(word)) {
          pushCurrLine();
        } else {
          var width = computeWidthOfText(word);
          if (currWidth + width > maxWidth)
            pushCurrLine();
          currLine += word;
          currWidth += width;
        }
      }
      pushCurrLine();
      return lines;
    };
    var dateRegex = /^D:(\d\d\d\d)(\d\d)?(\d\d)?(\d\d)?(\d\d)?(\d\d)?([+\-Z])?(\d\d)?'?(\d\d)?'?$/;
    exports.parseDate = function(dateStr) {
      var match = dateStr.match(dateRegex);
      if (!match)
        return void 0;
      var year = match[1], _a = match[2], month = _a === void 0 ? "01" : _a, _b = match[3], day = _b === void 0 ? "01" : _b, _c = match[4], hours = _c === void 0 ? "00" : _c, _d = match[5], mins = _d === void 0 ? "00" : _d, _e = match[6], secs = _e === void 0 ? "00" : _e, _f = match[7], offsetSign = _f === void 0 ? "Z" : _f, _g = match[8], offsetHours = _g === void 0 ? "00" : _g, _h = match[9], offsetMins = _h === void 0 ? "00" : _h;
      var tzOffset = offsetSign === "Z" ? "Z" : "" + offsetSign + offsetHours + ":" + offsetMins;
      var date = new Date(year + "-" + month + "-" + day + "T" + hours + ":" + mins + ":" + secs + tzOffset);
      return date;
    };
    exports.findLastMatch = function(value, regex) {
      var _a;
      var position = 0;
      var lastMatch;
      while (position < value.length) {
        var match = value.substring(position).match(regex);
        if (!match)
          return { match: lastMatch, pos: position };
        lastMatch = match;
        position += ((_a = match.index) !== null && _a !== void 0 ? _a : 0) + match[0].length;
      }
      return { match: lastMatch, pos: position };
    };
  }
});

// node_modules/pdf-lib/cjs/utils/arrays.js
var require_arrays = __commonJS({
  "node_modules/pdf-lib/cjs/utils/arrays.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.toUint8Array = exports.canBeConvertedToUint8Array = exports.pluckIndices = exports.range = exports.sum = exports.reverseArray = exports.sortedUniq = exports.byAscendingId = exports.arrayAsString = exports.mergeUint8Arrays = exports.mergeIntoTypedArray = exports.typedArrayFor = exports.last = void 0;
    var base64_1 = require_base64();
    var strings_1 = require_strings();
    exports.last = function(array) {
      return array[array.length - 1];
    };
    exports.typedArrayFor = function(value) {
      if (value instanceof Uint8Array)
        return value;
      var length = value.length;
      var typedArray = new Uint8Array(length);
      for (var idx = 0; idx < length; idx++) {
        typedArray[idx] = value.charCodeAt(idx);
      }
      return typedArray;
    };
    exports.mergeIntoTypedArray = function() {
      var arrays = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        arrays[_i] = arguments[_i];
      }
      var arrayCount = arrays.length;
      var typedArrays = [];
      for (var idx = 0; idx < arrayCount; idx++) {
        var element = arrays[idx];
        typedArrays[idx] = element instanceof Uint8Array ? element : exports.typedArrayFor(element);
      }
      var totalSize = 0;
      for (var idx = 0; idx < arrayCount; idx++) {
        totalSize += arrays[idx].length;
      }
      var merged = new Uint8Array(totalSize);
      var offset = 0;
      for (var arrIdx = 0; arrIdx < arrayCount; arrIdx++) {
        var arr = typedArrays[arrIdx];
        for (var byteIdx = 0, arrLen = arr.length; byteIdx < arrLen; byteIdx++) {
          merged[offset++] = arr[byteIdx];
        }
      }
      return merged;
    };
    exports.mergeUint8Arrays = function(arrays) {
      var totalSize = 0;
      for (var idx = 0, len = arrays.length; idx < len; idx++) {
        totalSize += arrays[idx].length;
      }
      var mergedBuffer = new Uint8Array(totalSize);
      var offset = 0;
      for (var idx = 0, len = arrays.length; idx < len; idx++) {
        var array = arrays[idx];
        mergedBuffer.set(array, offset);
        offset += array.length;
      }
      return mergedBuffer;
    };
    exports.arrayAsString = function(array) {
      var str = "";
      for (var idx = 0, len = array.length; idx < len; idx++) {
        str += strings_1.charFromCode(array[idx]);
      }
      return str;
    };
    exports.byAscendingId = function(a, b) {
      return a.id - b.id;
    };
    exports.sortedUniq = function(array, indexer) {
      var uniq = [];
      for (var idx = 0, len = array.length; idx < len; idx++) {
        var curr = array[idx];
        var prev = array[idx - 1];
        if (idx === 0 || indexer(curr) !== indexer(prev)) {
          uniq.push(curr);
        }
      }
      return uniq;
    };
    exports.reverseArray = function(array) {
      var arrayLen = array.length;
      for (var idx = 0, len = Math.floor(arrayLen / 2); idx < len; idx++) {
        var leftIdx = idx;
        var rightIdx = arrayLen - idx - 1;
        var temp2 = array[idx];
        array[leftIdx] = array[rightIdx];
        array[rightIdx] = temp2;
      }
      return array;
    };
    exports.sum = function(array) {
      var total = 0;
      for (var idx = 0, len = array.length; idx < len; idx++) {
        total += array[idx];
      }
      return total;
    };
    exports.range = function(start, end) {
      var arr = new Array(end - start);
      for (var idx = 0, len = arr.length; idx < len; idx++) {
        arr[idx] = start + idx;
      }
      return arr;
    };
    exports.pluckIndices = function(arr, indices) {
      var plucked = new Array(indices.length);
      for (var idx = 0, len = indices.length; idx < len; idx++) {
        plucked[idx] = arr[indices[idx]];
      }
      return plucked;
    };
    exports.canBeConvertedToUint8Array = function(input) {
      return input instanceof Uint8Array || input instanceof ArrayBuffer || typeof input === "string";
    };
    exports.toUint8Array = function(input) {
      if (typeof input === "string") {
        return base64_1.decodeFromBase64DataUri(input);
      } else if (input instanceof ArrayBuffer) {
        return new Uint8Array(input);
      } else if (input instanceof Uint8Array) {
        return input;
      } else {
        throw new TypeError("`input` must be one of `string | ArrayBuffer | Uint8Array`");
      }
    };
  }
});

// node_modules/pdf-lib/cjs/utils/async.js
var require_async = __commonJS({
  "node_modules/pdf-lib/cjs/utils/async.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.waitForTick = void 0;
    exports.waitForTick = function() {
      return new Promise(function(resolve) {
        setTimeout(function() {
          return resolve();
        }, 0);
      });
    };
  }
});

// node_modules/pdf-lib/cjs/utils/unicode.js
var require_unicode = __commonJS({
  "node_modules/pdf-lib/cjs/utils/unicode.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.hasUtf16BOM = exports.utf16Decode = exports.lowSurrogate = exports.highSurrogate = exports.hasSurrogates = exports.isWithinBMP = exports.utf16Encode = exports.utf8Encode = void 0;
    var strings_1 = require_strings();
    exports.utf8Encode = function(input, byteOrderMark) {
      if (byteOrderMark === void 0) {
        byteOrderMark = true;
      }
      var encoded = [];
      if (byteOrderMark)
        encoded.push(239, 187, 191);
      for (var idx = 0, len = input.length; idx < len; ) {
        var codePoint = input.codePointAt(idx);
        if (codePoint < 128) {
          var byte1 = codePoint & 127;
          encoded.push(byte1);
          idx += 1;
        } else if (codePoint < 2048) {
          var byte1 = codePoint >> 6 & 31 | 192;
          var byte2 = codePoint & 63 | 128;
          encoded.push(byte1, byte2);
          idx += 1;
        } else if (codePoint < 65536) {
          var byte1 = codePoint >> 12 & 15 | 224;
          var byte2 = codePoint >> 6 & 63 | 128;
          var byte3 = codePoint & 63 | 128;
          encoded.push(byte1, byte2, byte3);
          idx += 1;
        } else if (codePoint < 1114112) {
          var byte1 = codePoint >> 18 & 7 | 240;
          var byte2 = codePoint >> 12 & 63 | 128;
          var byte3 = codePoint >> 6 & 63 | 128;
          var byte4 = codePoint >> 0 & 63 | 128;
          encoded.push(byte1, byte2, byte3, byte4);
          idx += 2;
        } else
          throw new Error("Invalid code point: 0x" + strings_1.toHexString(codePoint));
      }
      return new Uint8Array(encoded);
    };
    exports.utf16Encode = function(input, byteOrderMark) {
      if (byteOrderMark === void 0) {
        byteOrderMark = true;
      }
      var encoded = [];
      if (byteOrderMark)
        encoded.push(65279);
      for (var idx = 0, len = input.length; idx < len; ) {
        var codePoint = input.codePointAt(idx);
        if (codePoint < 65536) {
          encoded.push(codePoint);
          idx += 1;
        } else if (codePoint < 1114112) {
          encoded.push(exports.highSurrogate(codePoint), exports.lowSurrogate(codePoint));
          idx += 2;
        } else
          throw new Error("Invalid code point: 0x" + strings_1.toHexString(codePoint));
      }
      return new Uint16Array(encoded);
    };
    exports.isWithinBMP = function(codePoint) {
      return codePoint >= 0 && codePoint <= 65535;
    };
    exports.hasSurrogates = function(codePoint) {
      return codePoint >= 65536 && codePoint <= 1114111;
    };
    exports.highSurrogate = function(codePoint) {
      return Math.floor((codePoint - 65536) / 1024) + 55296;
    };
    exports.lowSurrogate = function(codePoint) {
      return (codePoint - 65536) % 1024 + 56320;
    };
    var ByteOrder;
    (function(ByteOrder2) {
      ByteOrder2["BigEndian"] = "BigEndian";
      ByteOrder2["LittleEndian"] = "LittleEndian";
    })(ByteOrder || (ByteOrder = {}));
    var REPLACEMENT = "\uFFFD".codePointAt(0);
    exports.utf16Decode = function(input, byteOrderMark) {
      if (byteOrderMark === void 0) {
        byteOrderMark = true;
      }
      if (input.length <= 1)
        return String.fromCodePoint(REPLACEMENT);
      var byteOrder = byteOrderMark ? readBOM(input) : ByteOrder.BigEndian;
      var idx = byteOrderMark ? 2 : 0;
      var codePoints = [];
      while (input.length - idx >= 2) {
        var first = decodeValues(input[idx++], input[idx++], byteOrder);
        if (isHighSurrogate(first)) {
          if (input.length - idx < 2) {
            codePoints.push(REPLACEMENT);
          } else {
            var second = decodeValues(input[idx++], input[idx++], byteOrder);
            if (isLowSurrogate(second)) {
              codePoints.push(first, second);
            } else {
              codePoints.push(REPLACEMENT);
            }
          }
        } else if (isLowSurrogate(first)) {
          idx += 2;
          codePoints.push(REPLACEMENT);
        } else {
          codePoints.push(first);
        }
      }
      if (idx < input.length)
        codePoints.push(REPLACEMENT);
      return String.fromCodePoint.apply(String, codePoints);
    };
    var isHighSurrogate = function(codePoint) {
      return codePoint >= 55296 && codePoint <= 56319;
    };
    var isLowSurrogate = function(codePoint) {
      return codePoint >= 56320 && codePoint <= 57343;
    };
    var decodeValues = function(first, second, byteOrder) {
      if (byteOrder === ByteOrder.LittleEndian)
        return second << 8 | first;
      if (byteOrder === ByteOrder.BigEndian)
        return first << 8 | second;
      throw new Error("Invalid byteOrder: " + byteOrder);
    };
    var readBOM = function(bytes) {
      return hasUtf16BigEndianBOM(bytes) ? ByteOrder.BigEndian : hasUtf16LittleEndianBOM(bytes) ? ByteOrder.LittleEndian : ByteOrder.BigEndian;
    };
    var hasUtf16BigEndianBOM = function(bytes) {
      return bytes[0] === 254 && bytes[1] === 255;
    };
    var hasUtf16LittleEndianBOM = function(bytes) {
      return bytes[0] === 255 && bytes[1] === 254;
    };
    exports.hasUtf16BOM = function(bytes) {
      return hasUtf16BigEndianBOM(bytes) || hasUtf16LittleEndianBOM(bytes);
    };
  }
});

// node_modules/pdf-lib/cjs/utils/numbers.js
var require_numbers = __commonJS({
  "node_modules/pdf-lib/cjs/utils/numbers.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.bytesFor = exports.sizeInBytes = exports.numberToString = void 0;
    exports.numberToString = function(num) {
      var numStr = String(num);
      if (Math.abs(num) < 1) {
        var e = parseInt(num.toString().split("e-")[1]);
        if (e) {
          var negative = num < 0;
          if (negative)
            num *= -1;
          num *= Math.pow(10, e - 1);
          numStr = "0." + new Array(e).join("0") + num.toString().substring(2);
          if (negative)
            numStr = "-" + numStr;
        }
      } else {
        var e = parseInt(num.toString().split("+")[1]);
        if (e > 20) {
          e -= 20;
          num /= Math.pow(10, e);
          numStr = num.toString() + new Array(e + 1).join("0");
        }
      }
      return numStr;
    };
    exports.sizeInBytes = function(n) {
      return Math.ceil(n.toString(2).length / 8);
    };
    exports.bytesFor = function(n) {
      var bytes = new Uint8Array(exports.sizeInBytes(n));
      for (var i = 1; i <= bytes.length; i++) {
        bytes[i - 1] = n >> (bytes.length - i) * 8;
      }
      return bytes;
    };
  }
});

// node_modules/pdf-lib/cjs/utils/errors.js
var require_errors = __commonJS({
  "node_modules/pdf-lib/cjs/utils/errors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.error = void 0;
    exports.error = function(msg) {
      throw new Error(msg);
    };
  }
});

// node_modules/pako/lib/utils/common.js
var require_common2 = __commonJS({
  "node_modules/pako/lib/utils/common.js"(exports) {
    "use strict";
    var TYPED_OK = typeof Uint8Array !== "undefined" && typeof Uint16Array !== "undefined" && typeof Int32Array !== "undefined";
    function _has(obj, key) {
      return Object.prototype.hasOwnProperty.call(obj, key);
    }
    exports.assign = function(obj) {
      var sources = Array.prototype.slice.call(arguments, 1);
      while (sources.length) {
        var source = sources.shift();
        if (!source) {
          continue;
        }
        if (typeof source !== "object") {
          throw new TypeError(source + "must be non-object");
        }
        for (var p in source) {
          if (_has(source, p)) {
            obj[p] = source[p];
          }
        }
      }
      return obj;
    };
    exports.shrinkBuf = function(buf, size) {
      if (buf.length === size) {
        return buf;
      }
      if (buf.subarray) {
        return buf.subarray(0, size);
      }
      buf.length = size;
      return buf;
    };
    var fnTyped = {
      arraySet: function(dest, src, src_offs, len, dest_offs) {
        if (src.subarray && dest.subarray) {
          dest.set(src.subarray(src_offs, src_offs + len), dest_offs);
          return;
        }
        for (var i = 0; i < len; i++) {
          dest[dest_offs + i] = src[src_offs + i];
        }
      },
      // Join array of chunks to single array.
      flattenChunks: function(chunks) {
        var i, l, len, pos, chunk, result;
        len = 0;
        for (i = 0, l = chunks.length; i < l; i++) {
          len += chunks[i].length;
        }
        result = new Uint8Array(len);
        pos = 0;
        for (i = 0, l = chunks.length; i < l; i++) {
          chunk = chunks[i];
          result.set(chunk, pos);
          pos += chunk.length;
        }
        return result;
      }
    };
    var fnUntyped = {
      arraySet: function(dest, src, src_offs, len, dest_offs) {
        for (var i = 0; i < len; i++) {
          dest[dest_offs + i] = src[src_offs + i];
        }
      },
      // Join array of chunks to single array.
      flattenChunks: function(chunks) {
        return [].concat.apply([], chunks);
      }
    };
    exports.setTyped = function(on) {
      if (on) {
        exports.Buf8 = Uint8Array;
        exports.Buf16 = Uint16Array;
        exports.Buf32 = Int32Array;
        exports.assign(exports, fnTyped);
      } else {
        exports.Buf8 = Array;
        exports.Buf16 = Array;
        exports.Buf32 = Array;
        exports.assign(exports, fnUntyped);
      }
    };
    exports.setTyped(TYPED_OK);
  }
});

// node_modules/pako/lib/zlib/trees.js
var require_trees = __commonJS({
  "node_modules/pako/lib/zlib/trees.js"(exports) {
    "use strict";
    var utils = require_common2();
    var Z_FIXED = 4;
    var Z_BINARY = 0;
    var Z_TEXT = 1;
    var Z_UNKNOWN = 2;
    function zero(buf) {
      var len = buf.length;
      while (--len >= 0) {
        buf[len] = 0;
      }
    }
    var STORED_BLOCK = 0;
    var STATIC_TREES = 1;
    var DYN_TREES = 2;
    var MIN_MATCH = 3;
    var MAX_MATCH = 258;
    var LENGTH_CODES = 29;
    var LITERALS = 256;
    var L_CODES = LITERALS + 1 + LENGTH_CODES;
    var D_CODES = 30;
    var BL_CODES = 19;
    var HEAP_SIZE = 2 * L_CODES + 1;
    var MAX_BITS = 15;
    var Buf_size = 16;
    var MAX_BL_BITS = 7;
    var END_BLOCK = 256;
    var REP_3_6 = 16;
    var REPZ_3_10 = 17;
    var REPZ_11_138 = 18;
    var extra_lbits = (
      /* extra bits for each length code */
      [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]
    );
    var extra_dbits = (
      /* extra bits for each distance code */
      [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]
    );
    var extra_blbits = (
      /* extra bits for each bit length code */
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]
    );
    var bl_order = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
    var DIST_CODE_LEN = 512;
    var static_ltree = new Array((L_CODES + 2) * 2);
    zero(static_ltree);
    var static_dtree = new Array(D_CODES * 2);
    zero(static_dtree);
    var _dist_code = new Array(DIST_CODE_LEN);
    zero(_dist_code);
    var _length_code = new Array(MAX_MATCH - MIN_MATCH + 1);
    zero(_length_code);
    var base_length = new Array(LENGTH_CODES);
    zero(base_length);
    var base_dist = new Array(D_CODES);
    zero(base_dist);
    function StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {
      this.static_tree = static_tree;
      this.extra_bits = extra_bits;
      this.extra_base = extra_base;
      this.elems = elems;
      this.max_length = max_length;
      this.has_stree = static_tree && static_tree.length;
    }
    var static_l_desc;
    var static_d_desc;
    var static_bl_desc;
    function TreeDesc(dyn_tree, stat_desc) {
      this.dyn_tree = dyn_tree;
      this.max_code = 0;
      this.stat_desc = stat_desc;
    }
    function d_code(dist) {
      return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];
    }
    function put_short(s, w) {
      s.pending_buf[s.pending++] = w & 255;
      s.pending_buf[s.pending++] = w >>> 8 & 255;
    }
    function send_bits(s, value, length) {
      if (s.bi_valid > Buf_size - length) {
        s.bi_buf |= value << s.bi_valid & 65535;
        put_short(s, s.bi_buf);
        s.bi_buf = value >> Buf_size - s.bi_valid;
        s.bi_valid += length - Buf_size;
      } else {
        s.bi_buf |= value << s.bi_valid & 65535;
        s.bi_valid += length;
      }
    }
    function send_code(s, c, tree) {
      send_bits(
        s,
        tree[c * 2],
        tree[c * 2 + 1]
        /*.Len*/
      );
    }
    function bi_reverse(code, len) {
      var res = 0;
      do {
        res |= code & 1;
        code >>>= 1;
        res <<= 1;
      } while (--len > 0);
      return res >>> 1;
    }
    function bi_flush(s) {
      if (s.bi_valid === 16) {
        put_short(s, s.bi_buf);
        s.bi_buf = 0;
        s.bi_valid = 0;
      } else if (s.bi_valid >= 8) {
        s.pending_buf[s.pending++] = s.bi_buf & 255;
        s.bi_buf >>= 8;
        s.bi_valid -= 8;
      }
    }
    function gen_bitlen(s, desc) {
      var tree = desc.dyn_tree;
      var max_code = desc.max_code;
      var stree = desc.stat_desc.static_tree;
      var has_stree = desc.stat_desc.has_stree;
      var extra = desc.stat_desc.extra_bits;
      var base = desc.stat_desc.extra_base;
      var max_length = desc.stat_desc.max_length;
      var h;
      var n, m;
      var bits;
      var xbits;
      var f;
      var overflow = 0;
      for (bits = 0; bits <= MAX_BITS; bits++) {
        s.bl_count[bits] = 0;
      }
      tree[s.heap[s.heap_max] * 2 + 1] = 0;
      for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {
        n = s.heap[h];
        bits = tree[tree[n * 2 + 1] * 2 + 1] + 1;
        if (bits > max_length) {
          bits = max_length;
          overflow++;
        }
        tree[n * 2 + 1] = bits;
        if (n > max_code) {
          continue;
        }
        s.bl_count[bits]++;
        xbits = 0;
        if (n >= base) {
          xbits = extra[n - base];
        }
        f = tree[n * 2];
        s.opt_len += f * (bits + xbits);
        if (has_stree) {
          s.static_len += f * (stree[n * 2 + 1] + xbits);
        }
      }
      if (overflow === 0) {
        return;
      }
      do {
        bits = max_length - 1;
        while (s.bl_count[bits] === 0) {
          bits--;
        }
        s.bl_count[bits]--;
        s.bl_count[bits + 1] += 2;
        s.bl_count[max_length]--;
        overflow -= 2;
      } while (overflow > 0);
      for (bits = max_length; bits !== 0; bits--) {
        n = s.bl_count[bits];
        while (n !== 0) {
          m = s.heap[--h];
          if (m > max_code) {
            continue;
          }
          if (tree[m * 2 + 1] !== bits) {
            s.opt_len += (bits - tree[m * 2 + 1]) * tree[m * 2];
            tree[m * 2 + 1] = bits;
          }
          n--;
        }
      }
    }
    function gen_codes(tree, max_code, bl_count) {
      var next_code = new Array(MAX_BITS + 1);
      var code = 0;
      var bits;
      var n;
      for (bits = 1; bits <= MAX_BITS; bits++) {
        next_code[bits] = code = code + bl_count[bits - 1] << 1;
      }
      for (n = 0; n <= max_code; n++) {
        var len = tree[n * 2 + 1];
        if (len === 0) {
          continue;
        }
        tree[n * 2] = bi_reverse(next_code[len]++, len);
      }
    }
    function tr_static_init() {
      var n;
      var bits;
      var length;
      var code;
      var dist;
      var bl_count = new Array(MAX_BITS + 1);
      length = 0;
      for (code = 0; code < LENGTH_CODES - 1; code++) {
        base_length[code] = length;
        for (n = 0; n < 1 << extra_lbits[code]; n++) {
          _length_code[length++] = code;
        }
      }
      _length_code[length - 1] = code;
      dist = 0;
      for (code = 0; code < 16; code++) {
        base_dist[code] = dist;
        for (n = 0; n < 1 << extra_dbits[code]; n++) {
          _dist_code[dist++] = code;
        }
      }
      dist >>= 7;
      for (; code < D_CODES; code++) {
        base_dist[code] = dist << 7;
        for (n = 0; n < 1 << extra_dbits[code] - 7; n++) {
          _dist_code[256 + dist++] = code;
        }
      }
      for (bits = 0; bits <= MAX_BITS; bits++) {
        bl_count[bits] = 0;
      }
      n = 0;
      while (n <= 143) {
        static_ltree[n * 2 + 1] = 8;
        n++;
        bl_count[8]++;
      }
      while (n <= 255) {
        static_ltree[n * 2 + 1] = 9;
        n++;
        bl_count[9]++;
      }
      while (n <= 279) {
        static_ltree[n * 2 + 1] = 7;
        n++;
        bl_count[7]++;
      }
      while (n <= 287) {
        static_ltree[n * 2 + 1] = 8;
        n++;
        bl_count[8]++;
      }
      gen_codes(static_ltree, L_CODES + 1, bl_count);
      for (n = 0; n < D_CODES; n++) {
        static_dtree[n * 2 + 1] = 5;
        static_dtree[n * 2] = bi_reverse(n, 5);
      }
      static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);
      static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0, D_CODES, MAX_BITS);
      static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0, BL_CODES, MAX_BL_BITS);
    }
    function init_block(s) {
      var n;
      for (n = 0; n < L_CODES; n++) {
        s.dyn_ltree[n * 2] = 0;
      }
      for (n = 0; n < D_CODES; n++) {
        s.dyn_dtree[n * 2] = 0;
      }
      for (n = 0; n < BL_CODES; n++) {
        s.bl_tree[n * 2] = 0;
      }
      s.dyn_ltree[END_BLOCK * 2] = 1;
      s.opt_len = s.static_len = 0;
      s.last_lit = s.matches = 0;
    }
    function bi_windup(s) {
      if (s.bi_valid > 8) {
        put_short(s, s.bi_buf);
      } else if (s.bi_valid > 0) {
        s.pending_buf[s.pending++] = s.bi_buf;
      }
      s.bi_buf = 0;
      s.bi_valid = 0;
    }
    function copy_block(s, buf, len, header) {
      bi_windup(s);
      if (header) {
        put_short(s, len);
        put_short(s, ~len);
      }
      utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);
      s.pending += len;
    }
    function smaller(tree, n, m, depth) {
      var _n2 = n * 2;
      var _m2 = m * 2;
      return tree[_n2] < tree[_m2] || tree[_n2] === tree[_m2] && depth[n] <= depth[m];
    }
    function pqdownheap(s, tree, k) {
      var v = s.heap[k];
      var j = k << 1;
      while (j <= s.heap_len) {
        if (j < s.heap_len && smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {
          j++;
        }
        if (smaller(tree, v, s.heap[j], s.depth)) {
          break;
        }
        s.heap[k] = s.heap[j];
        k = j;
        j <<= 1;
      }
      s.heap[k] = v;
    }
    function compress_block(s, ltree, dtree) {
      var dist;
      var lc;
      var lx = 0;
      var code;
      var extra;
      if (s.last_lit !== 0) {
        do {
          dist = s.pending_buf[s.d_buf + lx * 2] << 8 | s.pending_buf[s.d_buf + lx * 2 + 1];
          lc = s.pending_buf[s.l_buf + lx];
          lx++;
          if (dist === 0) {
            send_code(s, lc, ltree);
          } else {
            code = _length_code[lc];
            send_code(s, code + LITERALS + 1, ltree);
            extra = extra_lbits[code];
            if (extra !== 0) {
              lc -= base_length[code];
              send_bits(s, lc, extra);
            }
            dist--;
            code = d_code(dist);
            send_code(s, code, dtree);
            extra = extra_dbits[code];
            if (extra !== 0) {
              dist -= base_dist[code];
              send_bits(s, dist, extra);
            }
          }
        } while (lx < s.last_lit);
      }
      send_code(s, END_BLOCK, ltree);
    }
    function build_tree(s, desc) {
      var tree = desc.dyn_tree;
      var stree = desc.stat_desc.static_tree;
      var has_stree = desc.stat_desc.has_stree;
      var elems = desc.stat_desc.elems;
      var n, m;
      var max_code = -1;
      var node;
      s.heap_len = 0;
      s.heap_max = HEAP_SIZE;
      for (n = 0; n < elems; n++) {
        if (tree[n * 2] !== 0) {
          s.heap[++s.heap_len] = max_code = n;
          s.depth[n] = 0;
        } else {
          tree[n * 2 + 1] = 0;
        }
      }
      while (s.heap_len < 2) {
        node = s.heap[++s.heap_len] = max_code < 2 ? ++max_code : 0;
        tree[node * 2] = 1;
        s.depth[node] = 0;
        s.opt_len--;
        if (has_stree) {
          s.static_len -= stree[node * 2 + 1];
        }
      }
      desc.max_code = max_code;
      for (n = s.heap_len >> 1; n >= 1; n--) {
        pqdownheap(s, tree, n);
      }
      node = elems;
      do {
        n = s.heap[
          1
          /*SMALLEST*/
        ];
        s.heap[
          1
          /*SMALLEST*/
        ] = s.heap[s.heap_len--];
        pqdownheap(
          s,
          tree,
          1
          /*SMALLEST*/
        );
        m = s.heap[
          1
          /*SMALLEST*/
        ];
        s.heap[--s.heap_max] = n;
        s.heap[--s.heap_max] = m;
        tree[node * 2] = tree[n * 2] + tree[m * 2];
        s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;
        tree[n * 2 + 1] = tree[m * 2 + 1] = node;
        s.heap[
          1
          /*SMALLEST*/
        ] = node++;
        pqdownheap(
          s,
          tree,
          1
          /*SMALLEST*/
        );
      } while (s.heap_len >= 2);
      s.heap[--s.heap_max] = s.heap[
        1
        /*SMALLEST*/
      ];
      gen_bitlen(s, desc);
      gen_codes(tree, max_code, s.bl_count);
    }
    function scan_tree(s, tree, max_code) {
      var n;
      var prevlen = -1;
      var curlen;
      var nextlen = tree[0 * 2 + 1];
      var count = 0;
      var max_count = 7;
      var min_count = 4;
      if (nextlen === 0) {
        max_count = 138;
        min_count = 3;
      }
      tree[(max_code + 1) * 2 + 1] = 65535;
      for (n = 0; n <= max_code; n++) {
        curlen = nextlen;
        nextlen = tree[(n + 1) * 2 + 1];
        if (++count < max_count && curlen === nextlen) {
          continue;
        } else if (count < min_count) {
          s.bl_tree[curlen * 2] += count;
        } else if (curlen !== 0) {
          if (curlen !== prevlen) {
            s.bl_tree[curlen * 2]++;
          }
          s.bl_tree[REP_3_6 * 2]++;
        } else if (count <= 10) {
          s.bl_tree[REPZ_3_10 * 2]++;
        } else {
          s.bl_tree[REPZ_11_138 * 2]++;
        }
        count = 0;
        prevlen = curlen;
        if (nextlen === 0) {
          max_count = 138;
          min_count = 3;
        } else if (curlen === nextlen) {
          max_count = 6;
          min_count = 3;
        } else {
          max_count = 7;
          min_count = 4;
        }
      }
    }
    function send_tree(s, tree, max_code) {
      var n;
      var prevlen = -1;
      var curlen;
      var nextlen = tree[0 * 2 + 1];
      var count = 0;
      var max_count = 7;
      var min_count = 4;
      if (nextlen === 0) {
        max_count = 138;
        min_count = 3;
      }
      for (n = 0; n <= max_code; n++) {
        curlen = nextlen;
        nextlen = tree[(n + 1) * 2 + 1];
        if (++count < max_count && curlen === nextlen) {
          continue;
        } else if (count < min_count) {
          do {
            send_code(s, curlen, s.bl_tree);
          } while (--count !== 0);
        } else if (curlen !== 0) {
          if (curlen !== prevlen) {
            send_code(s, curlen, s.bl_tree);
            count--;
          }
          send_code(s, REP_3_6, s.bl_tree);
          send_bits(s, count - 3, 2);
        } else if (count <= 10) {
          send_code(s, REPZ_3_10, s.bl_tree);
          send_bits(s, count - 3, 3);
        } else {
          send_code(s, REPZ_11_138, s.bl_tree);
          send_bits(s, count - 11, 7);
        }
        count = 0;
        prevlen = curlen;
        if (nextlen === 0) {
          max_count = 138;
          min_count = 3;
        } else if (curlen === nextlen) {
          max_count = 6;
          min_count = 3;
        } else {
          max_count = 7;
          min_count = 4;
        }
      }
    }
    function build_bl_tree(s) {
      var max_blindex;
      scan_tree(s, s.dyn_ltree, s.l_desc.max_code);
      scan_tree(s, s.dyn_dtree, s.d_desc.max_code);
      build_tree(s, s.bl_desc);
      for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {
        if (s.bl_tree[bl_order[max_blindex] * 2 + 1] !== 0) {
          break;
        }
      }
      s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;
      return max_blindex;
    }
    function send_all_trees(s, lcodes, dcodes, blcodes) {
      var rank;
      send_bits(s, lcodes - 257, 5);
      send_bits(s, dcodes - 1, 5);
      send_bits(s, blcodes - 4, 4);
      for (rank = 0; rank < blcodes; rank++) {
        send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1], 3);
      }
      send_tree(s, s.dyn_ltree, lcodes - 1);
      send_tree(s, s.dyn_dtree, dcodes - 1);
    }
    function detect_data_type(s) {
      var black_mask = 4093624447;
      var n;
      for (n = 0; n <= 31; n++, black_mask >>>= 1) {
        if (black_mask & 1 && s.dyn_ltree[n * 2] !== 0) {
          return Z_BINARY;
        }
      }
      if (s.dyn_ltree[9 * 2] !== 0 || s.dyn_ltree[10 * 2] !== 0 || s.dyn_ltree[13 * 2] !== 0) {
        return Z_TEXT;
      }
      for (n = 32; n < LITERALS; n++) {
        if (s.dyn_ltree[n * 2] !== 0) {
          return Z_TEXT;
        }
      }
      return Z_BINARY;
    }
    var static_init_done = false;
    function _tr_init(s) {
      if (!static_init_done) {
        tr_static_init();
        static_init_done = true;
      }
      s.l_desc = new TreeDesc(s.dyn_ltree, static_l_desc);
      s.d_desc = new TreeDesc(s.dyn_dtree, static_d_desc);
      s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);
      s.bi_buf = 0;
      s.bi_valid = 0;
      init_block(s);
    }
    function _tr_stored_block(s, buf, stored_len, last) {
      send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);
      copy_block(s, buf, stored_len, true);
    }
    function _tr_align(s) {
      send_bits(s, STATIC_TREES << 1, 3);
      send_code(s, END_BLOCK, static_ltree);
      bi_flush(s);
    }
    function _tr_flush_block(s, buf, stored_len, last) {
      var opt_lenb, static_lenb;
      var max_blindex = 0;
      if (s.level > 0) {
        if (s.strm.data_type === Z_UNKNOWN) {
          s.strm.data_type = detect_data_type(s);
        }
        build_tree(s, s.l_desc);
        build_tree(s, s.d_desc);
        max_blindex = build_bl_tree(s);
        opt_lenb = s.opt_len + 3 + 7 >>> 3;
        static_lenb = s.static_len + 3 + 7 >>> 3;
        if (static_lenb <= opt_lenb) {
          opt_lenb = static_lenb;
        }
      } else {
        opt_lenb = static_lenb = stored_len + 5;
      }
      if (stored_len + 4 <= opt_lenb && buf !== -1) {
        _tr_stored_block(s, buf, stored_len, last);
      } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {
        send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);
        compress_block(s, static_ltree, static_dtree);
      } else {
        send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);
        send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);
        compress_block(s, s.dyn_ltree, s.dyn_dtree);
      }
      init_block(s);
      if (last) {
        bi_windup(s);
      }
    }
    function _tr_tally(s, dist, lc) {
      s.pending_buf[s.d_buf + s.last_lit * 2] = dist >>> 8 & 255;
      s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 255;
      s.pending_buf[s.l_buf + s.last_lit] = lc & 255;
      s.last_lit++;
      if (dist === 0) {
        s.dyn_ltree[lc * 2]++;
      } else {
        s.matches++;
        dist--;
        s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]++;
        s.dyn_dtree[d_code(dist) * 2]++;
      }
      return s.last_lit === s.lit_bufsize - 1;
    }
    exports._tr_init = _tr_init;
    exports._tr_stored_block = _tr_stored_block;
    exports._tr_flush_block = _tr_flush_block;
    exports._tr_tally = _tr_tally;
    exports._tr_align = _tr_align;
  }
});

// node_modules/pako/lib/zlib/adler32.js
var require_adler32 = __commonJS({
  "node_modules/pako/lib/zlib/adler32.js"(exports, module2) {
    "use strict";
    function adler32(adler, buf, len, pos) {
      var s1 = adler & 65535 | 0, s2 = adler >>> 16 & 65535 | 0, n = 0;
      while (len !== 0) {
        n = len > 2e3 ? 2e3 : len;
        len -= n;
        do {
          s1 = s1 + buf[pos++] | 0;
          s2 = s2 + s1 | 0;
        } while (--n);
        s1 %= 65521;
        s2 %= 65521;
      }
      return s1 | s2 << 16 | 0;
    }
    module2.exports = adler32;
  }
});

// node_modules/pako/lib/zlib/crc32.js
var require_crc32 = __commonJS({
  "node_modules/pako/lib/zlib/crc32.js"(exports, module2) {
    "use strict";
    function makeTable() {
      var c, table = [];
      for (var n = 0; n < 256; n++) {
        c = n;
        for (var k = 0; k < 8; k++) {
          c = c & 1 ? 3988292384 ^ c >>> 1 : c >>> 1;
        }
        table[n] = c;
      }
      return table;
    }
    var crcTable = makeTable();
    function crc32(crc, buf, len, pos) {
      var t = crcTable, end = pos + len;
      crc ^= -1;
      for (var i = pos; i < end; i++) {
        crc = crc >>> 8 ^ t[(crc ^ buf[i]) & 255];
      }
      return crc ^ -1;
    }
    module2.exports = crc32;
  }
});

// node_modules/pako/lib/zlib/messages.js
var require_messages = __commonJS({
  "node_modules/pako/lib/zlib/messages.js"(exports, module2) {
    "use strict";
    module2.exports = {
      2: "need dictionary",
      /* Z_NEED_DICT       2  */
      1: "stream end",
      /* Z_STREAM_END      1  */
      0: "",
      /* Z_OK              0  */
      "-1": "file error",
      /* Z_ERRNO         (-1) */
      "-2": "stream error",
      /* Z_STREAM_ERROR  (-2) */
      "-3": "data error",
      /* Z_DATA_ERROR    (-3) */
      "-4": "insufficient memory",
      /* Z_MEM_ERROR     (-4) */
      "-5": "buffer error",
      /* Z_BUF_ERROR     (-5) */
      "-6": "incompatible version"
      /* Z_VERSION_ERROR (-6) */
    };
  }
});

// node_modules/pako/lib/zlib/deflate.js
var require_deflate = __commonJS({
  "node_modules/pako/lib/zlib/deflate.js"(exports) {
    "use strict";
    var utils = require_common2();
    var trees = require_trees();
    var adler32 = require_adler32();
    var crc32 = require_crc32();
    var msg = require_messages();
    var Z_NO_FLUSH = 0;
    var Z_PARTIAL_FLUSH = 1;
    var Z_FULL_FLUSH = 3;
    var Z_FINISH = 4;
    var Z_BLOCK = 5;
    var Z_OK = 0;
    var Z_STREAM_END = 1;
    var Z_STREAM_ERROR = -2;
    var Z_DATA_ERROR = -3;
    var Z_BUF_ERROR = -5;
    var Z_DEFAULT_COMPRESSION = -1;
    var Z_FILTERED = 1;
    var Z_HUFFMAN_ONLY = 2;
    var Z_RLE = 3;
    var Z_FIXED = 4;
    var Z_DEFAULT_STRATEGY = 0;
    var Z_UNKNOWN = 2;
    var Z_DEFLATED = 8;
    var MAX_MEM_LEVEL = 9;
    var MAX_WBITS = 15;
    var DEF_MEM_LEVEL = 8;
    var LENGTH_CODES = 29;
    var LITERALS = 256;
    var L_CODES = LITERALS + 1 + LENGTH_CODES;
    var D_CODES = 30;
    var BL_CODES = 19;
    var HEAP_SIZE = 2 * L_CODES + 1;
    var MAX_BITS = 15;
    var MIN_MATCH = 3;
    var MAX_MATCH = 258;
    var MIN_LOOKAHEAD = MAX_MATCH + MIN_MATCH + 1;
    var PRESET_DICT = 32;
    var INIT_STATE = 42;
    var EXTRA_STATE = 69;
    var NAME_STATE = 73;
    var COMMENT_STATE = 91;
    var HCRC_STATE = 103;
    var BUSY_STATE = 113;
    var FINISH_STATE = 666;
    var BS_NEED_MORE = 1;
    var BS_BLOCK_DONE = 2;
    var BS_FINISH_STARTED = 3;
    var BS_FINISH_DONE = 4;
    var OS_CODE = 3;
    function err(strm, errorCode) {
      strm.msg = msg[errorCode];
      return errorCode;
    }
    function rank(f) {
      return (f << 1) - (f > 4 ? 9 : 0);
    }
    function zero(buf) {
      var len = buf.length;
      while (--len >= 0) {
        buf[len] = 0;
      }
    }
    function flush_pending(strm) {
      var s = strm.state;
      var len = s.pending;
      if (len > strm.avail_out) {
        len = strm.avail_out;
      }
      if (len === 0) {
        return;
      }
      utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);
      strm.next_out += len;
      s.pending_out += len;
      strm.total_out += len;
      strm.avail_out -= len;
      s.pending -= len;
      if (s.pending === 0) {
        s.pending_out = 0;
      }
    }
    function flush_block_only(s, last) {
      trees._tr_flush_block(s, s.block_start >= 0 ? s.block_start : -1, s.strstart - s.block_start, last);
      s.block_start = s.strstart;
      flush_pending(s.strm);
    }
    function put_byte(s, b) {
      s.pending_buf[s.pending++] = b;
    }
    function putShortMSB(s, b) {
      s.pending_buf[s.pending++] = b >>> 8 & 255;
      s.pending_buf[s.pending++] = b & 255;
    }
    function read_buf(strm, buf, start, size) {
      var len = strm.avail_in;
      if (len > size) {
        len = size;
      }
      if (len === 0) {
        return 0;
      }
      strm.avail_in -= len;
      utils.arraySet(buf, strm.input, strm.next_in, len, start);
      if (strm.state.wrap === 1) {
        strm.adler = adler32(strm.adler, buf, len, start);
      } else if (strm.state.wrap === 2) {
        strm.adler = crc32(strm.adler, buf, len, start);
      }
      strm.next_in += len;
      strm.total_in += len;
      return len;
    }
    function longest_match(s, cur_match) {
      var chain_length = s.max_chain_length;
      var scan = s.strstart;
      var match;
      var len;
      var best_len = s.prev_length;
      var nice_match = s.nice_match;
      var limit = s.strstart > s.w_size - MIN_LOOKAHEAD ? s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0;
      var _win = s.window;
      var wmask = s.w_mask;
      var prev = s.prev;
      var strend = s.strstart + MAX_MATCH;
      var scan_end1 = _win[scan + best_len - 1];
      var scan_end = _win[scan + best_len];
      if (s.prev_length >= s.good_match) {
        chain_length >>= 2;
      }
      if (nice_match > s.lookahead) {
        nice_match = s.lookahead;
      }
      do {
        match = cur_match;
        if (_win[match + best_len] !== scan_end || _win[match + best_len - 1] !== scan_end1 || _win[match] !== _win[scan] || _win[++match] !== _win[scan + 1]) {
          continue;
        }
        scan += 2;
        match++;
        do {
        } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && scan < strend);
        len = MAX_MATCH - (strend - scan);
        scan = strend - MAX_MATCH;
        if (len > best_len) {
          s.match_start = cur_match;
          best_len = len;
          if (len >= nice_match) {
            break;
          }
          scan_end1 = _win[scan + best_len - 1];
          scan_end = _win[scan + best_len];
        }
      } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);
      if (best_len <= s.lookahead) {
        return best_len;
      }
      return s.lookahead;
    }
    function fill_window(s) {
      var _w_size = s.w_size;
      var p, n, m, more, str;
      do {
        more = s.window_size - s.lookahead - s.strstart;
        if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {
          utils.arraySet(s.window, s.window, _w_size, _w_size, 0);
          s.match_start -= _w_size;
          s.strstart -= _w_size;
          s.block_start -= _w_size;
          n = s.hash_size;
          p = n;
          do {
            m = s.head[--p];
            s.head[p] = m >= _w_size ? m - _w_size : 0;
          } while (--n);
          n = _w_size;
          p = n;
          do {
            m = s.prev[--p];
            s.prev[p] = m >= _w_size ? m - _w_size : 0;
          } while (--n);
          more += _w_size;
        }
        if (s.strm.avail_in === 0) {
          break;
        }
        n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);
        s.lookahead += n;
        if (s.lookahead + s.insert >= MIN_MATCH) {
          str = s.strstart - s.insert;
          s.ins_h = s.window[str];
          s.ins_h = (s.ins_h << s.hash_shift ^ s.window[str + 1]) & s.hash_mask;
          while (s.insert) {
            s.ins_h = (s.ins_h << s.hash_shift ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;
            s.prev[str & s.w_mask] = s.head[s.ins_h];
            s.head[s.ins_h] = str;
            str++;
            s.insert--;
            if (s.lookahead + s.insert < MIN_MATCH) {
              break;
            }
          }
        }
      } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);
    }
    function deflate_stored(s, flush) {
      var max_block_size = 65535;
      if (max_block_size > s.pending_buf_size - 5) {
        max_block_size = s.pending_buf_size - 5;
      }
      for (; ; ) {
        if (s.lookahead <= 1) {
          fill_window(s);
          if (s.lookahead === 0 && flush === Z_NO_FLUSH) {
            return BS_NEED_MORE;
          }
          if (s.lookahead === 0) {
            break;
          }
        }
        s.strstart += s.lookahead;
        s.lookahead = 0;
        var max_start = s.block_start + max_block_size;
        if (s.strstart === 0 || s.strstart >= max_start) {
          s.lookahead = s.strstart - max_start;
          s.strstart = max_start;
          flush_block_only(s, false);
          if (s.strm.avail_out === 0) {
            return BS_NEED_MORE;
          }
        }
        if (s.strstart - s.block_start >= s.w_size - MIN_LOOKAHEAD) {
          flush_block_only(s, false);
          if (s.strm.avail_out === 0) {
            return BS_NEED_MORE;
          }
        }
      }
      s.insert = 0;
      if (flush === Z_FINISH) {
        flush_block_only(s, true);
        if (s.strm.avail_out === 0) {
          return BS_FINISH_STARTED;
        }
        return BS_FINISH_DONE;
      }
      if (s.strstart > s.block_start) {
        flush_block_only(s, false);
        if (s.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
      }
      return BS_NEED_MORE;
    }
    function deflate_fast(s, flush) {
      var hash_head;
      var bflush;
      for (; ; ) {
        if (s.lookahead < MIN_LOOKAHEAD) {
          fill_window(s);
          if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
            return BS_NEED_MORE;
          }
          if (s.lookahead === 0) {
            break;
          }
        }
        hash_head = 0;
        if (s.lookahead >= MIN_MATCH) {
          s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
        }
        if (hash_head !== 0 && s.strstart - hash_head <= s.w_size - MIN_LOOKAHEAD) {
          s.match_length = longest_match(s, hash_head);
        }
        if (s.match_length >= MIN_MATCH) {
          bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);
          s.lookahead -= s.match_length;
          if (s.match_length <= s.max_lazy_match && s.lookahead >= MIN_MATCH) {
            s.match_length--;
            do {
              s.strstart++;
              s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
              hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
              s.head[s.ins_h] = s.strstart;
            } while (--s.match_length !== 0);
            s.strstart++;
          } else {
            s.strstart += s.match_length;
            s.match_length = 0;
            s.ins_h = s.window[s.strstart];
            s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + 1]) & s.hash_mask;
          }
        } else {
          bflush = trees._tr_tally(s, 0, s.window[s.strstart]);
          s.lookahead--;
          s.strstart++;
        }
        if (bflush) {
          flush_block_only(s, false);
          if (s.strm.avail_out === 0) {
            return BS_NEED_MORE;
          }
        }
      }
      s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;
      if (flush === Z_FINISH) {
        flush_block_only(s, true);
        if (s.strm.avail_out === 0) {
          return BS_FINISH_STARTED;
        }
        return BS_FINISH_DONE;
      }
      if (s.last_lit) {
        flush_block_only(s, false);
        if (s.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
      }
      return BS_BLOCK_DONE;
    }
    function deflate_slow(s, flush) {
      var hash_head;
      var bflush;
      var max_insert;
      for (; ; ) {
        if (s.lookahead < MIN_LOOKAHEAD) {
          fill_window(s);
          if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
            return BS_NEED_MORE;
          }
          if (s.lookahead === 0) {
            break;
          }
        }
        hash_head = 0;
        if (s.lookahead >= MIN_MATCH) {
          s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
        }
        s.prev_length = s.match_length;
        s.prev_match = s.match_start;
        s.match_length = MIN_MATCH - 1;
        if (hash_head !== 0 && s.prev_length < s.max_lazy_match && s.strstart - hash_head <= s.w_size - MIN_LOOKAHEAD) {
          s.match_length = longest_match(s, hash_head);
          if (s.match_length <= 5 && (s.strategy === Z_FILTERED || s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096)) {
            s.match_length = MIN_MATCH - 1;
          }
        }
        if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {
          max_insert = s.strstart + s.lookahead - MIN_MATCH;
          bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);
          s.lookahead -= s.prev_length - 1;
          s.prev_length -= 2;
          do {
            if (++s.strstart <= max_insert) {
              s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
              hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
              s.head[s.ins_h] = s.strstart;
            }
          } while (--s.prev_length !== 0);
          s.match_available = 0;
          s.match_length = MIN_MATCH - 1;
          s.strstart++;
          if (bflush) {
            flush_block_only(s, false);
            if (s.strm.avail_out === 0) {
              return BS_NEED_MORE;
            }
          }
        } else if (s.match_available) {
          bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);
          if (bflush) {
            flush_block_only(s, false);
          }
          s.strstart++;
          s.lookahead--;
          if (s.strm.avail_out === 0) {
            return BS_NEED_MORE;
          }
        } else {
          s.match_available = 1;
          s.strstart++;
          s.lookahead--;
        }
      }
      if (s.match_available) {
        bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);
        s.match_available = 0;
      }
      s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;
      if (flush === Z_FINISH) {
        flush_block_only(s, true);
        if (s.strm.avail_out === 0) {
          return BS_FINISH_STARTED;
        }
        return BS_FINISH_DONE;
      }
      if (s.last_lit) {
        flush_block_only(s, false);
        if (s.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
      }
      return BS_BLOCK_DONE;
    }
    function deflate_rle(s, flush) {
      var bflush;
      var prev;
      var scan, strend;
      var _win = s.window;
      for (; ; ) {
        if (s.lookahead <= MAX_MATCH) {
          fill_window(s);
          if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {
            return BS_NEED_MORE;
          }
          if (s.lookahead === 0) {
            break;
          }
        }
        s.match_length = 0;
        if (s.lookahead >= MIN_MATCH && s.strstart > 0) {
          scan = s.strstart - 1;
          prev = _win[scan];
          if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {
            strend = s.strstart + MAX_MATCH;
            do {
            } while (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && scan < strend);
            s.match_length = MAX_MATCH - (strend - scan);
            if (s.match_length > s.lookahead) {
              s.match_length = s.lookahead;
            }
          }
        }
        if (s.match_length >= MIN_MATCH) {
          bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);
          s.lookahead -= s.match_length;
          s.strstart += s.match_length;
          s.match_length = 0;
        } else {
          bflush = trees._tr_tally(s, 0, s.window[s.strstart]);
          s.lookahead--;
          s.strstart++;
        }
        if (bflush) {
          flush_block_only(s, false);
          if (s.strm.avail_out === 0) {
            return BS_NEED_MORE;
          }
        }
      }
      s.insert = 0;
      if (flush === Z_FINISH) {
        flush_block_only(s, true);
        if (s.strm.avail_out === 0) {
          return BS_FINISH_STARTED;
        }
        return BS_FINISH_DONE;
      }
      if (s.last_lit) {
        flush_block_only(s, false);
        if (s.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
      }
      return BS_BLOCK_DONE;
    }
    function deflate_huff(s, flush) {
      var bflush;
      for (; ; ) {
        if (s.lookahead === 0) {
          fill_window(s);
          if (s.lookahead === 0) {
            if (flush === Z_NO_FLUSH) {
              return BS_NEED_MORE;
            }
            break;
          }
        }
        s.match_length = 0;
        bflush = trees._tr_tally(s, 0, s.window[s.strstart]);
        s.lookahead--;
        s.strstart++;
        if (bflush) {
          flush_block_only(s, false);
          if (s.strm.avail_out === 0) {
            return BS_NEED_MORE;
          }
        }
      }
      s.insert = 0;
      if (flush === Z_FINISH) {
        flush_block_only(s, true);
        if (s.strm.avail_out === 0) {
          return BS_FINISH_STARTED;
        }
        return BS_FINISH_DONE;
      }
      if (s.last_lit) {
        flush_block_only(s, false);
        if (s.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
      }
      return BS_BLOCK_DONE;
    }
    function Config(good_length, max_lazy, nice_length, max_chain, func) {
      this.good_length = good_length;
      this.max_lazy = max_lazy;
      this.nice_length = nice_length;
      this.max_chain = max_chain;
      this.func = func;
    }
    var configuration_table;
    configuration_table = [
      /*      good lazy nice chain */
      new Config(0, 0, 0, 0, deflate_stored),
      /* 0 store only */
      new Config(4, 4, 8, 4, deflate_fast),
      /* 1 max speed, no lazy matches */
      new Config(4, 5, 16, 8, deflate_fast),
      /* 2 */
      new Config(4, 6, 32, 32, deflate_fast),
      /* 3 */
      new Config(4, 4, 16, 16, deflate_slow),
      /* 4 lazy matches */
      new Config(8, 16, 32, 32, deflate_slow),
      /* 5 */
      new Config(8, 16, 128, 128, deflate_slow),
      /* 6 */
      new Config(8, 32, 128, 256, deflate_slow),
      /* 7 */
      new Config(32, 128, 258, 1024, deflate_slow),
      /* 8 */
      new Config(32, 258, 258, 4096, deflate_slow)
      /* 9 max compression */
    ];
    function lm_init(s) {
      s.window_size = 2 * s.w_size;
      zero(s.head);
      s.max_lazy_match = configuration_table[s.level].max_lazy;
      s.good_match = configuration_table[s.level].good_length;
      s.nice_match = configuration_table[s.level].nice_length;
      s.max_chain_length = configuration_table[s.level].max_chain;
      s.strstart = 0;
      s.block_start = 0;
      s.lookahead = 0;
      s.insert = 0;
      s.match_length = s.prev_length = MIN_MATCH - 1;
      s.match_available = 0;
      s.ins_h = 0;
    }
    function DeflateState() {
      this.strm = null;
      this.status = 0;
      this.pending_buf = null;
      this.pending_buf_size = 0;
      this.pending_out = 0;
      this.pending = 0;
      this.wrap = 0;
      this.gzhead = null;
      this.gzindex = 0;
      this.method = Z_DEFLATED;
      this.last_flush = -1;
      this.w_size = 0;
      this.w_bits = 0;
      this.w_mask = 0;
      this.window = null;
      this.window_size = 0;
      this.prev = null;
      this.head = null;
      this.ins_h = 0;
      this.hash_size = 0;
      this.hash_bits = 0;
      this.hash_mask = 0;
      this.hash_shift = 0;
      this.block_start = 0;
      this.match_length = 0;
      this.prev_match = 0;
      this.match_available = 0;
      this.strstart = 0;
      this.match_start = 0;
      this.lookahead = 0;
      this.prev_length = 0;
      this.max_chain_length = 0;
      this.max_lazy_match = 0;
      this.level = 0;
      this.strategy = 0;
      this.good_match = 0;
      this.nice_match = 0;
      this.dyn_ltree = new utils.Buf16(HEAP_SIZE * 2);
      this.dyn_dtree = new utils.Buf16((2 * D_CODES + 1) * 2);
      this.bl_tree = new utils.Buf16((2 * BL_CODES + 1) * 2);
      zero(this.dyn_ltree);
      zero(this.dyn_dtree);
      zero(this.bl_tree);
      this.l_desc = null;
      this.d_desc = null;
      this.bl_desc = null;
      this.bl_count = new utils.Buf16(MAX_BITS + 1);
      this.heap = new utils.Buf16(2 * L_CODES + 1);
      zero(this.heap);
      this.heap_len = 0;
      this.heap_max = 0;
      this.depth = new utils.Buf16(2 * L_CODES + 1);
      zero(this.depth);
      this.l_buf = 0;
      this.lit_bufsize = 0;
      this.last_lit = 0;
      this.d_buf = 0;
      this.opt_len = 0;
      this.static_len = 0;
      this.matches = 0;
      this.insert = 0;
      this.bi_buf = 0;
      this.bi_valid = 0;
    }
    function deflateResetKeep(strm) {
      var s;
      if (!strm || !strm.state) {
        return err(strm, Z_STREAM_ERROR);
      }
      strm.total_in = strm.total_out = 0;
      strm.data_type = Z_UNKNOWN;
      s = strm.state;
      s.pending = 0;
      s.pending_out = 0;
      if (s.wrap < 0) {
        s.wrap = -s.wrap;
      }
      s.status = s.wrap ? INIT_STATE : BUSY_STATE;
      strm.adler = s.wrap === 2 ? 0 : 1;
      s.last_flush = Z_NO_FLUSH;
      trees._tr_init(s);
      return Z_OK;
    }
    function deflateReset(strm) {
      var ret = deflateResetKeep(strm);
      if (ret === Z_OK) {
        lm_init(strm.state);
      }
      return ret;
    }
    function deflateSetHeader(strm, head) {
      if (!strm || !strm.state) {
        return Z_STREAM_ERROR;
      }
      if (strm.state.wrap !== 2) {
        return Z_STREAM_ERROR;
      }
      strm.state.gzhead = head;
      return Z_OK;
    }
    function deflateInit2(strm, level, method, windowBits, memLevel, strategy) {
      if (!strm) {
        return Z_STREAM_ERROR;
      }
      var wrap = 1;
      if (level === Z_DEFAULT_COMPRESSION) {
        level = 6;
      }
      if (windowBits < 0) {
        wrap = 0;
        windowBits = -windowBits;
      } else if (windowBits > 15) {
        wrap = 2;
        windowBits -= 16;
      }
      if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED || windowBits < 8 || windowBits > 15 || level < 0 || level > 9 || strategy < 0 || strategy > Z_FIXED) {
        return err(strm, Z_STREAM_ERROR);
      }
      if (windowBits === 8) {
        windowBits = 9;
      }
      var s = new DeflateState();
      strm.state = s;
      s.strm = strm;
      s.wrap = wrap;
      s.gzhead = null;
      s.w_bits = windowBits;
      s.w_size = 1 << s.w_bits;
      s.w_mask = s.w_size - 1;
      s.hash_bits = memLevel + 7;
      s.hash_size = 1 << s.hash_bits;
      s.hash_mask = s.hash_size - 1;
      s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);
      s.window = new utils.Buf8(s.w_size * 2);
      s.head = new utils.Buf16(s.hash_size);
      s.prev = new utils.Buf16(s.w_size);
      s.lit_bufsize = 1 << memLevel + 6;
      s.pending_buf_size = s.lit_bufsize * 4;
      s.pending_buf = new utils.Buf8(s.pending_buf_size);
      s.d_buf = 1 * s.lit_bufsize;
      s.l_buf = (1 + 2) * s.lit_bufsize;
      s.level = level;
      s.strategy = strategy;
      s.method = method;
      return deflateReset(strm);
    }
    function deflateInit(strm, level) {
      return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);
    }
    function deflate(strm, flush) {
      var old_flush, s;
      var beg, val;
      if (!strm || !strm.state || flush > Z_BLOCK || flush < 0) {
        return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;
      }
      s = strm.state;
      if (!strm.output || !strm.input && strm.avail_in !== 0 || s.status === FINISH_STATE && flush !== Z_FINISH) {
        return err(strm, strm.avail_out === 0 ? Z_BUF_ERROR : Z_STREAM_ERROR);
      }
      s.strm = strm;
      old_flush = s.last_flush;
      s.last_flush = flush;
      if (s.status === INIT_STATE) {
        if (s.wrap === 2) {
          strm.adler = 0;
          put_byte(s, 31);
          put_byte(s, 139);
          put_byte(s, 8);
          if (!s.gzhead) {
            put_byte(s, 0);
            put_byte(s, 0);
            put_byte(s, 0);
            put_byte(s, 0);
            put_byte(s, 0);
            put_byte(s, s.level === 9 ? 2 : s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ? 4 : 0);
            put_byte(s, OS_CODE);
            s.status = BUSY_STATE;
          } else {
            put_byte(
              s,
              (s.gzhead.text ? 1 : 0) + (s.gzhead.hcrc ? 2 : 0) + (!s.gzhead.extra ? 0 : 4) + (!s.gzhead.name ? 0 : 8) + (!s.gzhead.comment ? 0 : 16)
            );
            put_byte(s, s.gzhead.time & 255);
            put_byte(s, s.gzhead.time >> 8 & 255);
            put_byte(s, s.gzhead.time >> 16 & 255);
            put_byte(s, s.gzhead.time >> 24 & 255);
            put_byte(s, s.level === 9 ? 2 : s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ? 4 : 0);
            put_byte(s, s.gzhead.os & 255);
            if (s.gzhead.extra && s.gzhead.extra.length) {
              put_byte(s, s.gzhead.extra.length & 255);
              put_byte(s, s.gzhead.extra.length >> 8 & 255);
            }
            if (s.gzhead.hcrc) {
              strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);
            }
            s.gzindex = 0;
            s.status = EXTRA_STATE;
          }
        } else {
          var header = Z_DEFLATED + (s.w_bits - 8 << 4) << 8;
          var level_flags = -1;
          if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {
            level_flags = 0;
          } else if (s.level < 6) {
            level_flags = 1;
          } else if (s.level === 6) {
            level_flags = 2;
          } else {
            level_flags = 3;
          }
          header |= level_flags << 6;
          if (s.strstart !== 0) {
            header |= PRESET_DICT;
          }
          header += 31 - header % 31;
          s.status = BUSY_STATE;
          putShortMSB(s, header);
          if (s.strstart !== 0) {
            putShortMSB(s, strm.adler >>> 16);
            putShortMSB(s, strm.adler & 65535);
          }
          strm.adler = 1;
        }
      }
      if (s.status === EXTRA_STATE) {
        if (s.gzhead.extra) {
          beg = s.pending;
          while (s.gzindex < (s.gzhead.extra.length & 65535)) {
            if (s.pending === s.pending_buf_size) {
              if (s.gzhead.hcrc && s.pending > beg) {
                strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
              }
              flush_pending(strm);
              beg = s.pending;
              if (s.pending === s.pending_buf_size) {
                break;
              }
            }
            put_byte(s, s.gzhead.extra[s.gzindex] & 255);
            s.gzindex++;
          }
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          if (s.gzindex === s.gzhead.extra.length) {
            s.gzindex = 0;
            s.status = NAME_STATE;
          }
        } else {
          s.status = NAME_STATE;
        }
      }
      if (s.status === NAME_STATE) {
        if (s.gzhead.name) {
          beg = s.pending;
          do {
            if (s.pending === s.pending_buf_size) {
              if (s.gzhead.hcrc && s.pending > beg) {
                strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
              }
              flush_pending(strm);
              beg = s.pending;
              if (s.pending === s.pending_buf_size) {
                val = 1;
                break;
              }
            }
            if (s.gzindex < s.gzhead.name.length) {
              val = s.gzhead.name.charCodeAt(s.gzindex++) & 255;
            } else {
              val = 0;
            }
            put_byte(s, val);
          } while (val !== 0);
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          if (val === 0) {
            s.gzindex = 0;
            s.status = COMMENT_STATE;
          }
        } else {
          s.status = COMMENT_STATE;
        }
      }
      if (s.status === COMMENT_STATE) {
        if (s.gzhead.comment) {
          beg = s.pending;
          do {
            if (s.pending === s.pending_buf_size) {
              if (s.gzhead.hcrc && s.pending > beg) {
                strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
              }
              flush_pending(strm);
              beg = s.pending;
              if (s.pending === s.pending_buf_size) {
                val = 1;
                break;
              }
            }
            if (s.gzindex < s.gzhead.comment.length) {
              val = s.gzhead.comment.charCodeAt(s.gzindex++) & 255;
            } else {
              val = 0;
            }
            put_byte(s, val);
          } while (val !== 0);
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          if (val === 0) {
            s.status = HCRC_STATE;
          }
        } else {
          s.status = HCRC_STATE;
        }
      }
      if (s.status === HCRC_STATE) {
        if (s.gzhead.hcrc) {
          if (s.pending + 2 > s.pending_buf_size) {
            flush_pending(strm);
          }
          if (s.pending + 2 <= s.pending_buf_size) {
            put_byte(s, strm.adler & 255);
            put_byte(s, strm.adler >> 8 & 255);
            strm.adler = 0;
            s.status = BUSY_STATE;
          }
        } else {
          s.status = BUSY_STATE;
        }
      }
      if (s.pending !== 0) {
        flush_pending(strm);
        if (strm.avail_out === 0) {
          s.last_flush = -1;
          return Z_OK;
        }
      } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) && flush !== Z_FINISH) {
        return err(strm, Z_BUF_ERROR);
      }
      if (s.status === FINISH_STATE && strm.avail_in !== 0) {
        return err(strm, Z_BUF_ERROR);
      }
      if (strm.avail_in !== 0 || s.lookahead !== 0 || flush !== Z_NO_FLUSH && s.status !== FINISH_STATE) {
        var bstate = s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) : s.strategy === Z_RLE ? deflate_rle(s, flush) : configuration_table[s.level].func(s, flush);
        if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {
          s.status = FINISH_STATE;
        }
        if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {
          if (strm.avail_out === 0) {
            s.last_flush = -1;
          }
          return Z_OK;
        }
        if (bstate === BS_BLOCK_DONE) {
          if (flush === Z_PARTIAL_FLUSH) {
            trees._tr_align(s);
          } else if (flush !== Z_BLOCK) {
            trees._tr_stored_block(s, 0, 0, false);
            if (flush === Z_FULL_FLUSH) {
              zero(s.head);
              if (s.lookahead === 0) {
                s.strstart = 0;
                s.block_start = 0;
                s.insert = 0;
              }
            }
          }
          flush_pending(strm);
          if (strm.avail_out === 0) {
            s.last_flush = -1;
            return Z_OK;
          }
        }
      }
      if (flush !== Z_FINISH) {
        return Z_OK;
      }
      if (s.wrap <= 0) {
        return Z_STREAM_END;
      }
      if (s.wrap === 2) {
        put_byte(s, strm.adler & 255);
        put_byte(s, strm.adler >> 8 & 255);
        put_byte(s, strm.adler >> 16 & 255);
        put_byte(s, strm.adler >> 24 & 255);
        put_byte(s, strm.total_in & 255);
        put_byte(s, strm.total_in >> 8 & 255);
        put_byte(s, strm.total_in >> 16 & 255);
        put_byte(s, strm.total_in >> 24 & 255);
      } else {
        putShortMSB(s, strm.adler >>> 16);
        putShortMSB(s, strm.adler & 65535);
      }
      flush_pending(strm);
      if (s.wrap > 0) {
        s.wrap = -s.wrap;
      }
      return s.pending !== 0 ? Z_OK : Z_STREAM_END;
    }
    function deflateEnd(strm) {
      var status;
      if (!strm || !strm.state) {
        return Z_STREAM_ERROR;
      }
      status = strm.state.status;
      if (status !== INIT_STATE && status !== EXTRA_STATE && status !== NAME_STATE && status !== COMMENT_STATE && status !== HCRC_STATE && status !== BUSY_STATE && status !== FINISH_STATE) {
        return err(strm, Z_STREAM_ERROR);
      }
      strm.state = null;
      return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;
    }
    function deflateSetDictionary(strm, dictionary) {
      var dictLength = dictionary.length;
      var s;
      var str, n;
      var wrap;
      var avail;
      var next;
      var input;
      var tmpDict;
      if (!strm || !strm.state) {
        return Z_STREAM_ERROR;
      }
      s = strm.state;
      wrap = s.wrap;
      if (wrap === 2 || wrap === 1 && s.status !== INIT_STATE || s.lookahead) {
        return Z_STREAM_ERROR;
      }
      if (wrap === 1) {
        strm.adler = adler32(strm.adler, dictionary, dictLength, 0);
      }
      s.wrap = 0;
      if (dictLength >= s.w_size) {
        if (wrap === 0) {
          zero(s.head);
          s.strstart = 0;
          s.block_start = 0;
          s.insert = 0;
        }
        tmpDict = new utils.Buf8(s.w_size);
        utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);
        dictionary = tmpDict;
        dictLength = s.w_size;
      }
      avail = strm.avail_in;
      next = strm.next_in;
      input = strm.input;
      strm.avail_in = dictLength;
      strm.next_in = 0;
      strm.input = dictionary;
      fill_window(s);
      while (s.lookahead >= MIN_MATCH) {
        str = s.strstart;
        n = s.lookahead - (MIN_MATCH - 1);
        do {
          s.ins_h = (s.ins_h << s.hash_shift ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;
          s.prev[str & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = str;
          str++;
        } while (--n);
        s.strstart = str;
        s.lookahead = MIN_MATCH - 1;
        fill_window(s);
      }
      s.strstart += s.lookahead;
      s.block_start = s.strstart;
      s.insert = s.lookahead;
      s.lookahead = 0;
      s.match_length = s.prev_length = MIN_MATCH - 1;
      s.match_available = 0;
      strm.next_in = next;
      strm.input = input;
      strm.avail_in = avail;
      s.wrap = wrap;
      return Z_OK;
    }
    exports.deflateInit = deflateInit;
    exports.deflateInit2 = deflateInit2;
    exports.deflateReset = deflateReset;
    exports.deflateResetKeep = deflateResetKeep;
    exports.deflateSetHeader = deflateSetHeader;
    exports.deflate = deflate;
    exports.deflateEnd = deflateEnd;
    exports.deflateSetDictionary = deflateSetDictionary;
    exports.deflateInfo = "pako deflate (from Nodeca project)";
  }
});

// node_modules/pako/lib/utils/strings.js
var require_strings2 = __commonJS({
  "node_modules/pako/lib/utils/strings.js"(exports) {
    "use strict";
    var utils = require_common2();
    var STR_APPLY_OK = true;
    var STR_APPLY_UIA_OK = true;
    try {
      String.fromCharCode.apply(null, [0]);
    } catch (__) {
      STR_APPLY_OK = false;
    }
    try {
      String.fromCharCode.apply(null, new Uint8Array(1));
    } catch (__) {
      STR_APPLY_UIA_OK = false;
    }
    var _utf8len = new utils.Buf8(256);
    for (q = 0; q < 256; q++) {
      _utf8len[q] = q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1;
    }
    var q;
    _utf8len[254] = _utf8len[254] = 1;
    exports.string2buf = function(str) {
      var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;
      for (m_pos = 0; m_pos < str_len; m_pos++) {
        c = str.charCodeAt(m_pos);
        if ((c & 64512) === 55296 && m_pos + 1 < str_len) {
          c2 = str.charCodeAt(m_pos + 1);
          if ((c2 & 64512) === 56320) {
            c = 65536 + (c - 55296 << 10) + (c2 - 56320);
            m_pos++;
          }
        }
        buf_len += c < 128 ? 1 : c < 2048 ? 2 : c < 65536 ? 3 : 4;
      }
      buf = new utils.Buf8(buf_len);
      for (i = 0, m_pos = 0; i < buf_len; m_pos++) {
        c = str.charCodeAt(m_pos);
        if ((c & 64512) === 55296 && m_pos + 1 < str_len) {
          c2 = str.charCodeAt(m_pos + 1);
          if ((c2 & 64512) === 56320) {
            c = 65536 + (c - 55296 << 10) + (c2 - 56320);
            m_pos++;
          }
        }
        if (c < 128) {
          buf[i++] = c;
        } else if (c < 2048) {
          buf[i++] = 192 | c >>> 6;
          buf[i++] = 128 | c & 63;
        } else if (c < 65536) {
          buf[i++] = 224 | c >>> 12;
          buf[i++] = 128 | c >>> 6 & 63;
          buf[i++] = 128 | c & 63;
        } else {
          buf[i++] = 240 | c >>> 18;
          buf[i++] = 128 | c >>> 12 & 63;
          buf[i++] = 128 | c >>> 6 & 63;
          buf[i++] = 128 | c & 63;
        }
      }
      return buf;
    };
    function buf2binstring(buf, len) {
      if (len < 65534) {
        if (buf.subarray && STR_APPLY_UIA_OK || !buf.subarray && STR_APPLY_OK) {
          return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));
        }
      }
      var result = "";
      for (var i = 0; i < len; i++) {
        result += String.fromCharCode(buf[i]);
      }
      return result;
    }
    exports.buf2binstring = function(buf) {
      return buf2binstring(buf, buf.length);
    };
    exports.binstring2buf = function(str) {
      var buf = new utils.Buf8(str.length);
      for (var i = 0, len = buf.length; i < len; i++) {
        buf[i] = str.charCodeAt(i);
      }
      return buf;
    };
    exports.buf2string = function(buf, max) {
      var i, out, c, c_len;
      var len = max || buf.length;
      var utf16buf = new Array(len * 2);
      for (out = 0, i = 0; i < len; ) {
        c = buf[i++];
        if (c < 128) {
          utf16buf[out++] = c;
          continue;
        }
        c_len = _utf8len[c];
        if (c_len > 4) {
          utf16buf[out++] = 65533;
          i += c_len - 1;
          continue;
        }
        c &= c_len === 2 ? 31 : c_len === 3 ? 15 : 7;
        while (c_len > 1 && i < len) {
          c = c << 6 | buf[i++] & 63;
          c_len--;
        }
        if (c_len > 1) {
          utf16buf[out++] = 65533;
          continue;
        }
        if (c < 65536) {
          utf16buf[out++] = c;
        } else {
          c -= 65536;
          utf16buf[out++] = 55296 | c >> 10 & 1023;
          utf16buf[out++] = 56320 | c & 1023;
        }
      }
      return buf2binstring(utf16buf, out);
    };
    exports.utf8border = function(buf, max) {
      var pos;
      max = max || buf.length;
      if (max > buf.length) {
        max = buf.length;
      }
      pos = max - 1;
      while (pos >= 0 && (buf[pos] & 192) === 128) {
        pos--;
      }
      if (pos < 0) {
        return max;
      }
      if (pos === 0) {
        return max;
      }
      return pos + _utf8len[buf[pos]] > max ? pos : max;
    };
  }
});

// node_modules/pako/lib/zlib/zstream.js
var require_zstream = __commonJS({
  "node_modules/pako/lib/zlib/zstream.js"(exports, module2) {
    "use strict";
    function ZStream() {
      this.input = null;
      this.next_in = 0;
      this.avail_in = 0;
      this.total_in = 0;
      this.output = null;
      this.next_out = 0;
      this.avail_out = 0;
      this.total_out = 0;
      this.msg = "";
      this.state = null;
      this.data_type = 2;
      this.adler = 0;
    }
    module2.exports = ZStream;
  }
});

// node_modules/pako/lib/deflate.js
var require_deflate2 = __commonJS({
  "node_modules/pako/lib/deflate.js"(exports) {
    "use strict";
    var zlib_deflate = require_deflate();
    var utils = require_common2();
    var strings = require_strings2();
    var msg = require_messages();
    var ZStream = require_zstream();
    var toString = Object.prototype.toString;
    var Z_NO_FLUSH = 0;
    var Z_FINISH = 4;
    var Z_OK = 0;
    var Z_STREAM_END = 1;
    var Z_SYNC_FLUSH = 2;
    var Z_DEFAULT_COMPRESSION = -1;
    var Z_DEFAULT_STRATEGY = 0;
    var Z_DEFLATED = 8;
    function Deflate(options) {
      if (!(this instanceof Deflate))
        return new Deflate(options);
      this.options = utils.assign({
        level: Z_DEFAULT_COMPRESSION,
        method: Z_DEFLATED,
        chunkSize: 16384,
        windowBits: 15,
        memLevel: 8,
        strategy: Z_DEFAULT_STRATEGY,
        to: ""
      }, options || {});
      var opt = this.options;
      if (opt.raw && opt.windowBits > 0) {
        opt.windowBits = -opt.windowBits;
      } else if (opt.gzip && opt.windowBits > 0 && opt.windowBits < 16) {
        opt.windowBits += 16;
      }
      this.err = 0;
      this.msg = "";
      this.ended = false;
      this.chunks = [];
      this.strm = new ZStream();
      this.strm.avail_out = 0;
      var status = zlib_deflate.deflateInit2(
        this.strm,
        opt.level,
        opt.method,
        opt.windowBits,
        opt.memLevel,
        opt.strategy
      );
      if (status !== Z_OK) {
        throw new Error(msg[status]);
      }
      if (opt.header) {
        zlib_deflate.deflateSetHeader(this.strm, opt.header);
      }
      if (opt.dictionary) {
        var dict;
        if (typeof opt.dictionary === "string") {
          dict = strings.string2buf(opt.dictionary);
        } else if (toString.call(opt.dictionary) === "[object ArrayBuffer]") {
          dict = new Uint8Array(opt.dictionary);
        } else {
          dict = opt.dictionary;
        }
        status = zlib_deflate.deflateSetDictionary(this.strm, dict);
        if (status !== Z_OK) {
          throw new Error(msg[status]);
        }
        this._dict_set = true;
      }
    }
    Deflate.prototype.push = function(data, mode) {
      var strm = this.strm;
      var chunkSize = this.options.chunkSize;
      var status, _mode;
      if (this.ended) {
        return false;
      }
      _mode = mode === ~~mode ? mode : mode === true ? Z_FINISH : Z_NO_FLUSH;
      if (typeof data === "string") {
        strm.input = strings.string2buf(data);
      } else if (toString.call(data) === "[object ArrayBuffer]") {
        strm.input = new Uint8Array(data);
      } else {
        strm.input = data;
      }
      strm.next_in = 0;
      strm.avail_in = strm.input.length;
      do {
        if (strm.avail_out === 0) {
          strm.output = new utils.Buf8(chunkSize);
          strm.next_out = 0;
          strm.avail_out = chunkSize;
        }
        status = zlib_deflate.deflate(strm, _mode);
        if (status !== Z_STREAM_END && status !== Z_OK) {
          this.onEnd(status);
          this.ended = true;
          return false;
        }
        if (strm.avail_out === 0 || strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH)) {
          if (this.options.to === "string") {
            this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));
          } else {
            this.onData(utils.shrinkBuf(strm.output, strm.next_out));
          }
        }
      } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);
      if (_mode === Z_FINISH) {
        status = zlib_deflate.deflateEnd(this.strm);
        this.onEnd(status);
        this.ended = true;
        return status === Z_OK;
      }
      if (_mode === Z_SYNC_FLUSH) {
        this.onEnd(Z_OK);
        strm.avail_out = 0;
        return true;
      }
      return true;
    };
    Deflate.prototype.onData = function(chunk) {
      this.chunks.push(chunk);
    };
    Deflate.prototype.onEnd = function(status) {
      if (status === Z_OK) {
        if (this.options.to === "string") {
          this.result = this.chunks.join("");
        } else {
          this.result = utils.flattenChunks(this.chunks);
        }
      }
      this.chunks = [];
      this.err = status;
      this.msg = this.strm.msg;
    };
    function deflate(input, options) {
      var deflator = new Deflate(options);
      deflator.push(input, true);
      if (deflator.err) {
        throw deflator.msg || msg[deflator.err];
      }
      return deflator.result;
    }
    function deflateRaw(input, options) {
      options = options || {};
      options.raw = true;
      return deflate(input, options);
    }
    function gzip(input, options) {
      options = options || {};
      options.gzip = true;
      return deflate(input, options);
    }
    exports.Deflate = Deflate;
    exports.deflate = deflate;
    exports.deflateRaw = deflateRaw;
    exports.gzip = gzip;
  }
});

// node_modules/pako/lib/zlib/inffast.js
var require_inffast = __commonJS({
  "node_modules/pako/lib/zlib/inffast.js"(exports, module2) {
    "use strict";
    var BAD = 30;
    var TYPE = 12;
    module2.exports = function inflate_fast(strm, start) {
      var state;
      var _in;
      var last;
      var _out;
      var beg;
      var end;
      var dmax;
      var wsize;
      var whave;
      var wnext;
      var s_window;
      var hold;
      var bits;
      var lcode;
      var dcode;
      var lmask;
      var dmask;
      var here;
      var op;
      var len;
      var dist;
      var from;
      var from_source;
      var input, output;
      state = strm.state;
      _in = strm.next_in;
      input = strm.input;
      last = _in + (strm.avail_in - 5);
      _out = strm.next_out;
      output = strm.output;
      beg = _out - (start - strm.avail_out);
      end = _out + (strm.avail_out - 257);
      dmax = state.dmax;
      wsize = state.wsize;
      whave = state.whave;
      wnext = state.wnext;
      s_window = state.window;
      hold = state.hold;
      bits = state.bits;
      lcode = state.lencode;
      dcode = state.distcode;
      lmask = (1 << state.lenbits) - 1;
      dmask = (1 << state.distbits) - 1;
      top:
        do {
          if (bits < 15) {
            hold += input[_in++] << bits;
            bits += 8;
            hold += input[_in++] << bits;
            bits += 8;
          }
          here = lcode[hold & lmask];
          dolen:
            for (; ; ) {
              op = here >>> 24;
              hold >>>= op;
              bits -= op;
              op = here >>> 16 & 255;
              if (op === 0) {
                output[_out++] = here & 65535;
              } else if (op & 16) {
                len = here & 65535;
                op &= 15;
                if (op) {
                  if (bits < op) {
                    hold += input[_in++] << bits;
                    bits += 8;
                  }
                  len += hold & (1 << op) - 1;
                  hold >>>= op;
                  bits -= op;
                }
                if (bits < 15) {
                  hold += input[_in++] << bits;
                  bits += 8;
                  hold += input[_in++] << bits;
                  bits += 8;
                }
                here = dcode[hold & dmask];
                dodist:
                  for (; ; ) {
                    op = here >>> 24;
                    hold >>>= op;
                    bits -= op;
                    op = here >>> 16 & 255;
                    if (op & 16) {
                      dist = here & 65535;
                      op &= 15;
                      if (bits < op) {
                        hold += input[_in++] << bits;
                        bits += 8;
                        if (bits < op) {
                          hold += input[_in++] << bits;
                          bits += 8;
                        }
                      }
                      dist += hold & (1 << op) - 1;
                      if (dist > dmax) {
                        strm.msg = "invalid distance too far back";
                        state.mode = BAD;
                        break top;
                      }
                      hold >>>= op;
                      bits -= op;
                      op = _out - beg;
                      if (dist > op) {
                        op = dist - op;
                        if (op > whave) {
                          if (state.sane) {
                            strm.msg = "invalid distance too far back";
                            state.mode = BAD;
                            break top;
                          }
                        }
                        from = 0;
                        from_source = s_window;
                        if (wnext === 0) {
                          from += wsize - op;
                          if (op < len) {
                            len -= op;
                            do {
                              output[_out++] = s_window[from++];
                            } while (--op);
                            from = _out - dist;
                            from_source = output;
                          }
                        } else if (wnext < op) {
                          from += wsize + wnext - op;
                          op -= wnext;
                          if (op < len) {
                            len -= op;
                            do {
                              output[_out++] = s_window[from++];
                            } while (--op);
                            from = 0;
                            if (wnext < len) {
                              op = wnext;
                              len -= op;
                              do {
                                output[_out++] = s_window[from++];
                              } while (--op);
                              from = _out - dist;
                              from_source = output;
                            }
                          }
                        } else {
                          from += wnext - op;
                          if (op < len) {
                            len -= op;
                            do {
                              output[_out++] = s_window[from++];
                            } while (--op);
                            from = _out - dist;
                            from_source = output;
                          }
                        }
                        while (len > 2) {
                          output[_out++] = from_source[from++];
                          output[_out++] = from_source[from++];
                          output[_out++] = from_source[from++];
                          len -= 3;
                        }
                        if (len) {
                          output[_out++] = from_source[from++];
                          if (len > 1) {
                            output[_out++] = from_source[from++];
                          }
                        }
                      } else {
                        from = _out - dist;
                        do {
                          output[_out++] = output[from++];
                          output[_out++] = output[from++];
                          output[_out++] = output[from++];
                          len -= 3;
                        } while (len > 2);
                        if (len) {
                          output[_out++] = output[from++];
                          if (len > 1) {
                            output[_out++] = output[from++];
                          }
                        }
                      }
                    } else if ((op & 64) === 0) {
                      here = dcode[(here & 65535) + (hold & (1 << op) - 1)];
                      continue dodist;
                    } else {
                      strm.msg = "invalid distance code";
                      state.mode = BAD;
                      break top;
                    }
                    break;
                  }
              } else if ((op & 64) === 0) {
                here = lcode[(here & 65535) + (hold & (1 << op) - 1)];
                continue dolen;
              } else if (op & 32) {
                state.mode = TYPE;
                break top;
              } else {
                strm.msg = "invalid literal/length code";
                state.mode = BAD;
                break top;
              }
              break;
            }
        } while (_in < last && _out < end);
      len = bits >> 3;
      _in -= len;
      bits -= len << 3;
      hold &= (1 << bits) - 1;
      strm.next_in = _in;
      strm.next_out = _out;
      strm.avail_in = _in < last ? 5 + (last - _in) : 5 - (_in - last);
      strm.avail_out = _out < end ? 257 + (end - _out) : 257 - (_out - end);
      state.hold = hold;
      state.bits = bits;
      return;
    };
  }
});

// node_modules/pako/lib/zlib/inftrees.js
var require_inftrees = __commonJS({
  "node_modules/pako/lib/zlib/inftrees.js"(exports, module2) {
    "use strict";
    var utils = require_common2();
    var MAXBITS = 15;
    var ENOUGH_LENS = 852;
    var ENOUGH_DISTS = 592;
    var CODES = 0;
    var LENS = 1;
    var DISTS = 2;
    var lbase = [
      /* Length codes 257..285 base */
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      13,
      15,
      17,
      19,
      23,
      27,
      31,
      35,
      43,
      51,
      59,
      67,
      83,
      99,
      115,
      131,
      163,
      195,
      227,
      258,
      0,
      0
    ];
    var lext = [
      /* Length codes 257..285 extra */
      16,
      16,
      16,
      16,
      16,
      16,
      16,
      16,
      17,
      17,
      17,
      17,
      18,
      18,
      18,
      18,
      19,
      19,
      19,
      19,
      20,
      20,
      20,
      20,
      21,
      21,
      21,
      21,
      16,
      72,
      78
    ];
    var dbase = [
      /* Distance codes 0..29 base */
      1,
      2,
      3,
      4,
      5,
      7,
      9,
      13,
      17,
      25,
      33,
      49,
      65,
      97,
      129,
      193,
      257,
      385,
      513,
      769,
      1025,
      1537,
      2049,
      3073,
      4097,
      6145,
      8193,
      12289,
      16385,
      24577,
      0,
      0
    ];
    var dext = [
      /* Distance codes 0..29 extra */
      16,
      16,
      16,
      16,
      17,
      17,
      18,
      18,
      19,
      19,
      20,
      20,
      21,
      21,
      22,
      22,
      23,
      23,
      24,
      24,
      25,
      25,
      26,
      26,
      27,
      27,
      28,
      28,
      29,
      29,
      64,
      64
    ];
    module2.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts) {
      var bits = opts.bits;
      var len = 0;
      var sym = 0;
      var min = 0, max = 0;
      var root = 0;
      var curr = 0;
      var drop = 0;
      var left = 0;
      var used = 0;
      var huff = 0;
      var incr;
      var fill;
      var low;
      var mask;
      var next;
      var base = null;
      var base_index = 0;
      var end;
      var count = new utils.Buf16(MAXBITS + 1);
      var offs = new utils.Buf16(MAXBITS + 1);
      var extra = null;
      var extra_index = 0;
      var here_bits, here_op, here_val;
      for (len = 0; len <= MAXBITS; len++) {
        count[len] = 0;
      }
      for (sym = 0; sym < codes; sym++) {
        count[lens[lens_index + sym]]++;
      }
      root = bits;
      for (max = MAXBITS; max >= 1; max--) {
        if (count[max] !== 0) {
          break;
        }
      }
      if (root > max) {
        root = max;
      }
      if (max === 0) {
        table[table_index++] = 1 << 24 | 64 << 16 | 0;
        table[table_index++] = 1 << 24 | 64 << 16 | 0;
        opts.bits = 1;
        return 0;
      }
      for (min = 1; min < max; min++) {
        if (count[min] !== 0) {
          break;
        }
      }
      if (root < min) {
        root = min;
      }
      left = 1;
      for (len = 1; len <= MAXBITS; len++) {
        left <<= 1;
        left -= count[len];
        if (left < 0) {
          return -1;
        }
      }
      if (left > 0 && (type === CODES || max !== 1)) {
        return -1;
      }
      offs[1] = 0;
      for (len = 1; len < MAXBITS; len++) {
        offs[len + 1] = offs[len] + count[len];
      }
      for (sym = 0; sym < codes; sym++) {
        if (lens[lens_index + sym] !== 0) {
          work[offs[lens[lens_index + sym]]++] = sym;
        }
      }
      if (type === CODES) {
        base = extra = work;
        end = 19;
      } else if (type === LENS) {
        base = lbase;
        base_index -= 257;
        extra = lext;
        extra_index -= 257;
        end = 256;
      } else {
        base = dbase;
        extra = dext;
        end = -1;
      }
      huff = 0;
      sym = 0;
      len = min;
      next = table_index;
      curr = root;
      drop = 0;
      low = -1;
      used = 1 << root;
      mask = used - 1;
      if (type === LENS && used > ENOUGH_LENS || type === DISTS && used > ENOUGH_DISTS) {
        return 1;
      }
      for (; ; ) {
        here_bits = len - drop;
        if (work[sym] < end) {
          here_op = 0;
          here_val = work[sym];
        } else if (work[sym] > end) {
          here_op = extra[extra_index + work[sym]];
          here_val = base[base_index + work[sym]];
        } else {
          here_op = 32 + 64;
          here_val = 0;
        }
        incr = 1 << len - drop;
        fill = 1 << curr;
        min = fill;
        do {
          fill -= incr;
          table[next + (huff >> drop) + fill] = here_bits << 24 | here_op << 16 | here_val | 0;
        } while (fill !== 0);
        incr = 1 << len - 1;
        while (huff & incr) {
          incr >>= 1;
        }
        if (incr !== 0) {
          huff &= incr - 1;
          huff += incr;
        } else {
          huff = 0;
        }
        sym++;
        if (--count[len] === 0) {
          if (len === max) {
            break;
          }
          len = lens[lens_index + work[sym]];
        }
        if (len > root && (huff & mask) !== low) {
          if (drop === 0) {
            drop = root;
          }
          next += min;
          curr = len - drop;
          left = 1 << curr;
          while (curr + drop < max) {
            left -= count[curr + drop];
            if (left <= 0) {
              break;
            }
            curr++;
            left <<= 1;
          }
          used += 1 << curr;
          if (type === LENS && used > ENOUGH_LENS || type === DISTS && used > ENOUGH_DISTS) {
            return 1;
          }
          low = huff & mask;
          table[low] = root << 24 | curr << 16 | next - table_index | 0;
        }
      }
      if (huff !== 0) {
        table[next + huff] = len - drop << 24 | 64 << 16 | 0;
      }
      opts.bits = root;
      return 0;
    };
  }
});

// node_modules/pako/lib/zlib/inflate.js
var require_inflate = __commonJS({
  "node_modules/pako/lib/zlib/inflate.js"(exports) {
    "use strict";
    var utils = require_common2();
    var adler32 = require_adler32();
    var crc32 = require_crc32();
    var inflate_fast = require_inffast();
    var inflate_table = require_inftrees();
    var CODES = 0;
    var LENS = 1;
    var DISTS = 2;
    var Z_FINISH = 4;
    var Z_BLOCK = 5;
    var Z_TREES = 6;
    var Z_OK = 0;
    var Z_STREAM_END = 1;
    var Z_NEED_DICT = 2;
    var Z_STREAM_ERROR = -2;
    var Z_DATA_ERROR = -3;
    var Z_MEM_ERROR = -4;
    var Z_BUF_ERROR = -5;
    var Z_DEFLATED = 8;
    var HEAD = 1;
    var FLAGS = 2;
    var TIME = 3;
    var OS = 4;
    var EXLEN = 5;
    var EXTRA = 6;
    var NAME = 7;
    var COMMENT = 8;
    var HCRC = 9;
    var DICTID = 10;
    var DICT = 11;
    var TYPE = 12;
    var TYPEDO = 13;
    var STORED = 14;
    var COPY_ = 15;
    var COPY = 16;
    var TABLE = 17;
    var LENLENS = 18;
    var CODELENS = 19;
    var LEN_ = 20;
    var LEN = 21;
    var LENEXT = 22;
    var DIST = 23;
    var DISTEXT = 24;
    var MATCH = 25;
    var LIT = 26;
    var CHECK = 27;
    var LENGTH = 28;
    var DONE = 29;
    var BAD = 30;
    var MEM = 31;
    var SYNC = 32;
    var ENOUGH_LENS = 852;
    var ENOUGH_DISTS = 592;
    var MAX_WBITS = 15;
    var DEF_WBITS = MAX_WBITS;
    function zswap32(q) {
      return (q >>> 24 & 255) + (q >>> 8 & 65280) + ((q & 65280) << 8) + ((q & 255) << 24);
    }
    function InflateState() {
      this.mode = 0;
      this.last = false;
      this.wrap = 0;
      this.havedict = false;
      this.flags = 0;
      this.dmax = 0;
      this.check = 0;
      this.total = 0;
      this.head = null;
      this.wbits = 0;
      this.wsize = 0;
      this.whave = 0;
      this.wnext = 0;
      this.window = null;
      this.hold = 0;
      this.bits = 0;
      this.length = 0;
      this.offset = 0;
      this.extra = 0;
      this.lencode = null;
      this.distcode = null;
      this.lenbits = 0;
      this.distbits = 0;
      this.ncode = 0;
      this.nlen = 0;
      this.ndist = 0;
      this.have = 0;
      this.next = null;
      this.lens = new utils.Buf16(320);
      this.work = new utils.Buf16(288);
      this.lendyn = null;
      this.distdyn = null;
      this.sane = 0;
      this.back = 0;
      this.was = 0;
    }
    function inflateResetKeep(strm) {
      var state;
      if (!strm || !strm.state) {
        return Z_STREAM_ERROR;
      }
      state = strm.state;
      strm.total_in = strm.total_out = state.total = 0;
      strm.msg = "";
      if (state.wrap) {
        strm.adler = state.wrap & 1;
      }
      state.mode = HEAD;
      state.last = 0;
      state.havedict = 0;
      state.dmax = 32768;
      state.head = null;
      state.hold = 0;
      state.bits = 0;
      state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);
      state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);
      state.sane = 1;
      state.back = -1;
      return Z_OK;
    }
    function inflateReset(strm) {
      var state;
      if (!strm || !strm.state) {
        return Z_STREAM_ERROR;
      }
      state = strm.state;
      state.wsize = 0;
      state.whave = 0;
      state.wnext = 0;
      return inflateResetKeep(strm);
    }
    function inflateReset2(strm, windowBits) {
      var wrap;
      var state;
      if (!strm || !strm.state) {
        return Z_STREAM_ERROR;
      }
      state = strm.state;
      if (windowBits < 0) {
        wrap = 0;
        windowBits = -windowBits;
      } else {
        wrap = (windowBits >> 4) + 1;
        if (windowBits < 48) {
          windowBits &= 15;
        }
      }
      if (windowBits && (windowBits < 8 || windowBits > 15)) {
        return Z_STREAM_ERROR;
      }
      if (state.window !== null && state.wbits !== windowBits) {
        state.window = null;
      }
      state.wrap = wrap;
      state.wbits = windowBits;
      return inflateReset(strm);
    }
    function inflateInit2(strm, windowBits) {
      var ret;
      var state;
      if (!strm) {
        return Z_STREAM_ERROR;
      }
      state = new InflateState();
      strm.state = state;
      state.window = null;
      ret = inflateReset2(strm, windowBits);
      if (ret !== Z_OK) {
        strm.state = null;
      }
      return ret;
    }
    function inflateInit(strm) {
      return inflateInit2(strm, DEF_WBITS);
    }
    var virgin = true;
    var lenfix;
    var distfix;
    function fixedtables(state) {
      if (virgin) {
        var sym;
        lenfix = new utils.Buf32(512);
        distfix = new utils.Buf32(32);
        sym = 0;
        while (sym < 144) {
          state.lens[sym++] = 8;
        }
        while (sym < 256) {
          state.lens[sym++] = 9;
        }
        while (sym < 280) {
          state.lens[sym++] = 7;
        }
        while (sym < 288) {
          state.lens[sym++] = 8;
        }
        inflate_table(LENS, state.lens, 0, 288, lenfix, 0, state.work, { bits: 9 });
        sym = 0;
        while (sym < 32) {
          state.lens[sym++] = 5;
        }
        inflate_table(DISTS, state.lens, 0, 32, distfix, 0, state.work, { bits: 5 });
        virgin = false;
      }
      state.lencode = lenfix;
      state.lenbits = 9;
      state.distcode = distfix;
      state.distbits = 5;
    }
    function updatewindow(strm, src, end, copy) {
      var dist;
      var state = strm.state;
      if (state.window === null) {
        state.wsize = 1 << state.wbits;
        state.wnext = 0;
        state.whave = 0;
        state.window = new utils.Buf8(state.wsize);
      }
      if (copy >= state.wsize) {
        utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);
        state.wnext = 0;
        state.whave = state.wsize;
      } else {
        dist = state.wsize - state.wnext;
        if (dist > copy) {
          dist = copy;
        }
        utils.arraySet(state.window, src, end - copy, dist, state.wnext);
        copy -= dist;
        if (copy) {
          utils.arraySet(state.window, src, end - copy, copy, 0);
          state.wnext = copy;
          state.whave = state.wsize;
        } else {
          state.wnext += dist;
          if (state.wnext === state.wsize) {
            state.wnext = 0;
          }
          if (state.whave < state.wsize) {
            state.whave += dist;
          }
        }
      }
      return 0;
    }
    function inflate(strm, flush) {
      var state;
      var input, output;
      var next;
      var put;
      var have, left;
      var hold;
      var bits;
      var _in, _out;
      var copy;
      var from;
      var from_source;
      var here = 0;
      var here_bits, here_op, here_val;
      var last_bits, last_op, last_val;
      var len;
      var ret;
      var hbuf = new utils.Buf8(4);
      var opts;
      var n;
      var order = (
        /* permutation of code lengths */
        [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]
      );
      if (!strm || !strm.state || !strm.output || !strm.input && strm.avail_in !== 0) {
        return Z_STREAM_ERROR;
      }
      state = strm.state;
      if (state.mode === TYPE) {
        state.mode = TYPEDO;
      }
      put = strm.next_out;
      output = strm.output;
      left = strm.avail_out;
      next = strm.next_in;
      input = strm.input;
      have = strm.avail_in;
      hold = state.hold;
      bits = state.bits;
      _in = have;
      _out = left;
      ret = Z_OK;
      inf_leave:
        for (; ; ) {
          switch (state.mode) {
            case HEAD:
              if (state.wrap === 0) {
                state.mode = TYPEDO;
                break;
              }
              while (bits < 16) {
                if (have === 0) {
                  break inf_leave;
                }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              if (state.wrap & 2 && hold === 35615) {
                state.check = 0;
                hbuf[0] = hold & 255;
                hbuf[1] = hold >>> 8 & 255;
                state.check = crc32(state.check, hbuf, 2, 0);
                hold = 0;
                bits = 0;
                state.mode = FLAGS;
                break;
              }
              state.flags = 0;
              if (state.head) {
                state.head.done = false;
              }
              if (!(state.wrap & 1) || /* check if zlib header allowed */
              (((hold & 255) << 8) + (hold >> 8)) % 31) {
                strm.msg = "incorrect header check";
                state.mode = BAD;
                break;
              }
              if ((hold & 15) !== Z_DEFLATED) {
                strm.msg = "unknown compression method";
                state.mode = BAD;
                break;
              }
              hold >>>= 4;
              bits -= 4;
              len = (hold & 15) + 8;
              if (state.wbits === 0) {
                state.wbits = len;
              } else if (len > state.wbits) {
                strm.msg = "invalid window size";
                state.mode = BAD;
                break;
              }
              state.dmax = 1 << len;
              strm.adler = state.check = 1;
              state.mode = hold & 512 ? DICTID : TYPE;
              hold = 0;
              bits = 0;
              break;
            case FLAGS:
              while (bits < 16) {
                if (have === 0) {
                  break inf_leave;
                }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              state.flags = hold;
              if ((state.flags & 255) !== Z_DEFLATED) {
                strm.msg = "unknown compression method";
                state.mode = BAD;
                break;
              }
              if (state.flags & 57344) {
                strm.msg = "unknown header flags set";
                state.mode = BAD;
                break;
              }
              if (state.head) {
                state.head.text = hold >> 8 & 1;
              }
              if (state.flags & 512) {
                hbuf[0] = hold & 255;
                hbuf[1] = hold >>> 8 & 255;
                state.check = crc32(state.check, hbuf, 2, 0);
              }
              hold = 0;
              bits = 0;
              state.mode = TIME;
            case TIME:
              while (bits < 32) {
                if (have === 0) {
                  break inf_leave;
                }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              if (state.head) {
                state.head.time = hold;
              }
              if (state.flags & 512) {
                hbuf[0] = hold & 255;
                hbuf[1] = hold >>> 8 & 255;
                hbuf[2] = hold >>> 16 & 255;
                hbuf[3] = hold >>> 24 & 255;
                state.check = crc32(state.check, hbuf, 4, 0);
              }
              hold = 0;
              bits = 0;
              state.mode = OS;
            case OS:
              while (bits < 16) {
                if (have === 0) {
                  break inf_leave;
                }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              if (state.head) {
                state.head.xflags = hold & 255;
                state.head.os = hold >> 8;
              }
              if (state.flags & 512) {
                hbuf[0] = hold & 255;
                hbuf[1] = hold >>> 8 & 255;
                state.check = crc32(state.check, hbuf, 2, 0);
              }
              hold = 0;
              bits = 0;
              state.mode = EXLEN;
            case EXLEN:
              if (state.flags & 1024) {
                while (bits < 16) {
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold += input[next++] << bits;
                  bits += 8;
                }
                state.length = hold;
                if (state.head) {
                  state.head.extra_len = hold;
                }
                if (state.flags & 512) {
                  hbuf[0] = hold & 255;
                  hbuf[1] = hold >>> 8 & 255;
                  state.check = crc32(state.check, hbuf, 2, 0);
                }
                hold = 0;
                bits = 0;
              } else if (state.head) {
                state.head.extra = null;
              }
              state.mode = EXTRA;
            case EXTRA:
              if (state.flags & 1024) {
                copy = state.length;
                if (copy > have) {
                  copy = have;
                }
                if (copy) {
                  if (state.head) {
                    len = state.head.extra_len - state.length;
                    if (!state.head.extra) {
                      state.head.extra = new Array(state.head.extra_len);
                    }
                    utils.arraySet(
                      state.head.extra,
                      input,
                      next,
                      // extra field is limited to 65536 bytes
                      // - no need for additional size check
                      copy,
                      /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
                      len
                    );
                  }
                  if (state.flags & 512) {
                    state.check = crc32(state.check, input, copy, next);
                  }
                  have -= copy;
                  next += copy;
                  state.length -= copy;
                }
                if (state.length) {
                  break inf_leave;
                }
              }
              state.length = 0;
              state.mode = NAME;
            case NAME:
              if (state.flags & 2048) {
                if (have === 0) {
                  break inf_leave;
                }
                copy = 0;
                do {
                  len = input[next + copy++];
                  if (state.head && len && state.length < 65536) {
                    state.head.name += String.fromCharCode(len);
                  }
                } while (len && copy < have);
                if (state.flags & 512) {
                  state.check = crc32(state.check, input, copy, next);
                }
                have -= copy;
                next += copy;
                if (len) {
                  break inf_leave;
                }
              } else if (state.head) {
                state.head.name = null;
              }
              state.length = 0;
              state.mode = COMMENT;
            case COMMENT:
              if (state.flags & 4096) {
                if (have === 0) {
                  break inf_leave;
                }
                copy = 0;
                do {
                  len = input[next + copy++];
                  if (state.head && len && state.length < 65536) {
                    state.head.comment += String.fromCharCode(len);
                  }
                } while (len && copy < have);
                if (state.flags & 512) {
                  state.check = crc32(state.check, input, copy, next);
                }
                have -= copy;
                next += copy;
                if (len) {
                  break inf_leave;
                }
              } else if (state.head) {
                state.head.comment = null;
              }
              state.mode = HCRC;
            case HCRC:
              if (state.flags & 512) {
                while (bits < 16) {
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold += input[next++] << bits;
                  bits += 8;
                }
                if (hold !== (state.check & 65535)) {
                  strm.msg = "header crc mismatch";
                  state.mode = BAD;
                  break;
                }
                hold = 0;
                bits = 0;
              }
              if (state.head) {
                state.head.hcrc = state.flags >> 9 & 1;
                state.head.done = true;
              }
              strm.adler = state.check = 0;
              state.mode = TYPE;
              break;
            case DICTID:
              while (bits < 32) {
                if (have === 0) {
                  break inf_leave;
                }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              strm.adler = state.check = zswap32(hold);
              hold = 0;
              bits = 0;
              state.mode = DICT;
            case DICT:
              if (state.havedict === 0) {
                strm.next_out = put;
                strm.avail_out = left;
                strm.next_in = next;
                strm.avail_in = have;
                state.hold = hold;
                state.bits = bits;
                return Z_NEED_DICT;
              }
              strm.adler = state.check = 1;
              state.mode = TYPE;
            case TYPE:
              if (flush === Z_BLOCK || flush === Z_TREES) {
                break inf_leave;
              }
            case TYPEDO:
              if (state.last) {
                hold >>>= bits & 7;
                bits -= bits & 7;
                state.mode = CHECK;
                break;
              }
              while (bits < 3) {
                if (have === 0) {
                  break inf_leave;
                }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              state.last = hold & 1;
              hold >>>= 1;
              bits -= 1;
              switch (hold & 3) {
                case 0:
                  state.mode = STORED;
                  break;
                case 1:
                  fixedtables(state);
                  state.mode = LEN_;
                  if (flush === Z_TREES) {
                    hold >>>= 2;
                    bits -= 2;
                    break inf_leave;
                  }
                  break;
                case 2:
                  state.mode = TABLE;
                  break;
                case 3:
                  strm.msg = "invalid block type";
                  state.mode = BAD;
              }
              hold >>>= 2;
              bits -= 2;
              break;
            case STORED:
              hold >>>= bits & 7;
              bits -= bits & 7;
              while (bits < 32) {
                if (have === 0) {
                  break inf_leave;
                }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              if ((hold & 65535) !== (hold >>> 16 ^ 65535)) {
                strm.msg = "invalid stored block lengths";
                state.mode = BAD;
                break;
              }
              state.length = hold & 65535;
              hold = 0;
              bits = 0;
              state.mode = COPY_;
              if (flush === Z_TREES) {
                break inf_leave;
              }
            case COPY_:
              state.mode = COPY;
            case COPY:
              copy = state.length;
              if (copy) {
                if (copy > have) {
                  copy = have;
                }
                if (copy > left) {
                  copy = left;
                }
                if (copy === 0) {
                  break inf_leave;
                }
                utils.arraySet(output, input, next, copy, put);
                have -= copy;
                next += copy;
                left -= copy;
                put += copy;
                state.length -= copy;
                break;
              }
              state.mode = TYPE;
              break;
            case TABLE:
              while (bits < 14) {
                if (have === 0) {
                  break inf_leave;
                }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              state.nlen = (hold & 31) + 257;
              hold >>>= 5;
              bits -= 5;
              state.ndist = (hold & 31) + 1;
              hold >>>= 5;
              bits -= 5;
              state.ncode = (hold & 15) + 4;
              hold >>>= 4;
              bits -= 4;
              if (state.nlen > 286 || state.ndist > 30) {
                strm.msg = "too many length or distance symbols";
                state.mode = BAD;
                break;
              }
              state.have = 0;
              state.mode = LENLENS;
            case LENLENS:
              while (state.have < state.ncode) {
                while (bits < 3) {
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold += input[next++] << bits;
                  bits += 8;
                }
                state.lens[order[state.have++]] = hold & 7;
                hold >>>= 3;
                bits -= 3;
              }
              while (state.have < 19) {
                state.lens[order[state.have++]] = 0;
              }
              state.lencode = state.lendyn;
              state.lenbits = 7;
              opts = { bits: state.lenbits };
              ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);
              state.lenbits = opts.bits;
              if (ret) {
                strm.msg = "invalid code lengths set";
                state.mode = BAD;
                break;
              }
              state.have = 0;
              state.mode = CODELENS;
            case CODELENS:
              while (state.have < state.nlen + state.ndist) {
                for (; ; ) {
                  here = state.lencode[hold & (1 << state.lenbits) - 1];
                  here_bits = here >>> 24;
                  here_op = here >>> 16 & 255;
                  here_val = here & 65535;
                  if (here_bits <= bits) {
                    break;
                  }
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold += input[next++] << bits;
                  bits += 8;
                }
                if (here_val < 16) {
                  hold >>>= here_bits;
                  bits -= here_bits;
                  state.lens[state.have++] = here_val;
                } else {
                  if (here_val === 16) {
                    n = here_bits + 2;
                    while (bits < n) {
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                    }
                    hold >>>= here_bits;
                    bits -= here_bits;
                    if (state.have === 0) {
                      strm.msg = "invalid bit length repeat";
                      state.mode = BAD;
                      break;
                    }
                    len = state.lens[state.have - 1];
                    copy = 3 + (hold & 3);
                    hold >>>= 2;
                    bits -= 2;
                  } else if (here_val === 17) {
                    n = here_bits + 3;
                    while (bits < n) {
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                    }
                    hold >>>= here_bits;
                    bits -= here_bits;
                    len = 0;
                    copy = 3 + (hold & 7);
                    hold >>>= 3;
                    bits -= 3;
                  } else {
                    n = here_bits + 7;
                    while (bits < n) {
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                    }
                    hold >>>= here_bits;
                    bits -= here_bits;
                    len = 0;
                    copy = 11 + (hold & 127);
                    hold >>>= 7;
                    bits -= 7;
                  }
                  if (state.have + copy > state.nlen + state.ndist) {
                    strm.msg = "invalid bit length repeat";
                    state.mode = BAD;
                    break;
                  }
                  while (copy--) {
                    state.lens[state.have++] = len;
                  }
                }
              }
              if (state.mode === BAD) {
                break;
              }
              if (state.lens[256] === 0) {
                strm.msg = "invalid code -- missing end-of-block";
                state.mode = BAD;
                break;
              }
              state.lenbits = 9;
              opts = { bits: state.lenbits };
              ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);
              state.lenbits = opts.bits;
              if (ret) {
                strm.msg = "invalid literal/lengths set";
                state.mode = BAD;
                break;
              }
              state.distbits = 6;
              state.distcode = state.distdyn;
              opts = { bits: state.distbits };
              ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);
              state.distbits = opts.bits;
              if (ret) {
                strm.msg = "invalid distances set";
                state.mode = BAD;
                break;
              }
              state.mode = LEN_;
              if (flush === Z_TREES) {
                break inf_leave;
              }
            case LEN_:
              state.mode = LEN;
            case LEN:
              if (have >= 6 && left >= 258) {
                strm.next_out = put;
                strm.avail_out = left;
                strm.next_in = next;
                strm.avail_in = have;
                state.hold = hold;
                state.bits = bits;
                inflate_fast(strm, _out);
                put = strm.next_out;
                output = strm.output;
                left = strm.avail_out;
                next = strm.next_in;
                input = strm.input;
                have = strm.avail_in;
                hold = state.hold;
                bits = state.bits;
                if (state.mode === TYPE) {
                  state.back = -1;
                }
                break;
              }
              state.back = 0;
              for (; ; ) {
                here = state.lencode[hold & (1 << state.lenbits) - 1];
                here_bits = here >>> 24;
                here_op = here >>> 16 & 255;
                here_val = here & 65535;
                if (here_bits <= bits) {
                  break;
                }
                if (have === 0) {
                  break inf_leave;
                }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              if (here_op && (here_op & 240) === 0) {
                last_bits = here_bits;
                last_op = here_op;
                last_val = here_val;
                for (; ; ) {
                  here = state.lencode[last_val + ((hold & (1 << last_bits + last_op) - 1) >> last_bits)];
                  here_bits = here >>> 24;
                  here_op = here >>> 16 & 255;
                  here_val = here & 65535;
                  if (last_bits + here_bits <= bits) {
                    break;
                  }
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold += input[next++] << bits;
                  bits += 8;
                }
                hold >>>= last_bits;
                bits -= last_bits;
                state.back += last_bits;
              }
              hold >>>= here_bits;
              bits -= here_bits;
              state.back += here_bits;
              state.length = here_val;
              if (here_op === 0) {
                state.mode = LIT;
                break;
              }
              if (here_op & 32) {
                state.back = -1;
                state.mode = TYPE;
                break;
              }
              if (here_op & 64) {
                strm.msg = "invalid literal/length code";
                state.mode = BAD;
                break;
              }
              state.extra = here_op & 15;
              state.mode = LENEXT;
            case LENEXT:
              if (state.extra) {
                n = state.extra;
                while (bits < n) {
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold += input[next++] << bits;
                  bits += 8;
                }
                state.length += hold & (1 << state.extra) - 1;
                hold >>>= state.extra;
                bits -= state.extra;
                state.back += state.extra;
              }
              state.was = state.length;
              state.mode = DIST;
            case DIST:
              for (; ; ) {
                here = state.distcode[hold & (1 << state.distbits) - 1];
                here_bits = here >>> 24;
                here_op = here >>> 16 & 255;
                here_val = here & 65535;
                if (here_bits <= bits) {
                  break;
                }
                if (have === 0) {
                  break inf_leave;
                }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              if ((here_op & 240) === 0) {
                last_bits = here_bits;
                last_op = here_op;
                last_val = here_val;
                for (; ; ) {
                  here = state.distcode[last_val + ((hold & (1 << last_bits + last_op) - 1) >> last_bits)];
                  here_bits = here >>> 24;
                  here_op = here >>> 16 & 255;
                  here_val = here & 65535;
                  if (last_bits + here_bits <= bits) {
                    break;
                  }
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold += input[next++] << bits;
                  bits += 8;
                }
                hold >>>= last_bits;
                bits -= last_bits;
                state.back += last_bits;
              }
              hold >>>= here_bits;
              bits -= here_bits;
              state.back += here_bits;
              if (here_op & 64) {
                strm.msg = "invalid distance code";
                state.mode = BAD;
                break;
              }
              state.offset = here_val;
              state.extra = here_op & 15;
              state.mode = DISTEXT;
            case DISTEXT:
              if (state.extra) {
                n = state.extra;
                while (bits < n) {
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold += input[next++] << bits;
                  bits += 8;
                }
                state.offset += hold & (1 << state.extra) - 1;
                hold >>>= state.extra;
                bits -= state.extra;
                state.back += state.extra;
              }
              if (state.offset > state.dmax) {
                strm.msg = "invalid distance too far back";
                state.mode = BAD;
                break;
              }
              state.mode = MATCH;
            case MATCH:
              if (left === 0) {
                break inf_leave;
              }
              copy = _out - left;
              if (state.offset > copy) {
                copy = state.offset - copy;
                if (copy > state.whave) {
                  if (state.sane) {
                    strm.msg = "invalid distance too far back";
                    state.mode = BAD;
                    break;
                  }
                }
                if (copy > state.wnext) {
                  copy -= state.wnext;
                  from = state.wsize - copy;
                } else {
                  from = state.wnext - copy;
                }
                if (copy > state.length) {
                  copy = state.length;
                }
                from_source = state.window;
              } else {
                from_source = output;
                from = put - state.offset;
                copy = state.length;
              }
              if (copy > left) {
                copy = left;
              }
              left -= copy;
              state.length -= copy;
              do {
                output[put++] = from_source[from++];
              } while (--copy);
              if (state.length === 0) {
                state.mode = LEN;
              }
              break;
            case LIT:
              if (left === 0) {
                break inf_leave;
              }
              output[put++] = state.length;
              left--;
              state.mode = LEN;
              break;
            case CHECK:
              if (state.wrap) {
                while (bits < 32) {
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold |= input[next++] << bits;
                  bits += 8;
                }
                _out -= left;
                strm.total_out += _out;
                state.total += _out;
                if (_out) {
                  strm.adler = state.check = /*UPDATE(state.check, put - _out, _out);*/
                  state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out);
                }
                _out = left;
                if ((state.flags ? hold : zswap32(hold)) !== state.check) {
                  strm.msg = "incorrect data check";
                  state.mode = BAD;
                  break;
                }
                hold = 0;
                bits = 0;
              }
              state.mode = LENGTH;
            case LENGTH:
              if (state.wrap && state.flags) {
                while (bits < 32) {
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold += input[next++] << bits;
                  bits += 8;
                }
                if (hold !== (state.total & 4294967295)) {
                  strm.msg = "incorrect length check";
                  state.mode = BAD;
                  break;
                }
                hold = 0;
                bits = 0;
              }
              state.mode = DONE;
            case DONE:
              ret = Z_STREAM_END;
              break inf_leave;
            case BAD:
              ret = Z_DATA_ERROR;
              break inf_leave;
            case MEM:
              return Z_MEM_ERROR;
            case SYNC:
            default:
              return Z_STREAM_ERROR;
          }
        }
      strm.next_out = put;
      strm.avail_out = left;
      strm.next_in = next;
      strm.avail_in = have;
      state.hold = hold;
      state.bits = bits;
      if (state.wsize || _out !== strm.avail_out && state.mode < BAD && (state.mode < CHECK || flush !== Z_FINISH)) {
        if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {
          state.mode = MEM;
          return Z_MEM_ERROR;
        }
      }
      _in -= strm.avail_in;
      _out -= strm.avail_out;
      strm.total_in += _in;
      strm.total_out += _out;
      state.total += _out;
      if (state.wrap && _out) {
        strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
        state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out);
      }
      strm.data_type = state.bits + (state.last ? 64 : 0) + (state.mode === TYPE ? 128 : 0) + (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);
      if ((_in === 0 && _out === 0 || flush === Z_FINISH) && ret === Z_OK) {
        ret = Z_BUF_ERROR;
      }
      return ret;
    }
    function inflateEnd(strm) {
      if (!strm || !strm.state) {
        return Z_STREAM_ERROR;
      }
      var state = strm.state;
      if (state.window) {
        state.window = null;
      }
      strm.state = null;
      return Z_OK;
    }
    function inflateGetHeader(strm, head) {
      var state;
      if (!strm || !strm.state) {
        return Z_STREAM_ERROR;
      }
      state = strm.state;
      if ((state.wrap & 2) === 0) {
        return Z_STREAM_ERROR;
      }
      state.head = head;
      head.done = false;
      return Z_OK;
    }
    function inflateSetDictionary(strm, dictionary) {
      var dictLength = dictionary.length;
      var state;
      var dictid;
      var ret;
      if (!strm || !strm.state) {
        return Z_STREAM_ERROR;
      }
      state = strm.state;
      if (state.wrap !== 0 && state.mode !== DICT) {
        return Z_STREAM_ERROR;
      }
      if (state.mode === DICT) {
        dictid = 1;
        dictid = adler32(dictid, dictionary, dictLength, 0);
        if (dictid !== state.check) {
          return Z_DATA_ERROR;
        }
      }
      ret = updatewindow(strm, dictionary, dictLength, dictLength);
      if (ret) {
        state.mode = MEM;
        return Z_MEM_ERROR;
      }
      state.havedict = 1;
      return Z_OK;
    }
    exports.inflateReset = inflateReset;
    exports.inflateReset2 = inflateReset2;
    exports.inflateResetKeep = inflateResetKeep;
    exports.inflateInit = inflateInit;
    exports.inflateInit2 = inflateInit2;
    exports.inflate = inflate;
    exports.inflateEnd = inflateEnd;
    exports.inflateGetHeader = inflateGetHeader;
    exports.inflateSetDictionary = inflateSetDictionary;
    exports.inflateInfo = "pako inflate (from Nodeca project)";
  }
});

// node_modules/pako/lib/zlib/constants.js
var require_constants = __commonJS({
  "node_modules/pako/lib/zlib/constants.js"(exports, module2) {
    "use strict";
    module2.exports = {
      /* Allowed flush values; see deflate() and inflate() below for details */
      Z_NO_FLUSH: 0,
      Z_PARTIAL_FLUSH: 1,
      Z_SYNC_FLUSH: 2,
      Z_FULL_FLUSH: 3,
      Z_FINISH: 4,
      Z_BLOCK: 5,
      Z_TREES: 6,
      /* Return codes for the compression/decompression functions. Negative values
      * are errors, positive values are used for special but normal events.
      */
      Z_OK: 0,
      Z_STREAM_END: 1,
      Z_NEED_DICT: 2,
      Z_ERRNO: -1,
      Z_STREAM_ERROR: -2,
      Z_DATA_ERROR: -3,
      //Z_MEM_ERROR:     -4,
      Z_BUF_ERROR: -5,
      //Z_VERSION_ERROR: -6,
      /* compression levels */
      Z_NO_COMPRESSION: 0,
      Z_BEST_SPEED: 1,
      Z_BEST_COMPRESSION: 9,
      Z_DEFAULT_COMPRESSION: -1,
      Z_FILTERED: 1,
      Z_HUFFMAN_ONLY: 2,
      Z_RLE: 3,
      Z_FIXED: 4,
      Z_DEFAULT_STRATEGY: 0,
      /* Possible values of the data_type field (though see inflate()) */
      Z_BINARY: 0,
      Z_TEXT: 1,
      //Z_ASCII:                1, // = Z_TEXT (deprecated)
      Z_UNKNOWN: 2,
      /* The deflate compression method */
      Z_DEFLATED: 8
      //Z_NULL:                 null // Use -1 or null inline, depending on var type
    };
  }
});

// node_modules/pako/lib/zlib/gzheader.js
var require_gzheader = __commonJS({
  "node_modules/pako/lib/zlib/gzheader.js"(exports, module2) {
    "use strict";
    function GZheader() {
      this.text = 0;
      this.time = 0;
      this.xflags = 0;
      this.os = 0;
      this.extra = null;
      this.extra_len = 0;
      this.name = "";
      this.comment = "";
      this.hcrc = 0;
      this.done = false;
    }
    module2.exports = GZheader;
  }
});

// node_modules/pako/lib/inflate.js
var require_inflate2 = __commonJS({
  "node_modules/pako/lib/inflate.js"(exports) {
    "use strict";
    var zlib_inflate = require_inflate();
    var utils = require_common2();
    var strings = require_strings2();
    var c = require_constants();
    var msg = require_messages();
    var ZStream = require_zstream();
    var GZheader = require_gzheader();
    var toString = Object.prototype.toString;
    function Inflate(options) {
      if (!(this instanceof Inflate))
        return new Inflate(options);
      this.options = utils.assign({
        chunkSize: 16384,
        windowBits: 0,
        to: ""
      }, options || {});
      var opt = this.options;
      if (opt.raw && opt.windowBits >= 0 && opt.windowBits < 16) {
        opt.windowBits = -opt.windowBits;
        if (opt.windowBits === 0) {
          opt.windowBits = -15;
        }
      }
      if (opt.windowBits >= 0 && opt.windowBits < 16 && !(options && options.windowBits)) {
        opt.windowBits += 32;
      }
      if (opt.windowBits > 15 && opt.windowBits < 48) {
        if ((opt.windowBits & 15) === 0) {
          opt.windowBits |= 15;
        }
      }
      this.err = 0;
      this.msg = "";
      this.ended = false;
      this.chunks = [];
      this.strm = new ZStream();
      this.strm.avail_out = 0;
      var status = zlib_inflate.inflateInit2(
        this.strm,
        opt.windowBits
      );
      if (status !== c.Z_OK) {
        throw new Error(msg[status]);
      }
      this.header = new GZheader();
      zlib_inflate.inflateGetHeader(this.strm, this.header);
      if (opt.dictionary) {
        if (typeof opt.dictionary === "string") {
          opt.dictionary = strings.string2buf(opt.dictionary);
        } else if (toString.call(opt.dictionary) === "[object ArrayBuffer]") {
          opt.dictionary = new Uint8Array(opt.dictionary);
        }
        if (opt.raw) {
          status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);
          if (status !== c.Z_OK) {
            throw new Error(msg[status]);
          }
        }
      }
    }
    Inflate.prototype.push = function(data, mode) {
      var strm = this.strm;
      var chunkSize = this.options.chunkSize;
      var dictionary = this.options.dictionary;
      var status, _mode;
      var next_out_utf8, tail, utf8str;
      var allowBufError = false;
      if (this.ended) {
        return false;
      }
      _mode = mode === ~~mode ? mode : mode === true ? c.Z_FINISH : c.Z_NO_FLUSH;
      if (typeof data === "string") {
        strm.input = strings.binstring2buf(data);
      } else if (toString.call(data) === "[object ArrayBuffer]") {
        strm.input = new Uint8Array(data);
      } else {
        strm.input = data;
      }
      strm.next_in = 0;
      strm.avail_in = strm.input.length;
      do {
        if (strm.avail_out === 0) {
          strm.output = new utils.Buf8(chunkSize);
          strm.next_out = 0;
          strm.avail_out = chunkSize;
        }
        status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);
        if (status === c.Z_NEED_DICT && dictionary) {
          status = zlib_inflate.inflateSetDictionary(this.strm, dictionary);
        }
        if (status === c.Z_BUF_ERROR && allowBufError === true) {
          status = c.Z_OK;
          allowBufError = false;
        }
        if (status !== c.Z_STREAM_END && status !== c.Z_OK) {
          this.onEnd(status);
          this.ended = true;
          return false;
        }
        if (strm.next_out) {
          if (strm.avail_out === 0 || status === c.Z_STREAM_END || strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH)) {
            if (this.options.to === "string") {
              next_out_utf8 = strings.utf8border(strm.output, strm.next_out);
              tail = strm.next_out - next_out_utf8;
              utf8str = strings.buf2string(strm.output, next_out_utf8);
              strm.next_out = tail;
              strm.avail_out = chunkSize - tail;
              if (tail) {
                utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0);
              }
              this.onData(utf8str);
            } else {
              this.onData(utils.shrinkBuf(strm.output, strm.next_out));
            }
          }
        }
        if (strm.avail_in === 0 && strm.avail_out === 0) {
          allowBufError = true;
        }
      } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);
      if (status === c.Z_STREAM_END) {
        _mode = c.Z_FINISH;
      }
      if (_mode === c.Z_FINISH) {
        status = zlib_inflate.inflateEnd(this.strm);
        this.onEnd(status);
        this.ended = true;
        return status === c.Z_OK;
      }
      if (_mode === c.Z_SYNC_FLUSH) {
        this.onEnd(c.Z_OK);
        strm.avail_out = 0;
        return true;
      }
      return true;
    };
    Inflate.prototype.onData = function(chunk) {
      this.chunks.push(chunk);
    };
    Inflate.prototype.onEnd = function(status) {
      if (status === c.Z_OK) {
        if (this.options.to === "string") {
          this.result = this.chunks.join("");
        } else {
          this.result = utils.flattenChunks(this.chunks);
        }
      }
      this.chunks = [];
      this.err = status;
      this.msg = this.strm.msg;
    };
    function inflate(input, options) {
      var inflator = new Inflate(options);
      inflator.push(input, true);
      if (inflator.err) {
        throw inflator.msg || msg[inflator.err];
      }
      return inflator.result;
    }
    function inflateRaw(input, options) {
      options = options || {};
      options.raw = true;
      return inflate(input, options);
    }
    exports.Inflate = Inflate;
    exports.inflate = inflate;
    exports.inflateRaw = inflateRaw;
    exports.ungzip = inflate;
  }
});

// node_modules/pako/index.js
var require_pako = __commonJS({
  "node_modules/pako/index.js"(exports, module2) {
    "use strict";
    var assign = require_common2().assign;
    var deflate = require_deflate2();
    var inflate = require_inflate2();
    var constants = require_constants();
    var pako = {};
    assign(pako, deflate, inflate, constants);
    module2.exports = pako;
  }
});

// node_modules/@pdf-lib/standard-fonts/lib/utils.js
var require_utils = __commonJS({
  "node_modules/@pdf-lib/standard-fonts/lib/utils.js"(exports) {
    "use strict";
    var __importDefault2 = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var pako_1 = __importDefault2(require_pako());
    var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    var lookup = new Uint8Array(256);
    for (i = 0; i < chars.length; i++) {
      lookup[chars.charCodeAt(i)] = i;
    }
    var i;
    exports.decodeFromBase64 = function(base64) {
      var bufferLength = base64.length * 0.75;
      var len = base64.length;
      var i2;
      var p = 0;
      var encoded1;
      var encoded2;
      var encoded3;
      var encoded4;
      if (base64[base64.length - 1] === "=") {
        bufferLength--;
        if (base64[base64.length - 2] === "=") {
          bufferLength--;
        }
      }
      var bytes = new Uint8Array(bufferLength);
      for (i2 = 0; i2 < len; i2 += 4) {
        encoded1 = lookup[base64.charCodeAt(i2)];
        encoded2 = lookup[base64.charCodeAt(i2 + 1)];
        encoded3 = lookup[base64.charCodeAt(i2 + 2)];
        encoded4 = lookup[base64.charCodeAt(i2 + 3)];
        bytes[p++] = encoded1 << 2 | encoded2 >> 4;
        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;
        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;
      }
      return bytes;
    };
    var arrayToString = function(array) {
      var str = "";
      for (var i2 = 0; i2 < array.length; i2++) {
        str += String.fromCharCode(array[i2]);
      }
      return str;
    };
    exports.decompressJson = function(compressedJson) {
      return arrayToString(pako_1.default.inflate(exports.decodeFromBase64(compressedJson)));
    };
    exports.padStart = function(value, length, padChar) {
      var padding = "";
      for (var idx = 0, len = length - value.length; idx < len; idx++) {
        padding += padChar;
      }
      return padding + value;
    };
  }
});

// node_modules/@pdf-lib/standard-fonts/lib/Courier-Bold.compressed.json
var require_Courier_Bold_compressed = __commonJS({
  "node_modules/@pdf-lib/standard-fonts/lib/Courier-Bold.compressed.json"(exports, module2) {
    module2.exports = "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";
  }
});

// node_modules/@pdf-lib/standard-fonts/lib/Courier-BoldOblique.compressed.json
var require_Courier_BoldOblique_compressed = __commonJS({
  "node_modules/@pdf-lib/standard-fonts/lib/Courier-BoldOblique.compressed.json"(exports, module2) {
    module2.exports = "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";
  }
});

// node_modules/@pdf-lib/standard-fonts/lib/Courier-Oblique.compressed.json
var require_Courier_Oblique_compressed = __commonJS({
  "node_modules/@pdf-lib/standard-fonts/lib/Courier-Oblique.compressed.json"(exports, module2) {
    module2.exports = "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";
  }
});

// node_modules/@pdf-lib/standard-fonts/lib/Courier.compressed.json
var require_Courier_compressed = __commonJS({
  "node_modules/@pdf-lib/standard-fonts/lib/Courier.compressed.json"(exports, module2) {
    module2.exports = "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";
  }
});

// node_modules/@pdf-lib/standard-fonts/lib/Helvetica-Bold.compressed.json
var require_Helvetica_Bold_compressed = __commonJS({
  "node_modules/@pdf-lib/standard-fonts/lib/Helvetica-Bold.compressed.json"(exports, module2) {
    module2.exports = "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";
  }
});

// node_modules/@pdf-lib/standard-fonts/lib/Helvetica-BoldOblique.compressed.json
var require_Helvetica_BoldOblique_compressed = __commonJS({
  "node_modules/@pdf-lib/standard-fonts/lib/Helvetica-BoldOblique.compressed.json"(exports, module2) {
    module2.exports = "";
  }
});

// node_modules/@pdf-lib/standard-fonts/lib/Helvetica-Oblique.compressed.json
var require_Helvetica_Oblique_compressed = __commonJS({
  "node_modules/@pdf-lib/standard-fonts/lib/Helvetica-Oblique.compressed.json"(exports, module2) {
    module2.exports = "";
  }
});

// node_modules/@pdf-lib/standard-fonts/lib/Helvetica.compressed.json
var require_Helvetica_compressed = __commonJS({
  "node_modules/@pdf-lib/standard-fonts/lib/Helvetica.compressed.json"(exports, module2) {
    module2.exports = "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";
  }
});

// node_modules/@pdf-lib/standard-fonts/lib/Times-Bold.compressed.json
var require_Times_Bold_compressed = __commonJS({
  "node_modules/@pdf-lib/standard-fonts/lib/Times-Bold.compressed.json"(exports, module2) {
    module2.exports = "";
  }
});

// node_modules/@pdf-lib/standard-fonts/lib/Times-BoldItalic.compressed.json
var require_Times_BoldItalic_compressed = __commonJS({
  "node_modules/@pdf-lib/standard-fonts/lib/Times-BoldItalic.compressed.json"(exports, module2) {
    module2.exports = "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";
  }
});

// node_modules/@pdf-lib/standard-fonts/lib/Times-Italic.compressed.json
var require_Times_Italic_compressed = __commonJS({
  "node_modules/@pdf-lib/standard-fonts/lib/Times-Italic.compressed.json"(exports, module2) {
    module2.exports = "";
  }
});

// node_modules/@pdf-lib/standard-fonts/lib/Times-Roman.compressed.json
var require_Times_Roman_compressed = __commonJS({
  "node_modules/@pdf-lib/standard-fonts/lib/Times-Roman.compressed.json"(exports, module2) {
    module2.exports = "";
  }
});

// node_modules/@pdf-lib/standard-fonts/lib/Symbol.compressed.json
var require_Symbol_compressed = __commonJS({
  "node_modules/@pdf-lib/standard-fonts/lib/Symbol.compressed.json"(exports, module2) {
    module2.exports = "eJx9WFlv2zgQ/iuGnnYBt5DkS85bmk13g27SoEkPbNEHWqIlIhSpklSuov99R7JIkSLtFyGZjxzN8c0h/4oueF1jpqKz6Mt1K1GJZ4s4S+PZYrvdbqJ59J4zdYNqDAfuXuodp52spdSToZrQl6n0KyZl1Sm/xgVpa5BcKURJfs5KCgdj+F++J8+4uCUqr6IzJVo8jy4qJFCusLjD3d27BucE0cGYd+/4c3T2/U2SxfM36XYxT+JtDI8k/jGPPrMCC0oYvuWSKMJZdPYmiWMLuK9I/sCwlNHZCuRfsJD9sSiOk7dxnMFbbrgieefGBW9eROfA7I/8z1myzVbz7rnpn9vuCW/unpvZecF3eHb3IhWu5eyK5Vw0XCCFi7ezc0pnvRo5E1hi8QhCeM0lHCoIK+/yCvdR67zrfd2THPA7VfzzNTrbpv2fX+BPeH8fm2usBMnBg++/oq/forO08+QGNMgGgeG/5wfxYrE4iPFzTlFt5JtkkLeMPIL/EFoNreJBE2vrXReako3YcqvVEXCTKWJdzPS7Gizyjk/mZZvsAKC66d7FCgMtF4NC2eaVqpDyLW+QwIzi/TGoD6tvPQL7BJEPNVKVb39DW2mkJnY5FALyD9eEhU6DL4SPrqTaS0mRrHyDXrHgvpQz7AvVU+CkqgQOnN3zVgSkkFVfKslzQIgfMfPFOBxWRiyDjcs5p5wFIoFr4kImprQrP59WP1ubiVpcCgxlNLq5XC4PwM8Wy77EvSs5ZyU0EpuFaXqAzmlTjVlerzcH8TuskH/4oiLj0WQQ/oWpdXadJAfxZSOJ7exmPfD01lYSD8K/kU0288JLS7Mh+hW337dINCPA5MRX8QE1jXU8Wx/E/6J6V4zyLBtCdd36Km4Cso+QTOG4N6T5dvRusxxsu6/scK5Wgw2fKovZ20HxHSnrQDjv0WjEejvw7/MkxmMD6ZQkvnEfa1xayperg/ibZfN2kN1K4lvxHw4lZAfD6QErpy1lOt2QF4H3XATa8HDP7VnrVWY6SoNZQfKWokBRt90Ak7mt2GACwTVE8bNPE+Tw3VTIzkmQqRuLqsvtUGaFw3cTcjzJxSod3tjYSnQgS4fvpgyc8KaDZuLwXR8FtYlv8YPD9rHBuGxfbQYG1q1vL2v9+3zC9nF0EF+BqoLBFBbbjRfSYbsJprLYboxtpx1Fj23esXoMhqlx7rB9uR2OPxP/aCMDmX61/Vhm8cha7HA91bzbWUR1z0/m8tLUKSyJ1qWNHqeXrTUf16lb76Or6XIzTmWFA4mHyeLOkUS3+H23UpJQPAnbE0bUS2CSUi6IdWM13Mhpu/OlBUE1t/YbA1QYCeWLYVsrRh+SeDm0RCQEf9pxa3Xpds4RcpJhqNVDbXPkzqTpOJcK/mT1VO17gUtn57C3J3cpMlUucW77Px3hRwZ83VJFGvriJ6YRHJboLmnWPUNXWAC7FbQg+/0IrjUL4RMFBxhYkEdSBLxiXB0xD8TkEZorywPXoP0I/jxhXGzWKEoJUFgeiTvs3srq2eO9Hq2Aeq92S9eDIgeYwIeawKoVY+KyVOumuBmpY0r+CgrgQVn7ohl9n6aIoc4TJjB0lEDWvmaGa05ETrGfPRd3lm1jI64b9SKtBJlbhAFTgEhuqWoUvlhCFdwRBW613cNWqnGYyDAdj+OQfdnugpBWHUa14jAKbbN2tlDrfR6mXUT9p7F3peyGvHNBb0UCl933GHgmyN6Hc/0R6+KZxiG7Ba6ReJjg6RiAos0DpTRsHWNz1s284Mr58DI+UF52N8B7vyIGzP4+nGJcWLXiNMtiR0/0S0BPtExAj3ZNwE42zh11e6duTZS/YlZaK6DebfrkOsb4aURMnsqiA+viHpPowDrwsoX1y6moRTZ20cMXtmpOgFYf8sGd8kFrRw4ptuCQagu2lJvwmpXEUu2DNSlOoEf12vY4aXOZkG6WY8OC4hzrwHRcjVhWepjd4KdYKK7jrx5H89WjRxPWoycydlS3jZ/I2VS/G9yp9gB6PG1T1aY4YAp3LfPHPPqABbtFRHS/jf34/T82FAfb";
  }
});

// node_modules/@pdf-lib/standard-fonts/lib/ZapfDingbats.compressed.json
var require_ZapfDingbats_compressed = __commonJS({
  "node_modules/@pdf-lib/standard-fonts/lib/ZapfDingbats.compressed.json"(exports, module2) {
    module2.exports = "eJxtmNtu20YQhl+F4FULyMGeD7pz3AY1ChtG7NpFA18w1NomIlECSRcxgrx7SVk7+wOdG8H5OJydf2Z2d5gf9cV+t0v9VK/r+6vXsXlOlbHe28paq229qj/t++m62aXZ4J/m8PRb1z9/baZxefK63Z6eXN5dVMvTCh83u277xr/6kLrnl2XNq7TpXnczuZyabdee98/b2VzM/x4/dd/T5qab2pd6PQ2vaVVfvDRD005puE3Lu7eH1HbN9hTjx4/77/X6y5lcnUmjVzHIVVDicVX/1W/SsO36dLMfu6nb9/X6TAoBD+5euvZbn8axXtuZ36dhPJrVQqgPQoh5hev91LWLkIv94W1Ygq9+aX+tZAx2tfz64284/sblN/rqfLP/mqrbt3FKu7G67Nv9cNgPzZQ2H6rz7bb6vLgZq89pTMO/M/xfEqturJpqSM/d7GJIm2oamk3aNcO3av80O5xh3yyKmm1193ZIT02bqovTKjP+MAf++7zsZvZ3276kYyWWXB0z99S18/PbafPHQ71W4fjn/fxnFO+ZvkrT0LVzTr78qB/+nk38bHM9exgP8zr1z9U7jt6840YW5uSJKcZOCaBBnKgm5mU8MVNYyMwWFvO7Ukagkmgg6sDWQ5yFFqjzUrLEaQ3BEmiwNsMSaZS0vgWfOkPHWQowNeTUc0kumnxZvsgPxlGai6VTGUqAVCTQ6QkWnc77DKEiLktSUBJKqHIQZ86d8gCpHYoiEzMsb1ubYy8vW50DChB5ZhGqrijD0EqUIeiaEHIfCg5Kpuu0ApiToaGPSY0uaQsyr65L2oKi1yFt1PLaQ3lzfXTgXodGoJYzglndSLDMPg1sTPJpQJHJigw0QrGERqD9YhyTOgONQDUyuF1zaxuokc/BW2ztXCMrGZ9WMW1oQZHIXWNBkSCfRZEL5BMUiZw6CzVSFCfUSGZFNjIldoKDkonTKQiJIGzWmFd3BizJJ9SINoLDriOfUCOZS+zg+KGD1qGiLNMLxtJD1/ns00ON6EzyUCM6vbxhoBKaqbG3DFQCNiL1iHccBPV0DHhQH/JW8EW90dkyFKGywCJU0WkVSvSGeiSUODWFFD0HYdPQVoiRgfPMA+/nnRgiAyNYSjpWNQcNSMrtFCUH4ZIRpSCWocFCSuhCEY6hoUClc0WC52BJlCYYLQdhN+hygRRRlo5BKRRLS6oihSqh+ZzzRGG1Mo4Iz1LoP0qsxDGFzk0JE42ji0jCPejomJKCuwil4m5CiRMEUMVSzVLDUstSx1Juc0oVWMpqY295qVltmtWmWW2a1aZZbZrVplltmtWmWW2G1WZYbYbVZlhthtVmWG2G1WZYbYbVZlhtltVmWW2W1WZZbZbVZlltltVmWW2W1QYjQCh7E2aAQHeGhCFgPoNoy8KNb2wxBhmGKBxoUZXlLGsLI6AsftEDHV0wIURVbANLcTKlGGBIKPOAxCmhePCKUwFzAmpDFRQvjA9R06Hq8TONvshgKDCuRAZTXigUxjxNFfKRo3CLhnIJBMFRvMZpqpNBMlQJzGT5WFQMVQI/AikPMIhEU1aDjqJvQwmjSHB05cC9jbYwc5UtAHNLhDw41ha+lEqF4JaH3gmB61SYcqInxTDmQK8v08vjqv4zDf1N0w3Lf4A8/vwPpfK11w==";
  }
});

// node_modules/@pdf-lib/standard-fonts/lib/Font.js
var require_Font = __commonJS({
  "node_modules/@pdf-lib/standard-fonts/lib/Font.js"(exports) {
    "use strict";
    var __importDefault2 = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var utils_1 = require_utils();
    var Courier_Bold_compressed_json_1 = __importDefault2(require_Courier_Bold_compressed());
    var Courier_BoldOblique_compressed_json_1 = __importDefault2(require_Courier_BoldOblique_compressed());
    var Courier_Oblique_compressed_json_1 = __importDefault2(require_Courier_Oblique_compressed());
    var Courier_compressed_json_1 = __importDefault2(require_Courier_compressed());
    var Helvetica_Bold_compressed_json_1 = __importDefault2(require_Helvetica_Bold_compressed());
    var Helvetica_BoldOblique_compressed_json_1 = __importDefault2(require_Helvetica_BoldOblique_compressed());
    var Helvetica_Oblique_compressed_json_1 = __importDefault2(require_Helvetica_Oblique_compressed());
    var Helvetica_compressed_json_1 = __importDefault2(require_Helvetica_compressed());
    var Times_Bold_compressed_json_1 = __importDefault2(require_Times_Bold_compressed());
    var Times_BoldItalic_compressed_json_1 = __importDefault2(require_Times_BoldItalic_compressed());
    var Times_Italic_compressed_json_1 = __importDefault2(require_Times_Italic_compressed());
    var Times_Roman_compressed_json_1 = __importDefault2(require_Times_Roman_compressed());
    var Symbol_compressed_json_1 = __importDefault2(require_Symbol_compressed());
    var ZapfDingbats_compressed_json_1 = __importDefault2(require_ZapfDingbats_compressed());
    var compressedJsonForFontName = {
      "Courier": Courier_compressed_json_1.default,
      "Courier-Bold": Courier_Bold_compressed_json_1.default,
      "Courier-Oblique": Courier_Oblique_compressed_json_1.default,
      "Courier-BoldOblique": Courier_BoldOblique_compressed_json_1.default,
      "Helvetica": Helvetica_compressed_json_1.default,
      "Helvetica-Bold": Helvetica_Bold_compressed_json_1.default,
      "Helvetica-Oblique": Helvetica_Oblique_compressed_json_1.default,
      "Helvetica-BoldOblique": Helvetica_BoldOblique_compressed_json_1.default,
      "Times-Roman": Times_Roman_compressed_json_1.default,
      "Times-Bold": Times_Bold_compressed_json_1.default,
      "Times-Italic": Times_Italic_compressed_json_1.default,
      "Times-BoldItalic": Times_BoldItalic_compressed_json_1.default,
      "Symbol": Symbol_compressed_json_1.default,
      "ZapfDingbats": ZapfDingbats_compressed_json_1.default
    };
    var FontNames;
    (function(FontNames2) {
      FontNames2["Courier"] = "Courier";
      FontNames2["CourierBold"] = "Courier-Bold";
      FontNames2["CourierOblique"] = "Courier-Oblique";
      FontNames2["CourierBoldOblique"] = "Courier-BoldOblique";
      FontNames2["Helvetica"] = "Helvetica";
      FontNames2["HelveticaBold"] = "Helvetica-Bold";
      FontNames2["HelveticaOblique"] = "Helvetica-Oblique";
      FontNames2["HelveticaBoldOblique"] = "Helvetica-BoldOblique";
      FontNames2["TimesRoman"] = "Times-Roman";
      FontNames2["TimesRomanBold"] = "Times-Bold";
      FontNames2["TimesRomanItalic"] = "Times-Italic";
      FontNames2["TimesRomanBoldItalic"] = "Times-BoldItalic";
      FontNames2["Symbol"] = "Symbol";
      FontNames2["ZapfDingbats"] = "ZapfDingbats";
    })(FontNames = exports.FontNames || (exports.FontNames = {}));
    var fontCache = {};
    var Font = (
      /** @class */
      function() {
        function Font2() {
          var _this = this;
          this.getWidthOfGlyph = function(glyphName) {
            return _this.CharWidths[glyphName];
          };
          this.getXAxisKerningForPair = function(leftGlyphName, rightGlyphName) {
            return (_this.KernPairXAmounts[leftGlyphName] || {})[rightGlyphName];
          };
        }
        Font2.load = function(fontName) {
          var cachedFont = fontCache[fontName];
          if (cachedFont)
            return cachedFont;
          var json = utils_1.decompressJson(compressedJsonForFontName[fontName]);
          var font = Object.assign(new Font2(), JSON.parse(json));
          font.CharWidths = font.CharMetrics.reduce(function(acc, metric) {
            acc[metric.N] = metric.WX;
            return acc;
          }, {});
          font.KernPairXAmounts = font.KernPairs.reduce(function(acc, _a) {
            var name1 = _a[0], name2 = _a[1], width = _a[2];
            if (!acc[name1])
              acc[name1] = {};
            acc[name1][name2] = width;
            return acc;
          }, {});
          fontCache[fontName] = font;
          return font;
        };
        return Font2;
      }()
    );
    exports.Font = Font;
  }
});

// node_modules/@pdf-lib/standard-fonts/lib/all-encodings.compressed.json
var require_all_encodings_compressed = __commonJS({
  "node_modules/@pdf-lib/standard-fonts/lib/all-encodings.compressed.json"(exports, module2) {
    module2.exports = "eJztWsuy48iN/Ret74KZfHtX47meqfGjPHaXx4/wgpJ4JbooUU1JVXXb0f9u4JwESF13R7TD29koIpFi8gCJBHDA/Pvm+nraTuPmZ3/f5HHzs7/k8WlzvXS7fvPXp02eqyR/2vRfd2N3gqhUUfm0Od9P236+DoczxLWK66fNpZ93/fkGWaOy5mnTnUR67c57lRaZSItM/tnN/XnsX/DfIqg0JOk8HI4UK4BCAFzG+xWCQgXF02Y3nU4dJJVKKrx5mPgKBVMImOvYXY+QKJRCoHzXzxMErQrap810hqaloioF1e0L5kvFUwqe23Hu+Q+1TinWeZnuMwSKrRRsL8Nn/kOxlYLtOnzFWE1Viqmu/eceVioVaylYe1OwVKilQD0PCYgiLRtVcJz4kEItW13mNLi0UsCVAB77KyxTKeJKEPff3rsREkVcCeLD3He3HqArBV0J6G/v/fU2cK1WH23l0e3c7T71N9uUVv/c5i73bWlVs1Y0u5/3srO7aQb2EPUB+eUTva0TYgG5mGbbzZSUkJTpn75ygF4PThhq1SMGMds4HYZdN54n/rdWc8rv02bfH9I2hbqGsKbPnIYzHSc0qmTIxI6nuwpiAIQmU8F4Gy7jK8RwntAI1v3wedj39FmFECp508s4zUOyGmwpKrwbL8eOIlVU//Yf/S1J9C212Pa/uuSwbVDYlWzxf/aj/UtfWgm258t1GG1X1BVawfdnX0xdoRbjPCdBVGs1svo3R/tPVD1r2YL3k0kUfC04f9ldLkmk0NVwv+pO232SKXa126/vHAO5wPxNGivsRsZ/HDhWzLVg/iBuOSfMUTGrTX+b/qSIG0H8u+NEl1J4jcD7/XBI9kDcUYN/0/FNCDuNAP64skYOeLrykUsjElWC9+cmAEAB9NtrEijCplaE/YHvKuC5Iup8zxBAWtFrayakC2QC8uCbhggSskx9zXYNQSRkeuZWQBFKQowabNIfS/qeqOgSOFTINcC4DKcnE70H2zqElJAJ3k++dwgrIRPA47J5iCwr724RWELINFBTAAWiCL7SOogrIQj6abWBOH8hCPoL/4a4EoJgn9MWIq40lcY52cJAGbCHMgkpA3g9t7e0sRWgB1HnvjJYRez6yrSTlYJvRZmdCQhe80Pa24roNYL75uLo10WyKYHVeFLjYnImilM0qPDOJOKWNGlFCJsIrw/qsNv7OPY3SnNYSQ9DP46DLHylvGCcEFU08Nz6JIVx9Chd+93ENNhEWroSuC8SAi0WNznNpqH9+c5k1RQ0nIbi9/LnTzdmoKZAaAwaib/0g0Ti29wxG8gUgLey/O8eHmmqt4eiKTNYo416LPrLkcIWa2u06eZ5+mLBXCaoTp4m7pckBm41P8Qe0mUG6DUCYWY/fTmnCQbwkCa2043vrhA2gqakncwM3aGfe9GAj1Vw9qiuzPW2o4Or4PcxhmUu4atwAGKMy8wCscJhiDFfJh1lhY2K6mo250DrTJXOC82EUgVIkTMmOd0moqC5Dd24H15e0hRKJS0Cvg7Xm9RKgz9ErdWrTpfb6zV5Wx2ytwlDZLplUQ/8Ye72Qyq5RI5kqY4t6fe0iHOItdCYbo8zKOi0vLjvjrdjZ2IYRAPUZZ72910SI7vEiL9LaHSvrZFkipKOf02y8gc9vEbmKHQjRP95uH6ShZI9c9pao41otTPLICMETXSC5jLNupbP8bxo2Dy/DOfh9prk8BKNk935MPIo1jiKUSNQqiVSVSozBWYan5nmNMGz1+r6AleO8KJJwXdk2H8XwgVVP31AticBhdvqIZPwNPcvqWhqah74iIB6GsYuvbdGeYFS93yY775hPNh6giUlzNNXr/eaJmNYKrnLKznOt4ZsEQ6f5ZCfWVvJFK2Xs5BcP8ND23r5uJqDyaPmM90Oscl9a87aIC3HLCxz+uOzNFgOhA+P4XRq8hPTjP3Xhzn4oiYIm1svybSpOX03zDuJX4kqyAx3rrKZdZ3XNMggGh9lsUt/Fm+7m+1bGCxqOttPN/fOFiExKh+xnb1d0gz8qiiXmS0r5YxLaaULN/TaOsu4WEgTS3Fd1TCvlsvj9F1/PvQpPzHAZqiN9yZEntcyaDfet0mGOKLl5LGX6EMhU5ZGkf3QnVIWqvJA5FoG7KbLK1BcBcyLTfNYZGr7g8ar+WEWm63VgmSefX/q5k+r6Rplrdo/Heb+q00gKzcWUiVy3pY5RkGL7kept7/zSRS8Uc+Kw+nOV5ukqeu1KqtZ2Ds2a6yrWZghX/NS7q3OwQZ5WM0tgGCBPK7muPM6B2fP8wditayKMKG5YzW7rIvzkJcPs8vKOBGaRJxo+boMocrFfe407G0SJlJS7pO+KOrwqKkAcw4lp28Xi28vU7AM2Lfz9gUITKM8fJlcnoRtlJIvkwsSRtD2kXkuC8M2ytbX08vSME4ZHqd9cTQgojL5hXr60uhDxDJfTy7WQ3kXy2I9q+t+L7V+d3nZD+fDtrtdf7iZ8gPUNhVNSLOdFKmrqgg5UGR5ktUWkERW4ETnYSnQpK5PsqU2k3I5yZbCTGhJki0lmbJ2ypxOd8rYKXM23Slnp6yxclZkVZK1li1EVlMWmY0yyJokC5bIRdYm6sDCW/9X54knZEYnurpKJCEzNtHVdYqTmdGJrm6SiJRMsdWJmTS1MYWuSZwAHg3D5dSJO6tnpqPiNXIHapSQHkL9WNCyDwEZymTtQzyGcfx/rQVukWUP4RgGS29oG5RieEMSVKm67GISoHZUs0g6TKImlZMdbde2cDMFUCZBSBWevKlNIlRrBNQkEVpt0CXUSYTWGvzG1q5TldeFIklgFfiMvQ6tNXgMtk5IM+qSAjbJSpOh4wdUtYnQYgOqxkRosgFVayK02SJsYCJ02tRw9HkVodUG00UTodcG4+UmQrdN0dPhVYR2m8KPBhX1t/bkumgaofzWplwXDT2Oo9K2Lhp6dogUvT+HBpGC98fQxlDs/lSVCr/OVGZ7CGY3lXEIKyD3fylyrQS63P4VjTl0uRkGJxB+l5th2CBS5LkZhg0iRZ6bYdgPUqC5aYMEh8CSmzrsCinU3PRBKkNYyQ0qTgSiSmFQcSAQVAqDimSFmFIYVPaKFGphUNktUqiFQUVaUvLVFbaHSEZK47vC0LNfpOgLQ8+OkaIvDD2SjZbOXWHokWBQgJeGHkmlwaEz9EglKHFKQ48og8qmNPQgJEp0u9LQg4mAjJeGnm0rRV8aeratFH1p6EE8tBnQlYYebSutwLrS0KNrhRZYZegRbpV3dpWhR8tKSU9XGXr2rJTsdJXBTz0ruLjhT00rVaAyBVLTSjWoTIPUs1IVKlOBbSulAV1lOrBzpZS2q0wJNq8yhH7TovIOb1cb5tSXUny14Ut9KUYQUyS1phRgbaDZmEIiFrKThCnpIMMYGrZh0JBo7M01e+H65sZeUpPp6ZsbX4+dcH1xa1YgxYsIAWYF9rXBI1p/L9tiiL6ZmYGtrYpZybaz8caUCA1iA4iIPcEN0ZAQIuq70g2ZPCOQ7R+yE5riIjTojfMRESbsge1zHMhgsSlk5PR4u0WnQDraMOdEE7JTj7dbhAqpw4K3W4wKGZv3eHtempBkA+nHQldgrwXHM1jwCgj0pB7BwlcIbI7BnhbAAmsvHNJgISyw+MIxDRbEAqsvHNRgYSyw/GqZSE0j1l84rMFCWWABhuMaLJgFVmA4sMHCWUi8CRpZQAvkSzizwUJaIE/CoQ0W1ALpEU5tsLDGDzqg6yI0jaKzfxGaRuRBOLjBglsgAcpYHZhG5D04usECXCDdQd0WLMQFshwc6GBBLqQOETSyMBdIa3DMgwW6QD6Dcx4s1AXyDpSRYmoTsrpmzWKQyDJw0GWjTci2GCBZIAtkFDj+wSJZIJPA+Q8WygIJRCQkw8meFCJAsGAWCu8BiNAsjzTAXkKwEBfYg2IQqM3y7EFFauT/ZAcUGlk0DAU7nyzETPeSHBIa1aZmSe4IjWpTsyRphEa1qVmSTFMjU7Mki4ZGreEsSZ+hUWO6s7+bc4/8cdJlaNSYQdjTRbEbM3+c5BgaWTgOSA7stkSLiqFiCwbgLUiHinQX4C1Kh4pEl+BN94oEl+DNdBWJLcH74yS0AG8RPeCjRmRZ3JiR0ZWKrItbW7MmZWVlbG+vSVWxHY2tyW+lJTUy0yEVgdTKmmYlNplKagSDCMFlTIaH8GmVMWkpIj6sMsQv+Ae3UmUIX3AP6q0yRC94x/IOBC84B4+VyhC7yHTIELQRhGgM32hchmAM14hMRCpEMIZrNC6DJvAMWkxl0ASOQYOpDJqACrX+EmgCX9EQ8f3T5stwlggXf/otCfss8O19uvX7LfqmP3Z1AiRPP2JPY2pA/vTbFIhHqhFedB2s0/2v3bIAG1z14yH8CVcvwJFFoePr5cgbDv9/G+Pfvo2BUIP6ix0r8EO9ZYARuKFeMMAIvFA/gWMESqifiTACG9QrBTpCBFGK9wuMQKz0UgJGoH+C7L8xAvPTL40Y4au7gPkfjEAB9SYBRmB/eokAIxA/vT6AETifXh7ACHRPrwroqAFX0i/5GIEmCZb/xQj8Tu8LYARqp5cFMAKr03sCGIHQ6SUBjMDlBMsfMLIP//+HERicXlzACORNsPxJR2iW4I4FRj92EQa8TTuGInY3/vHrMSBwuoPX3TDot4c7osKPXJtBm0XLvsPc0XfRZkHNhxE4nLZsMQJ902/jDOQIkriXkAL7JhEyNh1ZemtZ98IxCZvebeCYZE3AHjkmUdMPGRyTpAm6v3FMgqY3EjgmOdPPZhyTmOlFBIwZxHEPgWNeJ9BbBxyz+af9c45J2PRMcEyyph8EOSZP03PMMTmaXjLgmN0+vWLAMfBpFfeZY7838AVjNilxLYJj4NOy7ZVjUju9zcHxv3/FiVcKULCpf9yGcb9qEOPL/6pp7GyO2cU+S7N2AaOzDMHKBXxO4/goyYBiZ3S7+yxxf0fNKud0r31a0gnddp4+9WfTpHJOt/r4yfIlfVDq5z7dgWABg8amf4SBnLxZQ9A0718keFqMZSGDNurhPoxjf5r84LGeQY/77d0vb3QvyYc1DTrd9nWo56movd196uyqy792faz2prfkJHyAHPiBONTe+kZ2ephrlhb4Ll0HSRfRNOLxqk5onB1LWu4kCPAGRmicIDOZ6j67Ro0T5V2/F6t1lDpTlkz6iMTpspj/JI53H83+jZNmt/+ybY2TZ1lRctmcUldonEDLxLEbGV5aZ9AwRnqAJmydSFu6c2dunU6/8yDIL5Og0+8W67VOp98xsL6kr1H8FglO/W45Uq1z6ncPXto6rX432zlpnVW/e6bAGfXPV0aOmXPqZwcbM+fUzw42Zs6pnx/BxsyJ9fMaV8ycW79fre3c+v1qbefW79+u7QT7/ePazrGf+UE7Zk6wf+Mmi8EJ9ocFQnCC/WGBEJxgf3gDgddNNIp/WC3Mb12i24cHXIEfkcs3FzGDM/UPnnJjcKb+cQXOmfrHFThn6h/fgItO1z8+4IjO2P+0LBOdsX9znHgBKUYn7Id+Pkklvh3TCgtpX9DFhbSvll1I+1t0C3NfTBcX5v4IeSHv5sYxX7g7H86dt+/Wbpw7c+8XsLkz934Bmztz79+AzZ2+9w+4cmfww2ptZ/DDam1n8MPbtZ3GDw9rs9ui3KZPblw4tz8vJiuc208LhMK5/bRAKJzbT28gFE7wp9XCTvCnR1zO8ZeLw7Fwjj8tTlw4x78v0Ern+PcFWukc//4GWulE//6AonSu/7paxrn+zZ2YnRclRK/rBXJsCAjxh2cKEAWVJ02ku/wOoFv2+12XkmnODwHgW4uQGVbZ0uM7mAJ1b/68/JlpUMnWdy5MF6/Vd5eL19YYSPd6FqPwBkNQo/h2NQxdQQ3bn/dpCxrGrqCW7U8rKZl/mfi0Xytk3Am66ZhYbg4y+KAVslDwbXdNL2d5qU5hnYBlTZaa6hs2t1qWdaeeTptcLco+hl5R7w4H5uOGcQbtEkpT18GusOI2xT9dYcVJf7zCSjmbD+Iud2s1NPRb9E+0UICmizb8ZK/+5JOLOulSqwaw5VJr2vB8dSFn89fvv/8H0oq1dA==";
  }
});

// node_modules/@pdf-lib/standard-fonts/lib/Encoding.js
var require_Encoding = __commonJS({
  "node_modules/@pdf-lib/standard-fonts/lib/Encoding.js"(exports) {
    "use strict";
    var __importDefault2 = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var utils_1 = require_utils();
    var all_encodings_compressed_json_1 = __importDefault2(require_all_encodings_compressed());
    var decompressedEncodings = utils_1.decompressJson(all_encodings_compressed_json_1.default);
    var allUnicodeMappings = JSON.parse(decompressedEncodings);
    var Encoding = (
      /** @class */
      function() {
        function Encoding2(name, unicodeMappings) {
          var _this = this;
          this.canEncodeUnicodeCodePoint = function(codePoint) {
            return codePoint in _this.unicodeMappings;
          };
          this.encodeUnicodeCodePoint = function(codePoint) {
            var mapped = _this.unicodeMappings[codePoint];
            if (!mapped) {
              var str = String.fromCharCode(codePoint);
              var hexCode = "0x" + utils_1.padStart(codePoint.toString(16), 4, "0");
              var msg = _this.name + ' cannot encode "' + str + '" (' + hexCode + ")";
              throw new Error(msg);
            }
            return { code: mapped[0], name: mapped[1] };
          };
          this.name = name;
          this.supportedCodePoints = Object.keys(unicodeMappings).map(Number).sort(function(a, b) {
            return a - b;
          });
          this.unicodeMappings = unicodeMappings;
        }
        return Encoding2;
      }()
    );
    exports.Encodings = {
      Symbol: new Encoding("Symbol", allUnicodeMappings.symbol),
      ZapfDingbats: new Encoding("ZapfDingbats", allUnicodeMappings.zapfdingbats),
      WinAnsi: new Encoding("WinAnsi", allUnicodeMappings.win1252)
    };
  }
});

// node_modules/@pdf-lib/standard-fonts/lib/index.js
var require_lib = __commonJS({
  "node_modules/@pdf-lib/standard-fonts/lib/index.js"(exports) {
    "use strict";
    function __export2(m) {
      for (var p in m)
        if (!exports.hasOwnProperty(p))
          exports[p] = m[p];
    }
    Object.defineProperty(exports, "__esModule", { value: true });
    __export2(require_Font());
    __export2(require_Encoding());
  }
});

// node_modules/pdf-lib/cjs/utils/objects.js
var require_objects = __commonJS({
  "node_modules/pdf-lib/cjs/utils/objects.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.rectanglesAreEqual = exports.isStandardFont = exports.StandardFontValues = exports.values = void 0;
    var standard_fonts_1 = require_lib();
    exports.values = function(obj) {
      return Object.keys(obj).map(function(k) {
        return obj[k];
      });
    };
    exports.StandardFontValues = exports.values(standard_fonts_1.FontNames);
    exports.isStandardFont = function(input) {
      return exports.StandardFontValues.includes(input);
    };
    exports.rectanglesAreEqual = function(a, b) {
      return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;
    };
  }
});

// node_modules/pdf-lib/cjs/utils/validators.js
var require_validators = __commonJS({
  "node_modules/pdf-lib/cjs/utils/validators.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.assertPositive = exports.assertInteger = exports.assertMultiple = exports.assertRangeOrUndefined = exports.assertRange = exports.assertEachIs = exports.assertOrUndefined = exports.assertIs = exports.createTypeErrorMsg = exports.isType = exports.getType = exports.assertIsSubset = exports.assertIsOneOfOrUndefined = exports.assertIsOneOf = exports.createValueErrorMsg = exports.singleQuote = exports.backtick = void 0;
    var objects_1 = require_objects();
    exports.backtick = function(val) {
      return "`" + val + "`";
    };
    exports.singleQuote = function(val) {
      return "'" + val + "'";
    };
    var formatValue = function(value) {
      var type = typeof value;
      if (type === "string")
        return exports.singleQuote(value);
      else if (type === "undefined")
        return exports.backtick(value);
      else
        return value;
    };
    exports.createValueErrorMsg = function(value, valueName, values) {
      var allowedValues = new Array(values.length);
      for (var idx = 0, len = values.length; idx < len; idx++) {
        var v = values[idx];
        allowedValues[idx] = formatValue(v);
      }
      var joinedValues = allowedValues.join(" or ");
      return exports.backtick(valueName) + " must be one of " + joinedValues + ", but was actually " + formatValue(value);
    };
    exports.assertIsOneOf = function(value, valueName, allowedValues) {
      if (!Array.isArray(allowedValues)) {
        allowedValues = objects_1.values(allowedValues);
      }
      for (var idx = 0, len = allowedValues.length; idx < len; idx++) {
        if (value === allowedValues[idx])
          return;
      }
      throw new TypeError(exports.createValueErrorMsg(value, valueName, allowedValues));
    };
    exports.assertIsOneOfOrUndefined = function(value, valueName, allowedValues) {
      if (!Array.isArray(allowedValues)) {
        allowedValues = objects_1.values(allowedValues);
      }
      exports.assertIsOneOf(value, valueName, allowedValues.concat(void 0));
    };
    exports.assertIsSubset = function(values, valueName, allowedValues) {
      if (!Array.isArray(allowedValues)) {
        allowedValues = objects_1.values(allowedValues);
      }
      for (var idx = 0, len = values.length; idx < len; idx++) {
        exports.assertIsOneOf(values[idx], valueName, allowedValues);
      }
    };
    exports.getType = function(val) {
      if (val === null)
        return "null";
      if (val === void 0)
        return "undefined";
      if (typeof val === "string")
        return "string";
      if (isNaN(val))
        return "NaN";
      if (typeof val === "number")
        return "number";
      if (typeof val === "boolean")
        return "boolean";
      if (typeof val === "symbol")
        return "symbol";
      if (typeof val === "bigint")
        return "bigint";
      if (val.constructor && val.constructor.name)
        return val.constructor.name;
      if (val.name)
        return val.name;
      if (val.constructor)
        return String(val.constructor);
      return String(val);
    };
    exports.isType = function(value, type) {
      if (type === "null")
        return value === null;
      if (type === "undefined")
        return value === void 0;
      if (type === "string")
        return typeof value === "string";
      if (type === "number")
        return typeof value === "number" && !isNaN(value);
      if (type === "boolean")
        return typeof value === "boolean";
      if (type === "symbol")
        return typeof value === "symbol";
      if (type === "bigint")
        return typeof value === "bigint";
      if (type === Date)
        return value instanceof Date;
      if (type === Array)
        return value instanceof Array;
      if (type === Uint8Array)
        return value instanceof Uint8Array;
      if (type === ArrayBuffer)
        return value instanceof ArrayBuffer;
      if (type === Function)
        return value instanceof Function;
      return value instanceof type[0];
    };
    exports.createTypeErrorMsg = function(value, valueName, types) {
      var allowedTypes = new Array(types.length);
      for (var idx = 0, len = types.length; idx < len; idx++) {
        var type = types[idx];
        if (type === "null")
          allowedTypes[idx] = exports.backtick("null");
        if (type === "undefined")
          allowedTypes[idx] = exports.backtick("undefined");
        if (type === "string")
          allowedTypes[idx] = exports.backtick("string");
        else if (type === "number")
          allowedTypes[idx] = exports.backtick("number");
        else if (type === "boolean")
          allowedTypes[idx] = exports.backtick("boolean");
        else if (type === "symbol")
          allowedTypes[idx] = exports.backtick("symbol");
        else if (type === "bigint")
          allowedTypes[idx] = exports.backtick("bigint");
        else if (type === Array)
          allowedTypes[idx] = exports.backtick("Array");
        else if (type === Uint8Array)
          allowedTypes[idx] = exports.backtick("Uint8Array");
        else if (type === ArrayBuffer)
          allowedTypes[idx] = exports.backtick("ArrayBuffer");
        else
          allowedTypes[idx] = exports.backtick(type[1]);
      }
      var joinedTypes = allowedTypes.join(" or ");
      return exports.backtick(valueName) + " must be of type " + joinedTypes + ", but was actually of type " + exports.backtick(exports.getType(value));
    };
    exports.assertIs = function(value, valueName, types) {
      for (var idx = 0, len = types.length; idx < len; idx++) {
        if (exports.isType(value, types[idx]))
          return;
      }
      throw new TypeError(exports.createTypeErrorMsg(value, valueName, types));
    };
    exports.assertOrUndefined = function(value, valueName, types) {
      exports.assertIs(value, valueName, types.concat("undefined"));
    };
    exports.assertEachIs = function(values, valueName, types) {
      for (var idx = 0, len = values.length; idx < len; idx++) {
        exports.assertIs(values[idx], valueName, types);
      }
    };
    exports.assertRange = function(value, valueName, min, max) {
      exports.assertIs(value, valueName, ["number"]);
      exports.assertIs(min, "min", ["number"]);
      exports.assertIs(max, "max", ["number"]);
      max = Math.max(min, max);
      if (value < min || value > max) {
        throw new Error(exports.backtick(valueName) + " must be at least " + min + " and at most " + max + ", but was actually " + value);
      }
    };
    exports.assertRangeOrUndefined = function(value, valueName, min, max) {
      exports.assertIs(value, valueName, ["number", "undefined"]);
      if (typeof value === "number")
        exports.assertRange(value, valueName, min, max);
    };
    exports.assertMultiple = function(value, valueName, multiplier) {
      exports.assertIs(value, valueName, ["number"]);
      if (value % multiplier !== 0) {
        throw new Error(exports.backtick(valueName) + " must be a multiple of " + multiplier + ", but was actually " + value);
      }
    };
    exports.assertInteger = function(value, valueName) {
      if (!Number.isInteger(value)) {
        throw new Error(exports.backtick(valueName) + " must be an integer, but was actually " + value);
      }
    };
    exports.assertPositive = function(value, valueName) {
      if (![1, 0].includes(Math.sign(value))) {
        throw new Error(exports.backtick(valueName) + " must be a positive number or 0, but was actually " + value);
      }
    };
  }
});

// node_modules/pdf-lib/cjs/utils/pdfDocEncoding.js
var require_pdfDocEncoding = __commonJS({
  "node_modules/pdf-lib/cjs/utils/pdfDocEncoding.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.pdfDocEncodingDecode = void 0;
    var strings_1 = require_strings();
    var pdfDocEncodingToUnicode = new Uint16Array(256);
    for (idx = 0; idx < 256; idx++) {
      pdfDocEncodingToUnicode[idx] = idx;
    }
    var idx;
    pdfDocEncodingToUnicode[22] = strings_1.toCharCode("");
    pdfDocEncodingToUnicode[24] = strings_1.toCharCode("\u02D8");
    pdfDocEncodingToUnicode[25] = strings_1.toCharCode("\u02C7");
    pdfDocEncodingToUnicode[26] = strings_1.toCharCode("\u02C6");
    pdfDocEncodingToUnicode[27] = strings_1.toCharCode("\u02D9");
    pdfDocEncodingToUnicode[28] = strings_1.toCharCode("\u02DD");
    pdfDocEncodingToUnicode[29] = strings_1.toCharCode("\u02DB");
    pdfDocEncodingToUnicode[30] = strings_1.toCharCode("\u02DA");
    pdfDocEncodingToUnicode[31] = strings_1.toCharCode("\u02DC");
    pdfDocEncodingToUnicode[127] = strings_1.toCharCode("\uFFFD");
    pdfDocEncodingToUnicode[128] = strings_1.toCharCode("\u2022");
    pdfDocEncodingToUnicode[129] = strings_1.toCharCode("\u2020");
    pdfDocEncodingToUnicode[130] = strings_1.toCharCode("\u2021");
    pdfDocEncodingToUnicode[131] = strings_1.toCharCode("\u2026");
    pdfDocEncodingToUnicode[132] = strings_1.toCharCode("\u2014");
    pdfDocEncodingToUnicode[133] = strings_1.toCharCode("\u2013");
    pdfDocEncodingToUnicode[134] = strings_1.toCharCode("\u0192");
    pdfDocEncodingToUnicode[135] = strings_1.toCharCode("\u2044");
    pdfDocEncodingToUnicode[136] = strings_1.toCharCode("\u2039");
    pdfDocEncodingToUnicode[137] = strings_1.toCharCode("\u203A");
    pdfDocEncodingToUnicode[138] = strings_1.toCharCode("\u2212");
    pdfDocEncodingToUnicode[139] = strings_1.toCharCode("\u2030");
    pdfDocEncodingToUnicode[140] = strings_1.toCharCode("\u201E");
    pdfDocEncodingToUnicode[141] = strings_1.toCharCode("\u201C");
    pdfDocEncodingToUnicode[142] = strings_1.toCharCode("\u201D");
    pdfDocEncodingToUnicode[143] = strings_1.toCharCode("\u2018");
    pdfDocEncodingToUnicode[144] = strings_1.toCharCode("\u2019");
    pdfDocEncodingToUnicode[145] = strings_1.toCharCode("\u201A");
    pdfDocEncodingToUnicode[146] = strings_1.toCharCode("\u2122");
    pdfDocEncodingToUnicode[147] = strings_1.toCharCode("\uFB01");
    pdfDocEncodingToUnicode[148] = strings_1.toCharCode("\uFB02");
    pdfDocEncodingToUnicode[149] = strings_1.toCharCode("\u0141");
    pdfDocEncodingToUnicode[150] = strings_1.toCharCode("\u0152");
    pdfDocEncodingToUnicode[151] = strings_1.toCharCode("\u0160");
    pdfDocEncodingToUnicode[152] = strings_1.toCharCode("\u0178");
    pdfDocEncodingToUnicode[153] = strings_1.toCharCode("\u017D");
    pdfDocEncodingToUnicode[154] = strings_1.toCharCode("\u0131");
    pdfDocEncodingToUnicode[155] = strings_1.toCharCode("\u0142");
    pdfDocEncodingToUnicode[156] = strings_1.toCharCode("\u0153");
    pdfDocEncodingToUnicode[157] = strings_1.toCharCode("\u0161");
    pdfDocEncodingToUnicode[158] = strings_1.toCharCode("\u017E");
    pdfDocEncodingToUnicode[159] = strings_1.toCharCode("\uFFFD");
    pdfDocEncodingToUnicode[160] = strings_1.toCharCode("\u20AC");
    pdfDocEncodingToUnicode[173] = strings_1.toCharCode("\uFFFD");
    exports.pdfDocEncodingDecode = function(bytes) {
      var codePoints = new Array(bytes.length);
      for (var idx2 = 0, len = bytes.length; idx2 < len; idx2++) {
        codePoints[idx2] = pdfDocEncodingToUnicode[bytes[idx2]];
      }
      return String.fromCodePoint.apply(String, codePoints);
    };
  }
});

// node_modules/pdf-lib/cjs/utils/Cache.js
var require_Cache = __commonJS({
  "node_modules/pdf-lib/cjs/utils/Cache.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Cache = (
      /** @class */
      function() {
        function Cache2(populate) {
          this.populate = populate;
          this.value = void 0;
        }
        Cache2.prototype.getValue = function() {
          return this.value;
        };
        Cache2.prototype.access = function() {
          if (!this.value)
            this.value = this.populate();
          return this.value;
        };
        Cache2.prototype.invalidate = function() {
          this.value = void 0;
        };
        Cache2.populatedBy = function(populate) {
          return new Cache2(populate);
        };
        return Cache2;
      }()
    );
    exports.default = Cache;
  }
});

// node_modules/pdf-lib/cjs/utils/index.js
var require_utils2 = __commonJS({
  "node_modules/pdf-lib/cjs/utils/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_arrays(), exports);
    tslib_1.__exportStar(require_async(), exports);
    tslib_1.__exportStar(require_strings(), exports);
    tslib_1.__exportStar(require_unicode(), exports);
    tslib_1.__exportStar(require_numbers(), exports);
    tslib_1.__exportStar(require_errors(), exports);
    tslib_1.__exportStar(require_base64(), exports);
    tslib_1.__exportStar(require_objects(), exports);
    tslib_1.__exportStar(require_validators(), exports);
    tslib_1.__exportStar(require_pdfDocEncoding(), exports);
    var Cache_1 = require_Cache();
    Object.defineProperty(exports, "Cache", { enumerable: true, get: function() {
      return Cache_1.default;
    } });
  }
});

// node_modules/pdf-lib/cjs/core/errors.js
var require_errors2 = __commonJS({
  "node_modules/pdf-lib/cjs/core/errors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MissingKeywordError = exports.MissingPDFHeaderError = exports.StalledParserError = exports.UnbalancedParenthesisError = exports.PDFStreamParsingError = exports.PDFInvalidObjectParsingError = exports.PDFObjectParsingError = exports.NextByteAssertionError = exports.PDFParsingError = exports.NumberParsingError = exports.MissingTfOperatorError = exports.MissingDAEntryError = exports.MultiSelectValueError = exports.InvalidAcroFieldValueError = exports.IndexOutOfBoundsError = exports.CorruptPageTreeError = exports.InvalidTargetIndexError = exports.InvalidPDFDateStringError = exports.PDFArrayIsNotRectangleError = exports.PageEmbeddingMismatchedContextError = exports.UnrecognizedStreamTypeError = exports.MissingPageContentsEmbeddingError = exports.MissingCatalogError = exports.ReparseError = exports.UnsupportedEncodingError = exports.UnexpectedObjectTypeError = exports.PrivateConstructorError = exports.MethodNotImplementedError = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var utils_1 = require_utils2();
    var MethodNotImplementedError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(MethodNotImplementedError2, _super);
        function MethodNotImplementedError2(className, methodName) {
          var _this = this;
          var msg = "Method " + className + "." + methodName + "() not implemented";
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return MethodNotImplementedError2;
      }(Error)
    );
    exports.MethodNotImplementedError = MethodNotImplementedError;
    var PrivateConstructorError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PrivateConstructorError2, _super);
        function PrivateConstructorError2(className) {
          var _this = this;
          var msg = "Cannot construct " + className + " - it has a private constructor";
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return PrivateConstructorError2;
      }(Error)
    );
    exports.PrivateConstructorError = PrivateConstructorError;
    var UnexpectedObjectTypeError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(UnexpectedObjectTypeError2, _super);
        function UnexpectedObjectTypeError2(expected, actual) {
          var _this = this;
          var name = function(t) {
            var _a, _b;
            return (_a = t === null || t === void 0 ? void 0 : t.name) !== null && _a !== void 0 ? _a : (_b = t === null || t === void 0 ? void 0 : t.constructor) === null || _b === void 0 ? void 0 : _b.name;
          };
          var expectedTypes = Array.isArray(expected) ? expected.map(name) : [name(expected)];
          var msg = "Expected instance of " + expectedTypes.join(" or ") + ", " + ("but got instance of " + (actual ? name(actual) : actual));
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return UnexpectedObjectTypeError2;
      }(Error)
    );
    exports.UnexpectedObjectTypeError = UnexpectedObjectTypeError;
    var UnsupportedEncodingError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(UnsupportedEncodingError2, _super);
        function UnsupportedEncodingError2(encoding) {
          var _this = this;
          var msg = encoding + " stream encoding not supported";
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return UnsupportedEncodingError2;
      }(Error)
    );
    exports.UnsupportedEncodingError = UnsupportedEncodingError;
    var ReparseError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(ReparseError2, _super);
        function ReparseError2(className, methodName) {
          var _this = this;
          var msg = "Cannot call " + className + "." + methodName + "() more than once";
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return ReparseError2;
      }(Error)
    );
    exports.ReparseError = ReparseError;
    var MissingCatalogError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(MissingCatalogError2, _super);
        function MissingCatalogError2(ref) {
          var _this = this;
          var msg = "Missing catalog (ref=" + ref + ")";
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return MissingCatalogError2;
      }(Error)
    );
    exports.MissingCatalogError = MissingCatalogError;
    var MissingPageContentsEmbeddingError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(MissingPageContentsEmbeddingError2, _super);
        function MissingPageContentsEmbeddingError2() {
          var _this = this;
          var msg = "Can't embed page with missing Contents";
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return MissingPageContentsEmbeddingError2;
      }(Error)
    );
    exports.MissingPageContentsEmbeddingError = MissingPageContentsEmbeddingError;
    var UnrecognizedStreamTypeError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(UnrecognizedStreamTypeError2, _super);
        function UnrecognizedStreamTypeError2(stream) {
          var _a, _b, _c;
          var _this = this;
          var streamType = (_c = (_b = (_a = stream === null || stream === void 0 ? void 0 : stream.contructor) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : stream === null || stream === void 0 ? void 0 : stream.name) !== null && _c !== void 0 ? _c : stream;
          var msg = "Unrecognized stream type: " + streamType;
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return UnrecognizedStreamTypeError2;
      }(Error)
    );
    exports.UnrecognizedStreamTypeError = UnrecognizedStreamTypeError;
    var PageEmbeddingMismatchedContextError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PageEmbeddingMismatchedContextError2, _super);
        function PageEmbeddingMismatchedContextError2() {
          var _this = this;
          var msg = "Found mismatched contexts while embedding pages. All pages in the array passed to `PDFDocument.embedPages()` must be from the same document.";
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return PageEmbeddingMismatchedContextError2;
      }(Error)
    );
    exports.PageEmbeddingMismatchedContextError = PageEmbeddingMismatchedContextError;
    var PDFArrayIsNotRectangleError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFArrayIsNotRectangleError2, _super);
        function PDFArrayIsNotRectangleError2(size) {
          var _this = this;
          var msg = "Attempted to convert PDFArray with " + size + " elements to rectangle, but must have exactly 4 elements.";
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return PDFArrayIsNotRectangleError2;
      }(Error)
    );
    exports.PDFArrayIsNotRectangleError = PDFArrayIsNotRectangleError;
    var InvalidPDFDateStringError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(InvalidPDFDateStringError2, _super);
        function InvalidPDFDateStringError2(value) {
          var _this = this;
          var msg = 'Attempted to convert "' + value + '" to a date, but it does not match the PDF date string format.';
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return InvalidPDFDateStringError2;
      }(Error)
    );
    exports.InvalidPDFDateStringError = InvalidPDFDateStringError;
    var InvalidTargetIndexError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(InvalidTargetIndexError2, _super);
        function InvalidTargetIndexError2(targetIndex, Count) {
          var _this = this;
          var msg = "Invalid targetIndex specified: targetIndex=" + targetIndex + " must be less than Count=" + Count;
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return InvalidTargetIndexError2;
      }(Error)
    );
    exports.InvalidTargetIndexError = InvalidTargetIndexError;
    var CorruptPageTreeError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(CorruptPageTreeError2, _super);
        function CorruptPageTreeError2(targetIndex, operation) {
          var _this = this;
          var msg = "Failed to " + operation + " at targetIndex=" + targetIndex + " due to corrupt page tree: It is likely that one or more 'Count' entries are invalid";
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return CorruptPageTreeError2;
      }(Error)
    );
    exports.CorruptPageTreeError = CorruptPageTreeError;
    var IndexOutOfBoundsError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(IndexOutOfBoundsError2, _super);
        function IndexOutOfBoundsError2(index, min, max) {
          var _this = this;
          var msg = "index should be at least " + min + " and at most " + max + ", but was actually " + index;
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return IndexOutOfBoundsError2;
      }(Error)
    );
    exports.IndexOutOfBoundsError = IndexOutOfBoundsError;
    var InvalidAcroFieldValueError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(InvalidAcroFieldValueError2, _super);
        function InvalidAcroFieldValueError2() {
          var _this = this;
          var msg = "Attempted to set invalid field value";
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return InvalidAcroFieldValueError2;
      }(Error)
    );
    exports.InvalidAcroFieldValueError = InvalidAcroFieldValueError;
    var MultiSelectValueError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(MultiSelectValueError2, _super);
        function MultiSelectValueError2() {
          var _this = this;
          var msg = "Attempted to select multiple values for single-select field";
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return MultiSelectValueError2;
      }(Error)
    );
    exports.MultiSelectValueError = MultiSelectValueError;
    var MissingDAEntryError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(MissingDAEntryError2, _super);
        function MissingDAEntryError2(fieldName) {
          var _this = this;
          var msg = "No /DA (default appearance) entry found for field: " + fieldName;
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return MissingDAEntryError2;
      }(Error)
    );
    exports.MissingDAEntryError = MissingDAEntryError;
    var MissingTfOperatorError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(MissingTfOperatorError2, _super);
        function MissingTfOperatorError2(fieldName) {
          var _this = this;
          var msg = "No Tf operator found for DA of field: " + fieldName;
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return MissingTfOperatorError2;
      }(Error)
    );
    exports.MissingTfOperatorError = MissingTfOperatorError;
    var NumberParsingError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(NumberParsingError2, _super);
        function NumberParsingError2(pos, value) {
          var _this = this;
          var msg = "Failed to parse number " + ("(line:" + pos.line + " col:" + pos.column + " offset=" + pos.offset + '): "' + value + '"');
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return NumberParsingError2;
      }(Error)
    );
    exports.NumberParsingError = NumberParsingError;
    var PDFParsingError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFParsingError2, _super);
        function PDFParsingError2(pos, details) {
          var _this = this;
          var msg = "Failed to parse PDF document " + ("(line:" + pos.line + " col:" + pos.column + " offset=" + pos.offset + "): " + details);
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return PDFParsingError2;
      }(Error)
    );
    exports.PDFParsingError = PDFParsingError;
    var NextByteAssertionError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(NextByteAssertionError2, _super);
        function NextByteAssertionError2(pos, expectedByte, actualByte) {
          var _this = this;
          var msg = "Expected next byte to be " + expectedByte + " but it was actually " + actualByte;
          _this = _super.call(this, pos, msg) || this;
          return _this;
        }
        return NextByteAssertionError2;
      }(PDFParsingError)
    );
    exports.NextByteAssertionError = NextByteAssertionError;
    var PDFObjectParsingError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFObjectParsingError2, _super);
        function PDFObjectParsingError2(pos, byte) {
          var _this = this;
          var msg = "Failed to parse PDF object starting with the following byte: " + byte;
          _this = _super.call(this, pos, msg) || this;
          return _this;
        }
        return PDFObjectParsingError2;
      }(PDFParsingError)
    );
    exports.PDFObjectParsingError = PDFObjectParsingError;
    var PDFInvalidObjectParsingError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFInvalidObjectParsingError2, _super);
        function PDFInvalidObjectParsingError2(pos) {
          var _this = this;
          var msg = "Failed to parse invalid PDF object";
          _this = _super.call(this, pos, msg) || this;
          return _this;
        }
        return PDFInvalidObjectParsingError2;
      }(PDFParsingError)
    );
    exports.PDFInvalidObjectParsingError = PDFInvalidObjectParsingError;
    var PDFStreamParsingError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFStreamParsingError2, _super);
        function PDFStreamParsingError2(pos) {
          var _this = this;
          var msg = "Failed to parse PDF stream";
          _this = _super.call(this, pos, msg) || this;
          return _this;
        }
        return PDFStreamParsingError2;
      }(PDFParsingError)
    );
    exports.PDFStreamParsingError = PDFStreamParsingError;
    var UnbalancedParenthesisError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(UnbalancedParenthesisError2, _super);
        function UnbalancedParenthesisError2(pos) {
          var _this = this;
          var msg = "Failed to parse PDF literal string due to unbalanced parenthesis";
          _this = _super.call(this, pos, msg) || this;
          return _this;
        }
        return UnbalancedParenthesisError2;
      }(PDFParsingError)
    );
    exports.UnbalancedParenthesisError = UnbalancedParenthesisError;
    var StalledParserError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(StalledParserError2, _super);
        function StalledParserError2(pos) {
          var _this = this;
          var msg = "Parser stalled";
          _this = _super.call(this, pos, msg) || this;
          return _this;
        }
        return StalledParserError2;
      }(PDFParsingError)
    );
    exports.StalledParserError = StalledParserError;
    var MissingPDFHeaderError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(MissingPDFHeaderError2, _super);
        function MissingPDFHeaderError2(pos) {
          var _this = this;
          var msg = "No PDF header found";
          _this = _super.call(this, pos, msg) || this;
          return _this;
        }
        return MissingPDFHeaderError2;
      }(PDFParsingError)
    );
    exports.MissingPDFHeaderError = MissingPDFHeaderError;
    var MissingKeywordError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(MissingKeywordError2, _super);
        function MissingKeywordError2(pos, keyword) {
          var _this = this;
          var msg = "Did not find expected keyword '" + utils_1.arrayAsString(keyword) + "'";
          _this = _super.call(this, pos, msg) || this;
          return _this;
        }
        return MissingKeywordError2;
      }(PDFParsingError)
    );
    exports.MissingKeywordError = MissingKeywordError;
  }
});

// node_modules/pdf-lib/cjs/core/syntax/CharCodes.js
var require_CharCodes = __commonJS({
  "node_modules/pdf-lib/cjs/core/syntax/CharCodes.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var CharCodes;
    (function(CharCodes2) {
      CharCodes2[CharCodes2["Null"] = 0] = "Null";
      CharCodes2[CharCodes2["Backspace"] = 8] = "Backspace";
      CharCodes2[CharCodes2["Tab"] = 9] = "Tab";
      CharCodes2[CharCodes2["Newline"] = 10] = "Newline";
      CharCodes2[CharCodes2["FormFeed"] = 12] = "FormFeed";
      CharCodes2[CharCodes2["CarriageReturn"] = 13] = "CarriageReturn";
      CharCodes2[CharCodes2["Space"] = 32] = "Space";
      CharCodes2[CharCodes2["ExclamationPoint"] = 33] = "ExclamationPoint";
      CharCodes2[CharCodes2["Hash"] = 35] = "Hash";
      CharCodes2[CharCodes2["Percent"] = 37] = "Percent";
      CharCodes2[CharCodes2["LeftParen"] = 40] = "LeftParen";
      CharCodes2[CharCodes2["RightParen"] = 41] = "RightParen";
      CharCodes2[CharCodes2["Plus"] = 43] = "Plus";
      CharCodes2[CharCodes2["Minus"] = 45] = "Minus";
      CharCodes2[CharCodes2["Dash"] = 45] = "Dash";
      CharCodes2[CharCodes2["Period"] = 46] = "Period";
      CharCodes2[CharCodes2["ForwardSlash"] = 47] = "ForwardSlash";
      CharCodes2[CharCodes2["Zero"] = 48] = "Zero";
      CharCodes2[CharCodes2["One"] = 49] = "One";
      CharCodes2[CharCodes2["Two"] = 50] = "Two";
      CharCodes2[CharCodes2["Three"] = 51] = "Three";
      CharCodes2[CharCodes2["Four"] = 52] = "Four";
      CharCodes2[CharCodes2["Five"] = 53] = "Five";
      CharCodes2[CharCodes2["Six"] = 54] = "Six";
      CharCodes2[CharCodes2["Seven"] = 55] = "Seven";
      CharCodes2[CharCodes2["Eight"] = 56] = "Eight";
      CharCodes2[CharCodes2["Nine"] = 57] = "Nine";
      CharCodes2[CharCodes2["LessThan"] = 60] = "LessThan";
      CharCodes2[CharCodes2["GreaterThan"] = 62] = "GreaterThan";
      CharCodes2[CharCodes2["A"] = 65] = "A";
      CharCodes2[CharCodes2["D"] = 68] = "D";
      CharCodes2[CharCodes2["E"] = 69] = "E";
      CharCodes2[CharCodes2["F"] = 70] = "F";
      CharCodes2[CharCodes2["O"] = 79] = "O";
      CharCodes2[CharCodes2["P"] = 80] = "P";
      CharCodes2[CharCodes2["R"] = 82] = "R";
      CharCodes2[CharCodes2["LeftSquareBracket"] = 91] = "LeftSquareBracket";
      CharCodes2[CharCodes2["BackSlash"] = 92] = "BackSlash";
      CharCodes2[CharCodes2["RightSquareBracket"] = 93] = "RightSquareBracket";
      CharCodes2[CharCodes2["a"] = 97] = "a";
      CharCodes2[CharCodes2["b"] = 98] = "b";
      CharCodes2[CharCodes2["d"] = 100] = "d";
      CharCodes2[CharCodes2["e"] = 101] = "e";
      CharCodes2[CharCodes2["f"] = 102] = "f";
      CharCodes2[CharCodes2["i"] = 105] = "i";
      CharCodes2[CharCodes2["j"] = 106] = "j";
      CharCodes2[CharCodes2["l"] = 108] = "l";
      CharCodes2[CharCodes2["m"] = 109] = "m";
      CharCodes2[CharCodes2["n"] = 110] = "n";
      CharCodes2[CharCodes2["o"] = 111] = "o";
      CharCodes2[CharCodes2["r"] = 114] = "r";
      CharCodes2[CharCodes2["s"] = 115] = "s";
      CharCodes2[CharCodes2["t"] = 116] = "t";
      CharCodes2[CharCodes2["u"] = 117] = "u";
      CharCodes2[CharCodes2["x"] = 120] = "x";
      CharCodes2[CharCodes2["LeftCurly"] = 123] = "LeftCurly";
      CharCodes2[CharCodes2["RightCurly"] = 125] = "RightCurly";
      CharCodes2[CharCodes2["Tilde"] = 126] = "Tilde";
    })(CharCodes || (CharCodes = {}));
    exports.default = CharCodes;
  }
});

// node_modules/pdf-lib/cjs/core/document/PDFHeader.js
var require_PDFHeader = __commonJS({
  "node_modules/pdf-lib/cjs/core/document/PDFHeader.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var utils_1 = require_utils2();
    var PDFHeader = (
      /** @class */
      function() {
        function PDFHeader2(major, minor) {
          this.major = String(major);
          this.minor = String(minor);
        }
        PDFHeader2.prototype.toString = function() {
          var bc = utils_1.charFromCode(129);
          return "%PDF-" + this.major + "." + this.minor + "\n%" + bc + bc + bc + bc;
        };
        PDFHeader2.prototype.sizeInBytes = function() {
          return 12 + this.major.length + this.minor.length;
        };
        PDFHeader2.prototype.copyBytesInto = function(buffer, offset) {
          var initialOffset = offset;
          buffer[offset++] = CharCodes_1.default.Percent;
          buffer[offset++] = CharCodes_1.default.P;
          buffer[offset++] = CharCodes_1.default.D;
          buffer[offset++] = CharCodes_1.default.F;
          buffer[offset++] = CharCodes_1.default.Dash;
          offset += utils_1.copyStringIntoBuffer(this.major, buffer, offset);
          buffer[offset++] = CharCodes_1.default.Period;
          offset += utils_1.copyStringIntoBuffer(this.minor, buffer, offset);
          buffer[offset++] = CharCodes_1.default.Newline;
          buffer[offset++] = CharCodes_1.default.Percent;
          buffer[offset++] = 129;
          buffer[offset++] = 129;
          buffer[offset++] = 129;
          buffer[offset++] = 129;
          return offset - initialOffset;
        };
        PDFHeader2.forVersion = function(major, minor) {
          return new PDFHeader2(major, minor);
        };
        return PDFHeader2;
      }()
    );
    exports.default = PDFHeader;
  }
});

// node_modules/pdf-lib/cjs/core/objects/PDFObject.js
var require_PDFObject = __commonJS({
  "node_modules/pdf-lib/cjs/core/objects/PDFObject.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var errors_1 = require_errors2();
    var PDFObject = (
      /** @class */
      function() {
        function PDFObject2() {
        }
        PDFObject2.prototype.clone = function(_context) {
          throw new errors_1.MethodNotImplementedError(this.constructor.name, "clone");
        };
        PDFObject2.prototype.toString = function() {
          throw new errors_1.MethodNotImplementedError(this.constructor.name, "toString");
        };
        PDFObject2.prototype.sizeInBytes = function() {
          throw new errors_1.MethodNotImplementedError(this.constructor.name, "sizeInBytes");
        };
        PDFObject2.prototype.copyBytesInto = function(_buffer, _offset) {
          throw new errors_1.MethodNotImplementedError(this.constructor.name, "copyBytesInto");
        };
        return PDFObject2;
      }()
    );
    exports.default = PDFObject;
  }
});

// node_modules/pdf-lib/cjs/core/objects/PDFNumber.js
var require_PDFNumber = __commonJS({
  "node_modules/pdf-lib/cjs/core/objects/PDFNumber.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var index_1 = require_utils2();
    var PDFObject_1 = tslib_1.__importDefault(require_PDFObject());
    var PDFNumber = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFNumber2, _super);
        function PDFNumber2(value) {
          var _this = _super.call(this) || this;
          _this.numberValue = value;
          _this.stringValue = index_1.numberToString(value);
          return _this;
        }
        PDFNumber2.prototype.asNumber = function() {
          return this.numberValue;
        };
        PDFNumber2.prototype.value = function() {
          return this.numberValue;
        };
        PDFNumber2.prototype.clone = function() {
          return PDFNumber2.of(this.numberValue);
        };
        PDFNumber2.prototype.toString = function() {
          return this.stringValue;
        };
        PDFNumber2.prototype.sizeInBytes = function() {
          return this.stringValue.length;
        };
        PDFNumber2.prototype.copyBytesInto = function(buffer, offset) {
          offset += index_1.copyStringIntoBuffer(this.stringValue, buffer, offset);
          return this.stringValue.length;
        };
        PDFNumber2.of = function(value) {
          return new PDFNumber2(value);
        };
        return PDFNumber2;
      }(PDFObject_1.default)
    );
    exports.default = PDFNumber;
  }
});

// node_modules/pdf-lib/cjs/core/objects/PDFArray.js
var require_PDFArray = __commonJS({
  "node_modules/pdf-lib/cjs/core/objects/PDFArray.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFNumber_1 = tslib_1.__importDefault(require_PDFNumber());
    var PDFObject_1 = tslib_1.__importDefault(require_PDFObject());
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var errors_1 = require_errors2();
    var PDFArray = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFArray2, _super);
        function PDFArray2(context) {
          var _this = _super.call(this) || this;
          _this.array = [];
          _this.context = context;
          return _this;
        }
        PDFArray2.prototype.size = function() {
          return this.array.length;
        };
        PDFArray2.prototype.push = function(object) {
          this.array.push(object);
        };
        PDFArray2.prototype.insert = function(index, object) {
          this.array.splice(index, 0, object);
        };
        PDFArray2.prototype.indexOf = function(object) {
          var index = this.array.indexOf(object);
          return index === -1 ? void 0 : index;
        };
        PDFArray2.prototype.remove = function(index) {
          this.array.splice(index, 1);
        };
        PDFArray2.prototype.set = function(idx, object) {
          this.array[idx] = object;
        };
        PDFArray2.prototype.get = function(index) {
          return this.array[index];
        };
        PDFArray2.prototype.lookupMaybe = function(index) {
          var _a;
          var types = [];
          for (var _i = 1; _i < arguments.length; _i++) {
            types[_i - 1] = arguments[_i];
          }
          return (_a = this.context).lookupMaybe.apply(_a, tslib_1.__spreadArrays([this.get(index)], types));
        };
        PDFArray2.prototype.lookup = function(index) {
          var _a;
          var types = [];
          for (var _i = 1; _i < arguments.length; _i++) {
            types[_i - 1] = arguments[_i];
          }
          return (_a = this.context).lookup.apply(_a, tslib_1.__spreadArrays([this.get(index)], types));
        };
        PDFArray2.prototype.asRectangle = function() {
          if (this.size() !== 4)
            throw new errors_1.PDFArrayIsNotRectangleError(this.size());
          var lowerLeftX = this.lookup(0, PDFNumber_1.default).asNumber();
          var lowerLeftY = this.lookup(1, PDFNumber_1.default).asNumber();
          var upperRightX = this.lookup(2, PDFNumber_1.default).asNumber();
          var upperRightY = this.lookup(3, PDFNumber_1.default).asNumber();
          var x = lowerLeftX;
          var y = lowerLeftY;
          var width = upperRightX - lowerLeftX;
          var height = upperRightY - lowerLeftY;
          return { x, y, width, height };
        };
        PDFArray2.prototype.asArray = function() {
          return this.array.slice();
        };
        PDFArray2.prototype.clone = function(context) {
          var clone = PDFArray2.withContext(context || this.context);
          for (var idx = 0, len = this.size(); idx < len; idx++) {
            clone.push(this.array[idx]);
          }
          return clone;
        };
        PDFArray2.prototype.toString = function() {
          var arrayString = "[ ";
          for (var idx = 0, len = this.size(); idx < len; idx++) {
            arrayString += this.get(idx).toString();
            arrayString += " ";
          }
          arrayString += "]";
          return arrayString;
        };
        PDFArray2.prototype.sizeInBytes = function() {
          var size = 3;
          for (var idx = 0, len = this.size(); idx < len; idx++) {
            size += this.get(idx).sizeInBytes() + 1;
          }
          return size;
        };
        PDFArray2.prototype.copyBytesInto = function(buffer, offset) {
          var initialOffset = offset;
          buffer[offset++] = CharCodes_1.default.LeftSquareBracket;
          buffer[offset++] = CharCodes_1.default.Space;
          for (var idx = 0, len = this.size(); idx < len; idx++) {
            offset += this.get(idx).copyBytesInto(buffer, offset);
            buffer[offset++] = CharCodes_1.default.Space;
          }
          buffer[offset++] = CharCodes_1.default.RightSquareBracket;
          return offset - initialOffset;
        };
        PDFArray2.prototype.scalePDFNumbers = function(x, y) {
          for (var idx = 0, len = this.size(); idx < len; idx++) {
            var el = this.lookup(idx);
            if (el instanceof PDFNumber_1.default) {
              var factor = idx % 2 === 0 ? x : y;
              this.set(idx, PDFNumber_1.default.of(el.asNumber() * factor));
            }
          }
        };
        PDFArray2.withContext = function(context) {
          return new PDFArray2(context);
        };
        return PDFArray2;
      }(PDFObject_1.default)
    );
    exports.default = PDFArray;
  }
});

// node_modules/pdf-lib/cjs/core/objects/PDFBool.js
var require_PDFBool = __commonJS({
  "node_modules/pdf-lib/cjs/core/objects/PDFBool.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var errors_1 = require_errors2();
    var PDFObject_1 = tslib_1.__importDefault(require_PDFObject());
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var ENFORCER = {};
    var PDFBool = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFBool2, _super);
        function PDFBool2(enforcer, value) {
          var _this = this;
          if (enforcer !== ENFORCER)
            throw new errors_1.PrivateConstructorError("PDFBool");
          _this = _super.call(this) || this;
          _this.value = value;
          return _this;
        }
        PDFBool2.prototype.asBoolean = function() {
          return this.value;
        };
        PDFBool2.prototype.clone = function() {
          return this;
        };
        PDFBool2.prototype.toString = function() {
          return String(this.value);
        };
        PDFBool2.prototype.sizeInBytes = function() {
          return this.value ? 4 : 5;
        };
        PDFBool2.prototype.copyBytesInto = function(buffer, offset) {
          if (this.value) {
            buffer[offset++] = CharCodes_1.default.t;
            buffer[offset++] = CharCodes_1.default.r;
            buffer[offset++] = CharCodes_1.default.u;
            buffer[offset++] = CharCodes_1.default.e;
            return 4;
          } else {
            buffer[offset++] = CharCodes_1.default.f;
            buffer[offset++] = CharCodes_1.default.a;
            buffer[offset++] = CharCodes_1.default.l;
            buffer[offset++] = CharCodes_1.default.s;
            buffer[offset++] = CharCodes_1.default.e;
            return 5;
          }
        };
        PDFBool2.True = new PDFBool2(ENFORCER, true);
        PDFBool2.False = new PDFBool2(ENFORCER, false);
        return PDFBool2;
      }(PDFObject_1.default)
    );
    exports.default = PDFBool;
  }
});

// node_modules/pdf-lib/cjs/core/syntax/Delimiters.js
var require_Delimiters = __commonJS({
  "node_modules/pdf-lib/cjs/core/syntax/Delimiters.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IsDelimiter = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    exports.IsDelimiter = new Uint8Array(256);
    exports.IsDelimiter[CharCodes_1.default.LeftParen] = 1;
    exports.IsDelimiter[CharCodes_1.default.RightParen] = 1;
    exports.IsDelimiter[CharCodes_1.default.LessThan] = 1;
    exports.IsDelimiter[CharCodes_1.default.GreaterThan] = 1;
    exports.IsDelimiter[CharCodes_1.default.LeftSquareBracket] = 1;
    exports.IsDelimiter[CharCodes_1.default.RightSquareBracket] = 1;
    exports.IsDelimiter[CharCodes_1.default.LeftCurly] = 1;
    exports.IsDelimiter[CharCodes_1.default.RightCurly] = 1;
    exports.IsDelimiter[CharCodes_1.default.ForwardSlash] = 1;
    exports.IsDelimiter[CharCodes_1.default.Percent] = 1;
  }
});

// node_modules/pdf-lib/cjs/core/syntax/Whitespace.js
var require_Whitespace = __commonJS({
  "node_modules/pdf-lib/cjs/core/syntax/Whitespace.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IsWhitespace = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    exports.IsWhitespace = new Uint8Array(256);
    exports.IsWhitespace[CharCodes_1.default.Null] = 1;
    exports.IsWhitespace[CharCodes_1.default.Tab] = 1;
    exports.IsWhitespace[CharCodes_1.default.Newline] = 1;
    exports.IsWhitespace[CharCodes_1.default.FormFeed] = 1;
    exports.IsWhitespace[CharCodes_1.default.CarriageReturn] = 1;
    exports.IsWhitespace[CharCodes_1.default.Space] = 1;
  }
});

// node_modules/pdf-lib/cjs/core/syntax/Irregular.js
var require_Irregular = __commonJS({
  "node_modules/pdf-lib/cjs/core/syntax/Irregular.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IsIrregular = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var Delimiters_1 = require_Delimiters();
    var Whitespace_1 = require_Whitespace();
    exports.IsIrregular = new Uint8Array(256);
    for (idx = 0, len = 256; idx < len; idx++) {
      exports.IsIrregular[idx] = Whitespace_1.IsWhitespace[idx] || Delimiters_1.IsDelimiter[idx] ? 1 : 0;
    }
    var idx;
    var len;
    exports.IsIrregular[CharCodes_1.default.Hash] = 1;
  }
});

// node_modules/pdf-lib/cjs/core/objects/PDFName.js
var require_PDFName = __commonJS({
  "node_modules/pdf-lib/cjs/core/objects/PDFName.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var errors_1 = require_errors2();
    var PDFObject_1 = tslib_1.__importDefault(require_PDFObject());
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var Irregular_1 = require_Irregular();
    var utils_1 = require_utils2();
    var decodeName = function(name) {
      return name.replace(/#([\dABCDEF]{2})/g, function(_, hex) {
        return utils_1.charFromHexCode(hex);
      });
    };
    var isRegularChar = function(charCode) {
      return charCode >= CharCodes_1.default.ExclamationPoint && charCode <= CharCodes_1.default.Tilde && !Irregular_1.IsIrregular[charCode];
    };
    var ENFORCER = {};
    var pool = /* @__PURE__ */ new Map();
    var PDFName = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFName2, _super);
        function PDFName2(enforcer, name) {
          var _this = this;
          if (enforcer !== ENFORCER)
            throw new errors_1.PrivateConstructorError("PDFName");
          _this = _super.call(this) || this;
          var encodedName = "/";
          for (var idx = 0, len = name.length; idx < len; idx++) {
            var character = name[idx];
            var code = utils_1.toCharCode(character);
            encodedName += isRegularChar(code) ? character : "#" + utils_1.toHexString(code);
          }
          _this.encodedName = encodedName;
          return _this;
        }
        PDFName2.prototype.asBytes = function() {
          var bytes = [];
          var hex = "";
          var escaped = false;
          var pushByte = function(byte2) {
            if (byte2 !== void 0)
              bytes.push(byte2);
            escaped = false;
          };
          for (var idx = 1, len = this.encodedName.length; idx < len; idx++) {
            var char = this.encodedName[idx];
            var byte = utils_1.toCharCode(char);
            var nextChar = this.encodedName[idx + 1];
            if (!escaped) {
              if (byte === CharCodes_1.default.Hash)
                escaped = true;
              else
                pushByte(byte);
            } else {
              if (byte >= CharCodes_1.default.Zero && byte <= CharCodes_1.default.Nine || byte >= CharCodes_1.default.a && byte <= CharCodes_1.default.f || byte >= CharCodes_1.default.A && byte <= CharCodes_1.default.F) {
                hex += char;
                if (hex.length === 2 || !(nextChar >= "0" && nextChar <= "9" || nextChar >= "a" && nextChar <= "f" || nextChar >= "A" && nextChar <= "F")) {
                  pushByte(parseInt(hex, 16));
                  hex = "";
                }
              } else {
                pushByte(byte);
              }
            }
          }
          return new Uint8Array(bytes);
        };
        PDFName2.prototype.decodeText = function() {
          var bytes = this.asBytes();
          return String.fromCharCode.apply(String, Array.from(bytes));
        };
        PDFName2.prototype.asString = function() {
          return this.encodedName;
        };
        PDFName2.prototype.value = function() {
          return this.encodedName;
        };
        PDFName2.prototype.clone = function() {
          return this;
        };
        PDFName2.prototype.toString = function() {
          return this.encodedName;
        };
        PDFName2.prototype.sizeInBytes = function() {
          return this.encodedName.length;
        };
        PDFName2.prototype.copyBytesInto = function(buffer, offset) {
          offset += utils_1.copyStringIntoBuffer(this.encodedName, buffer, offset);
          return this.encodedName.length;
        };
        PDFName2.of = function(name) {
          var decodedValue = decodeName(name);
          var instance = pool.get(decodedValue);
          if (!instance) {
            instance = new PDFName2(ENFORCER, decodedValue);
            pool.set(decodedValue, instance);
          }
          return instance;
        };
        PDFName2.Length = PDFName2.of("Length");
        PDFName2.FlateDecode = PDFName2.of("FlateDecode");
        PDFName2.Resources = PDFName2.of("Resources");
        PDFName2.Font = PDFName2.of("Font");
        PDFName2.XObject = PDFName2.of("XObject");
        PDFName2.ExtGState = PDFName2.of("ExtGState");
        PDFName2.Contents = PDFName2.of("Contents");
        PDFName2.Type = PDFName2.of("Type");
        PDFName2.Parent = PDFName2.of("Parent");
        PDFName2.MediaBox = PDFName2.of("MediaBox");
        PDFName2.Page = PDFName2.of("Page");
        PDFName2.Annots = PDFName2.of("Annots");
        PDFName2.TrimBox = PDFName2.of("TrimBox");
        PDFName2.ArtBox = PDFName2.of("ArtBox");
        PDFName2.BleedBox = PDFName2.of("BleedBox");
        PDFName2.CropBox = PDFName2.of("CropBox");
        PDFName2.Rotate = PDFName2.of("Rotate");
        PDFName2.Title = PDFName2.of("Title");
        PDFName2.Author = PDFName2.of("Author");
        PDFName2.Subject = PDFName2.of("Subject");
        PDFName2.Creator = PDFName2.of("Creator");
        PDFName2.Keywords = PDFName2.of("Keywords");
        PDFName2.Producer = PDFName2.of("Producer");
        PDFName2.CreationDate = PDFName2.of("CreationDate");
        PDFName2.ModDate = PDFName2.of("ModDate");
        return PDFName2;
      }(PDFObject_1.default)
    );
    exports.default = PDFName;
  }
});

// node_modules/pdf-lib/cjs/core/objects/PDFNull.js
var require_PDFNull = __commonJS({
  "node_modules/pdf-lib/cjs/core/objects/PDFNull.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFObject_1 = tslib_1.__importDefault(require_PDFObject());
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var PDFNull = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFNull2, _super);
        function PDFNull2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        PDFNull2.prototype.asNull = function() {
          return null;
        };
        PDFNull2.prototype.clone = function() {
          return this;
        };
        PDFNull2.prototype.toString = function() {
          return "null";
        };
        PDFNull2.prototype.sizeInBytes = function() {
          return 4;
        };
        PDFNull2.prototype.copyBytesInto = function(buffer, offset) {
          buffer[offset++] = CharCodes_1.default.n;
          buffer[offset++] = CharCodes_1.default.u;
          buffer[offset++] = CharCodes_1.default.l;
          buffer[offset++] = CharCodes_1.default.l;
          return 4;
        };
        return PDFNull2;
      }(PDFObject_1.default)
    );
    exports.default = new PDFNull();
  }
});

// node_modules/pdf-lib/cjs/core/objects/PDFDict.js
var require_PDFDict = __commonJS({
  "node_modules/pdf-lib/cjs/core/objects/PDFDict.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFNull_1 = tslib_1.__importDefault(require_PDFNull());
    var PDFObject_1 = tslib_1.__importDefault(require_PDFObject());
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var PDFDict = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFDict2, _super);
        function PDFDict2(map, context) {
          var _this = _super.call(this) || this;
          _this.dict = map;
          _this.context = context;
          return _this;
        }
        PDFDict2.prototype.keys = function() {
          return Array.from(this.dict.keys());
        };
        PDFDict2.prototype.values = function() {
          return Array.from(this.dict.values());
        };
        PDFDict2.prototype.entries = function() {
          return Array.from(this.dict.entries());
        };
        PDFDict2.prototype.set = function(key, value) {
          this.dict.set(key, value);
        };
        PDFDict2.prototype.get = function(key, preservePDFNull) {
          if (preservePDFNull === void 0) {
            preservePDFNull = false;
          }
          var value = this.dict.get(key);
          if (value === PDFNull_1.default && !preservePDFNull)
            return void 0;
          return value;
        };
        PDFDict2.prototype.has = function(key) {
          var value = this.dict.get(key);
          return value !== void 0 && value !== PDFNull_1.default;
        };
        PDFDict2.prototype.lookupMaybe = function(key) {
          var _a;
          var types = [];
          for (var _i = 1; _i < arguments.length; _i++) {
            types[_i - 1] = arguments[_i];
          }
          var preservePDFNull = types.includes(PDFNull_1.default);
          var value = (_a = this.context).lookupMaybe.apply(_a, tslib_1.__spreadArrays([this.get(key, preservePDFNull)], types));
          if (value === PDFNull_1.default && !preservePDFNull)
            return void 0;
          return value;
        };
        PDFDict2.prototype.lookup = function(key) {
          var _a;
          var types = [];
          for (var _i = 1; _i < arguments.length; _i++) {
            types[_i - 1] = arguments[_i];
          }
          var preservePDFNull = types.includes(PDFNull_1.default);
          var value = (_a = this.context).lookup.apply(_a, tslib_1.__spreadArrays([this.get(key, preservePDFNull)], types));
          if (value === PDFNull_1.default && !preservePDFNull)
            return void 0;
          return value;
        };
        PDFDict2.prototype.delete = function(key) {
          return this.dict.delete(key);
        };
        PDFDict2.prototype.asMap = function() {
          return new Map(this.dict);
        };
        PDFDict2.prototype.uniqueKey = function(tag) {
          if (tag === void 0) {
            tag = "";
          }
          var existingKeys = this.keys();
          var key = PDFName_1.default.of(this.context.addRandomSuffix(tag, 10));
          while (existingKeys.includes(key)) {
            key = PDFName_1.default.of(this.context.addRandomSuffix(tag, 10));
          }
          return key;
        };
        PDFDict2.prototype.clone = function(context) {
          var clone = PDFDict2.withContext(context || this.context);
          var entries = this.entries();
          for (var idx = 0, len = entries.length; idx < len; idx++) {
            var _a = entries[idx], key = _a[0], value = _a[1];
            clone.set(key, value);
          }
          return clone;
        };
        PDFDict2.prototype.toString = function() {
          var dictString = "<<\n";
          var entries = this.entries();
          for (var idx = 0, len = entries.length; idx < len; idx++) {
            var _a = entries[idx], key = _a[0], value = _a[1];
            dictString += key.toString() + " " + value.toString() + "\n";
          }
          dictString += ">>";
          return dictString;
        };
        PDFDict2.prototype.sizeInBytes = function() {
          var size = 5;
          var entries = this.entries();
          for (var idx = 0, len = entries.length; idx < len; idx++) {
            var _a = entries[idx], key = _a[0], value = _a[1];
            size += key.sizeInBytes() + value.sizeInBytes() + 2;
          }
          return size;
        };
        PDFDict2.prototype.copyBytesInto = function(buffer, offset) {
          var initialOffset = offset;
          buffer[offset++] = CharCodes_1.default.LessThan;
          buffer[offset++] = CharCodes_1.default.LessThan;
          buffer[offset++] = CharCodes_1.default.Newline;
          var entries = this.entries();
          for (var idx = 0, len = entries.length; idx < len; idx++) {
            var _a = entries[idx], key = _a[0], value = _a[1];
            offset += key.copyBytesInto(buffer, offset);
            buffer[offset++] = CharCodes_1.default.Space;
            offset += value.copyBytesInto(buffer, offset);
            buffer[offset++] = CharCodes_1.default.Newline;
          }
          buffer[offset++] = CharCodes_1.default.GreaterThan;
          buffer[offset++] = CharCodes_1.default.GreaterThan;
          return offset - initialOffset;
        };
        PDFDict2.withContext = function(context) {
          return new PDFDict2(/* @__PURE__ */ new Map(), context);
        };
        PDFDict2.fromMapWithContext = function(map, context) {
          return new PDFDict2(map, context);
        };
        return PDFDict2;
      }(PDFObject_1.default)
    );
    exports.default = PDFDict;
  }
});

// node_modules/pdf-lib/cjs/core/objects/PDFStream.js
var require_PDFStream = __commonJS({
  "node_modules/pdf-lib/cjs/core/objects/PDFStream.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var errors_1 = require_errors2();
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFNumber_1 = tslib_1.__importDefault(require_PDFNumber());
    var PDFObject_1 = tslib_1.__importDefault(require_PDFObject());
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var PDFStream = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFStream2, _super);
        function PDFStream2(dict) {
          var _this = _super.call(this) || this;
          _this.dict = dict;
          return _this;
        }
        PDFStream2.prototype.clone = function(_context) {
          throw new errors_1.MethodNotImplementedError(this.constructor.name, "clone");
        };
        PDFStream2.prototype.getContentsString = function() {
          throw new errors_1.MethodNotImplementedError(this.constructor.name, "getContentsString");
        };
        PDFStream2.prototype.getContents = function() {
          throw new errors_1.MethodNotImplementedError(this.constructor.name, "getContents");
        };
        PDFStream2.prototype.getContentsSize = function() {
          throw new errors_1.MethodNotImplementedError(this.constructor.name, "getContentsSize");
        };
        PDFStream2.prototype.updateDict = function() {
          var contentsSize = this.getContentsSize();
          this.dict.set(PDFName_1.default.Length, PDFNumber_1.default.of(contentsSize));
        };
        PDFStream2.prototype.sizeInBytes = function() {
          this.updateDict();
          return this.dict.sizeInBytes() + this.getContentsSize() + 18;
        };
        PDFStream2.prototype.toString = function() {
          this.updateDict();
          var streamString = this.dict.toString();
          streamString += "\nstream\n";
          streamString += this.getContentsString();
          streamString += "\nendstream";
          return streamString;
        };
        PDFStream2.prototype.copyBytesInto = function(buffer, offset) {
          this.updateDict();
          var initialOffset = offset;
          offset += this.dict.copyBytesInto(buffer, offset);
          buffer[offset++] = CharCodes_1.default.Newline;
          buffer[offset++] = CharCodes_1.default.s;
          buffer[offset++] = CharCodes_1.default.t;
          buffer[offset++] = CharCodes_1.default.r;
          buffer[offset++] = CharCodes_1.default.e;
          buffer[offset++] = CharCodes_1.default.a;
          buffer[offset++] = CharCodes_1.default.m;
          buffer[offset++] = CharCodes_1.default.Newline;
          var contents = this.getContents();
          for (var idx = 0, len = contents.length; idx < len; idx++) {
            buffer[offset++] = contents[idx];
          }
          buffer[offset++] = CharCodes_1.default.Newline;
          buffer[offset++] = CharCodes_1.default.e;
          buffer[offset++] = CharCodes_1.default.n;
          buffer[offset++] = CharCodes_1.default.d;
          buffer[offset++] = CharCodes_1.default.s;
          buffer[offset++] = CharCodes_1.default.t;
          buffer[offset++] = CharCodes_1.default.r;
          buffer[offset++] = CharCodes_1.default.e;
          buffer[offset++] = CharCodes_1.default.a;
          buffer[offset++] = CharCodes_1.default.m;
          return offset - initialOffset;
        };
        return PDFStream2;
      }(PDFObject_1.default)
    );
    exports.default = PDFStream;
  }
});

// node_modules/pdf-lib/cjs/core/objects/PDFRawStream.js
var require_PDFRawStream = __commonJS({
  "node_modules/pdf-lib/cjs/core/objects/PDFRawStream.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFStream_1 = tslib_1.__importDefault(require_PDFStream());
    var utils_1 = require_utils2();
    var PDFRawStream = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFRawStream2, _super);
        function PDFRawStream2(dict, contents) {
          var _this = _super.call(this, dict) || this;
          _this.contents = contents;
          return _this;
        }
        PDFRawStream2.prototype.asUint8Array = function() {
          return this.contents.slice();
        };
        PDFRawStream2.prototype.clone = function(context) {
          return PDFRawStream2.of(this.dict.clone(context), this.contents.slice());
        };
        PDFRawStream2.prototype.getContentsString = function() {
          return utils_1.arrayAsString(this.contents);
        };
        PDFRawStream2.prototype.getContents = function() {
          return this.contents;
        };
        PDFRawStream2.prototype.getContentsSize = function() {
          return this.contents.length;
        };
        PDFRawStream2.of = function(dict, contents) {
          return new PDFRawStream2(dict, contents);
        };
        return PDFRawStream2;
      }(PDFStream_1.default)
    );
    exports.default = PDFRawStream;
  }
});

// node_modules/pdf-lib/cjs/core/objects/PDFRef.js
var require_PDFRef = __commonJS({
  "node_modules/pdf-lib/cjs/core/objects/PDFRef.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var errors_1 = require_errors2();
    var PDFObject_1 = tslib_1.__importDefault(require_PDFObject());
    var utils_1 = require_utils2();
    var ENFORCER = {};
    var pool = /* @__PURE__ */ new Map();
    var PDFRef = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFRef2, _super);
        function PDFRef2(enforcer, objectNumber, generationNumber) {
          var _this = this;
          if (enforcer !== ENFORCER)
            throw new errors_1.PrivateConstructorError("PDFRef");
          _this = _super.call(this) || this;
          _this.objectNumber = objectNumber;
          _this.generationNumber = generationNumber;
          _this.tag = objectNumber + " " + generationNumber + " R";
          return _this;
        }
        PDFRef2.prototype.clone = function() {
          return this;
        };
        PDFRef2.prototype.toString = function() {
          return this.tag;
        };
        PDFRef2.prototype.sizeInBytes = function() {
          return this.tag.length;
        };
        PDFRef2.prototype.copyBytesInto = function(buffer, offset) {
          offset += utils_1.copyStringIntoBuffer(this.tag, buffer, offset);
          return this.tag.length;
        };
        PDFRef2.of = function(objectNumber, generationNumber) {
          if (generationNumber === void 0) {
            generationNumber = 0;
          }
          var tag = objectNumber + " " + generationNumber + " R";
          var instance = pool.get(tag);
          if (!instance) {
            instance = new PDFRef2(ENFORCER, objectNumber, generationNumber);
            pool.set(tag, instance);
          }
          return instance;
        };
        return PDFRef2;
      }(PDFObject_1.default)
    );
    exports.default = PDFRef;
  }
});

// node_modules/pdf-lib/cjs/core/operators/PDFOperator.js
var require_PDFOperator = __commonJS({
  "node_modules/pdf-lib/cjs/core/operators/PDFOperator.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFObject_1 = tslib_1.__importDefault(require_PDFObject());
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var utils_1 = require_utils2();
    var PDFOperator = (
      /** @class */
      function() {
        function PDFOperator2(name, args) {
          this.name = name;
          this.args = args || [];
        }
        PDFOperator2.prototype.clone = function(context) {
          var args = new Array(this.args.length);
          for (var idx = 0, len = args.length; idx < len; idx++) {
            var arg = this.args[idx];
            args[idx] = arg instanceof PDFObject_1.default ? arg.clone(context) : arg;
          }
          return PDFOperator2.of(this.name, args);
        };
        PDFOperator2.prototype.toString = function() {
          var value = "";
          for (var idx = 0, len = this.args.length; idx < len; idx++) {
            value += String(this.args[idx]) + " ";
          }
          value += this.name;
          return value;
        };
        PDFOperator2.prototype.sizeInBytes = function() {
          var size = 0;
          for (var idx = 0, len = this.args.length; idx < len; idx++) {
            var arg = this.args[idx];
            size += (arg instanceof PDFObject_1.default ? arg.sizeInBytes() : arg.length) + 1;
          }
          size += this.name.length;
          return size;
        };
        PDFOperator2.prototype.copyBytesInto = function(buffer, offset) {
          var initialOffset = offset;
          for (var idx = 0, len = this.args.length; idx < len; idx++) {
            var arg = this.args[idx];
            if (arg instanceof PDFObject_1.default) {
              offset += arg.copyBytesInto(buffer, offset);
            } else {
              offset += utils_1.copyStringIntoBuffer(arg, buffer, offset);
            }
            buffer[offset++] = CharCodes_1.default.Space;
          }
          offset += utils_1.copyStringIntoBuffer(this.name, buffer, offset);
          return offset - initialOffset;
        };
        PDFOperator2.of = function(name, args) {
          return new PDFOperator2(name, args);
        };
        return PDFOperator2;
      }()
    );
    exports.default = PDFOperator;
  }
});

// node_modules/pdf-lib/cjs/core/operators/PDFOperatorNames.js
var require_PDFOperatorNames = __commonJS({
  "node_modules/pdf-lib/cjs/core/operators/PDFOperatorNames.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var PDFOperatorNames;
    (function(PDFOperatorNames2) {
      PDFOperatorNames2["NonStrokingColor"] = "sc";
      PDFOperatorNames2["NonStrokingColorN"] = "scn";
      PDFOperatorNames2["NonStrokingColorRgb"] = "rg";
      PDFOperatorNames2["NonStrokingColorGray"] = "g";
      PDFOperatorNames2["NonStrokingColorCmyk"] = "k";
      PDFOperatorNames2["NonStrokingColorspace"] = "cs";
      PDFOperatorNames2["StrokingColor"] = "SC";
      PDFOperatorNames2["StrokingColorN"] = "SCN";
      PDFOperatorNames2["StrokingColorRgb"] = "RG";
      PDFOperatorNames2["StrokingColorGray"] = "G";
      PDFOperatorNames2["StrokingColorCmyk"] = "K";
      PDFOperatorNames2["StrokingColorspace"] = "CS";
      PDFOperatorNames2["BeginMarkedContentSequence"] = "BDC";
      PDFOperatorNames2["BeginMarkedContent"] = "BMC";
      PDFOperatorNames2["EndMarkedContent"] = "EMC";
      PDFOperatorNames2["MarkedContentPointWithProps"] = "DP";
      PDFOperatorNames2["MarkedContentPoint"] = "MP";
      PDFOperatorNames2["DrawObject"] = "Do";
      PDFOperatorNames2["ConcatTransformationMatrix"] = "cm";
      PDFOperatorNames2["PopGraphicsState"] = "Q";
      PDFOperatorNames2["PushGraphicsState"] = "q";
      PDFOperatorNames2["SetFlatness"] = "i";
      PDFOperatorNames2["SetGraphicsStateParams"] = "gs";
      PDFOperatorNames2["SetLineCapStyle"] = "J";
      PDFOperatorNames2["SetLineDashPattern"] = "d";
      PDFOperatorNames2["SetLineJoinStyle"] = "j";
      PDFOperatorNames2["SetLineMiterLimit"] = "M";
      PDFOperatorNames2["SetLineWidth"] = "w";
      PDFOperatorNames2["SetTextMatrix"] = "Tm";
      PDFOperatorNames2["SetRenderingIntent"] = "ri";
      PDFOperatorNames2["AppendRectangle"] = "re";
      PDFOperatorNames2["BeginInlineImage"] = "BI";
      PDFOperatorNames2["BeginInlineImageData"] = "ID";
      PDFOperatorNames2["EndInlineImage"] = "EI";
      PDFOperatorNames2["ClipEvenOdd"] = "W*";
      PDFOperatorNames2["ClipNonZero"] = "W";
      PDFOperatorNames2["CloseAndStroke"] = "s";
      PDFOperatorNames2["CloseFillEvenOddAndStroke"] = "b*";
      PDFOperatorNames2["CloseFillNonZeroAndStroke"] = "b";
      PDFOperatorNames2["ClosePath"] = "h";
      PDFOperatorNames2["AppendBezierCurve"] = "c";
      PDFOperatorNames2["CurveToReplicateFinalPoint"] = "y";
      PDFOperatorNames2["CurveToReplicateInitialPoint"] = "v";
      PDFOperatorNames2["EndPath"] = "n";
      PDFOperatorNames2["FillEvenOddAndStroke"] = "B*";
      PDFOperatorNames2["FillEvenOdd"] = "f*";
      PDFOperatorNames2["FillNonZeroAndStroke"] = "B";
      PDFOperatorNames2["FillNonZero"] = "f";
      PDFOperatorNames2["LegacyFillNonZero"] = "F";
      PDFOperatorNames2["LineTo"] = "l";
      PDFOperatorNames2["MoveTo"] = "m";
      PDFOperatorNames2["ShadingFill"] = "sh";
      PDFOperatorNames2["StrokePath"] = "S";
      PDFOperatorNames2["BeginText"] = "BT";
      PDFOperatorNames2["EndText"] = "ET";
      PDFOperatorNames2["MoveText"] = "Td";
      PDFOperatorNames2["MoveTextSetLeading"] = "TD";
      PDFOperatorNames2["NextLine"] = "T*";
      PDFOperatorNames2["SetCharacterSpacing"] = "Tc";
      PDFOperatorNames2["SetFontAndSize"] = "Tf";
      PDFOperatorNames2["SetTextHorizontalScaling"] = "Tz";
      PDFOperatorNames2["SetTextLineHeight"] = "TL";
      PDFOperatorNames2["SetTextRenderingMode"] = "Tr";
      PDFOperatorNames2["SetTextRise"] = "Ts";
      PDFOperatorNames2["SetWordSpacing"] = "Tw";
      PDFOperatorNames2["ShowText"] = "Tj";
      PDFOperatorNames2["ShowTextAdjusted"] = "TJ";
      PDFOperatorNames2["ShowTextLine"] = "'";
      PDFOperatorNames2["ShowTextLineAndSpace"] = '"';
      PDFOperatorNames2["Type3D0"] = "d0";
      PDFOperatorNames2["Type3D1"] = "d1";
      PDFOperatorNames2["BeginCompatibilitySection"] = "BX";
      PDFOperatorNames2["EndCompatibilitySection"] = "EX";
    })(PDFOperatorNames || (PDFOperatorNames = {}));
    exports.default = PDFOperatorNames;
  }
});

// node_modules/pdf-lib/cjs/core/structures/PDFFlateStream.js
var require_PDFFlateStream = __commonJS({
  "node_modules/pdf-lib/cjs/core/structures/PDFFlateStream.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var pako_1 = tslib_1.__importDefault(require_pako());
    var errors_1 = require_errors2();
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFStream_1 = tslib_1.__importDefault(require_PDFStream());
    var utils_1 = require_utils2();
    var PDFFlateStream = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFFlateStream2, _super);
        function PDFFlateStream2(dict, encode) {
          var _this = _super.call(this, dict) || this;
          _this.computeContents = function() {
            var unencodedContents = _this.getUnencodedContents();
            return _this.encode ? pako_1.default.deflate(unencodedContents) : unencodedContents;
          };
          _this.encode = encode;
          if (encode)
            dict.set(PDFName_1.default.of("Filter"), PDFName_1.default.of("FlateDecode"));
          _this.contentsCache = utils_1.Cache.populatedBy(_this.computeContents);
          return _this;
        }
        PDFFlateStream2.prototype.getContents = function() {
          return this.contentsCache.access();
        };
        PDFFlateStream2.prototype.getContentsSize = function() {
          return this.contentsCache.access().length;
        };
        PDFFlateStream2.prototype.getUnencodedContents = function() {
          throw new errors_1.MethodNotImplementedError(this.constructor.name, "getUnencodedContents");
        };
        return PDFFlateStream2;
      }(PDFStream_1.default)
    );
    exports.default = PDFFlateStream;
  }
});

// node_modules/pdf-lib/cjs/core/structures/PDFContentStream.js
var require_PDFContentStream = __commonJS({
  "node_modules/pdf-lib/cjs/core/structures/PDFContentStream.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFFlateStream_1 = tslib_1.__importDefault(require_PDFFlateStream());
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var PDFContentStream = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFContentStream2, _super);
        function PDFContentStream2(dict, operators, encode) {
          if (encode === void 0) {
            encode = true;
          }
          var _this = _super.call(this, dict, encode) || this;
          _this.operators = operators;
          return _this;
        }
        PDFContentStream2.prototype.push = function() {
          var _a;
          var operators = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            operators[_i] = arguments[_i];
          }
          (_a = this.operators).push.apply(_a, operators);
        };
        PDFContentStream2.prototype.clone = function(context) {
          var operators = new Array(this.operators.length);
          for (var idx = 0, len = this.operators.length; idx < len; idx++) {
            operators[idx] = this.operators[idx].clone(context);
          }
          var _a = this, dict = _a.dict, encode = _a.encode;
          return PDFContentStream2.of(dict.clone(context), operators, encode);
        };
        PDFContentStream2.prototype.getContentsString = function() {
          var value = "";
          for (var idx = 0, len = this.operators.length; idx < len; idx++) {
            value += this.operators[idx] + "\n";
          }
          return value;
        };
        PDFContentStream2.prototype.getUnencodedContents = function() {
          var buffer = new Uint8Array(this.getUnencodedContentsSize());
          var offset = 0;
          for (var idx = 0, len = this.operators.length; idx < len; idx++) {
            offset += this.operators[idx].copyBytesInto(buffer, offset);
            buffer[offset++] = CharCodes_1.default.Newline;
          }
          return buffer;
        };
        PDFContentStream2.prototype.getUnencodedContentsSize = function() {
          var size = 0;
          for (var idx = 0, len = this.operators.length; idx < len; idx++) {
            size += this.operators[idx].sizeInBytes() + 1;
          }
          return size;
        };
        PDFContentStream2.of = function(dict, operators, encode) {
          if (encode === void 0) {
            encode = true;
          }
          return new PDFContentStream2(dict, operators, encode);
        };
        return PDFContentStream2;
      }(PDFFlateStream_1.default)
    );
    exports.default = PDFContentStream;
  }
});

// node_modules/pdf-lib/cjs/utils/rng.js
var require_rng = __commonJS({
  "node_modules/pdf-lib/cjs/utils/rng.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SimpleRNG = void 0;
    var SimpleRNG = (
      /** @class */
      function() {
        function SimpleRNG2(seed) {
          this.seed = seed;
        }
        SimpleRNG2.prototype.nextInt = function() {
          var x = Math.sin(this.seed++) * 1e4;
          return x - Math.floor(x);
        };
        SimpleRNG2.withSeed = function(seed) {
          return new SimpleRNG2(seed);
        };
        return SimpleRNG2;
      }()
    );
    exports.SimpleRNG = SimpleRNG;
  }
});

// node_modules/pdf-lib/cjs/core/PDFContext.js
var require_PDFContext = __commonJS({
  "node_modules/pdf-lib/cjs/core/PDFContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var pako_1 = tslib_1.__importDefault(require_pako());
    var PDFHeader_1 = tslib_1.__importDefault(require_PDFHeader());
    var errors_1 = require_errors2();
    var PDFArray_1 = tslib_1.__importDefault(require_PDFArray());
    var PDFBool_1 = tslib_1.__importDefault(require_PDFBool());
    var PDFDict_1 = tslib_1.__importDefault(require_PDFDict());
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFNull_1 = tslib_1.__importDefault(require_PDFNull());
    var PDFNumber_1 = tslib_1.__importDefault(require_PDFNumber());
    var PDFObject_1 = tslib_1.__importDefault(require_PDFObject());
    var PDFRawStream_1 = tslib_1.__importDefault(require_PDFRawStream());
    var PDFRef_1 = tslib_1.__importDefault(require_PDFRef());
    var PDFOperator_1 = tslib_1.__importDefault(require_PDFOperator());
    var PDFOperatorNames_1 = tslib_1.__importDefault(require_PDFOperatorNames());
    var PDFContentStream_1 = tslib_1.__importDefault(require_PDFContentStream());
    var utils_1 = require_utils2();
    var rng_1 = require_rng();
    var byAscendingObjectNumber = function(_a, _b) {
      var a = _a[0];
      var b = _b[0];
      return a.objectNumber - b.objectNumber;
    };
    var PDFContext = (
      /** @class */
      function() {
        function PDFContext2() {
          this.largestObjectNumber = 0;
          this.header = PDFHeader_1.default.forVersion(1, 7);
          this.trailerInfo = {};
          this.indirectObjects = /* @__PURE__ */ new Map();
          this.rng = rng_1.SimpleRNG.withSeed(1);
        }
        PDFContext2.prototype.assign = function(ref, object) {
          this.indirectObjects.set(ref, object);
          if (ref.objectNumber > this.largestObjectNumber) {
            this.largestObjectNumber = ref.objectNumber;
          }
        };
        PDFContext2.prototype.nextRef = function() {
          this.largestObjectNumber += 1;
          return PDFRef_1.default.of(this.largestObjectNumber);
        };
        PDFContext2.prototype.register = function(object) {
          var ref = this.nextRef();
          this.assign(ref, object);
          return ref;
        };
        PDFContext2.prototype.delete = function(ref) {
          return this.indirectObjects.delete(ref);
        };
        PDFContext2.prototype.lookupMaybe = function(ref) {
          var types = [];
          for (var _i = 1; _i < arguments.length; _i++) {
            types[_i - 1] = arguments[_i];
          }
          var preservePDFNull = types.includes(PDFNull_1.default);
          var result = ref instanceof PDFRef_1.default ? this.indirectObjects.get(ref) : ref;
          if (!result || result === PDFNull_1.default && !preservePDFNull)
            return void 0;
          for (var idx = 0, len = types.length; idx < len; idx++) {
            var type = types[idx];
            if (type === PDFNull_1.default) {
              if (result === PDFNull_1.default)
                return result;
            } else {
              if (result instanceof type)
                return result;
            }
          }
          throw new errors_1.UnexpectedObjectTypeError(types, result);
        };
        PDFContext2.prototype.lookup = function(ref) {
          var types = [];
          for (var _i = 1; _i < arguments.length; _i++) {
            types[_i - 1] = arguments[_i];
          }
          var result = ref instanceof PDFRef_1.default ? this.indirectObjects.get(ref) : ref;
          if (types.length === 0)
            return result;
          for (var idx = 0, len = types.length; idx < len; idx++) {
            var type = types[idx];
            if (type === PDFNull_1.default) {
              if (result === PDFNull_1.default)
                return result;
            } else {
              if (result instanceof type)
                return result;
            }
          }
          throw new errors_1.UnexpectedObjectTypeError(types, result);
        };
        PDFContext2.prototype.getObjectRef = function(pdfObject) {
          var entries = Array.from(this.indirectObjects.entries());
          for (var idx = 0, len = entries.length; idx < len; idx++) {
            var _a = entries[idx], ref = _a[0], object = _a[1];
            if (object === pdfObject) {
              return ref;
            }
          }
          return void 0;
        };
        PDFContext2.prototype.enumerateIndirectObjects = function() {
          return Array.from(this.indirectObjects.entries()).sort(byAscendingObjectNumber);
        };
        PDFContext2.prototype.obj = function(literal) {
          if (literal instanceof PDFObject_1.default) {
            return literal;
          } else if (literal === null || literal === void 0) {
            return PDFNull_1.default;
          } else if (typeof literal === "string") {
            return PDFName_1.default.of(literal);
          } else if (typeof literal === "number") {
            return PDFNumber_1.default.of(literal);
          } else if (typeof literal === "boolean") {
            return literal ? PDFBool_1.default.True : PDFBool_1.default.False;
          } else if (Array.isArray(literal)) {
            var array = PDFArray_1.default.withContext(this);
            for (var idx = 0, len = literal.length; idx < len; idx++) {
              array.push(this.obj(literal[idx]));
            }
            return array;
          } else {
            var dict = PDFDict_1.default.withContext(this);
            var keys = Object.keys(literal);
            for (var idx = 0, len = keys.length; idx < len; idx++) {
              var key = keys[idx];
              var value = literal[key];
              if (value !== void 0)
                dict.set(PDFName_1.default.of(key), this.obj(value));
            }
            return dict;
          }
        };
        PDFContext2.prototype.stream = function(contents, dict) {
          if (dict === void 0) {
            dict = {};
          }
          return PDFRawStream_1.default.of(this.obj(dict), utils_1.typedArrayFor(contents));
        };
        PDFContext2.prototype.flateStream = function(contents, dict) {
          if (dict === void 0) {
            dict = {};
          }
          return this.stream(pako_1.default.deflate(utils_1.typedArrayFor(contents)), tslib_1.__assign(tslib_1.__assign({}, dict), { Filter: "FlateDecode" }));
        };
        PDFContext2.prototype.contentStream = function(operators, dict) {
          if (dict === void 0) {
            dict = {};
          }
          return PDFContentStream_1.default.of(this.obj(dict), operators);
        };
        PDFContext2.prototype.formXObject = function(operators, dict) {
          if (dict === void 0) {
            dict = {};
          }
          return this.contentStream(operators, tslib_1.__assign(tslib_1.__assign({ BBox: this.obj([0, 0, 0, 0]), Matrix: this.obj([1, 0, 0, 1, 0, 0]) }, dict), { Type: "XObject", Subtype: "Form" }));
        };
        PDFContext2.prototype.getPushGraphicsStateContentStream = function() {
          if (this.pushGraphicsStateContentStreamRef) {
            return this.pushGraphicsStateContentStreamRef;
          }
          var dict = this.obj({});
          var op = PDFOperator_1.default.of(PDFOperatorNames_1.default.PushGraphicsState);
          var stream = PDFContentStream_1.default.of(dict, [op]);
          this.pushGraphicsStateContentStreamRef = this.register(stream);
          return this.pushGraphicsStateContentStreamRef;
        };
        PDFContext2.prototype.getPopGraphicsStateContentStream = function() {
          if (this.popGraphicsStateContentStreamRef) {
            return this.popGraphicsStateContentStreamRef;
          }
          var dict = this.obj({});
          var op = PDFOperator_1.default.of(PDFOperatorNames_1.default.PopGraphicsState);
          var stream = PDFContentStream_1.default.of(dict, [op]);
          this.popGraphicsStateContentStreamRef = this.register(stream);
          return this.popGraphicsStateContentStreamRef;
        };
        PDFContext2.prototype.addRandomSuffix = function(prefix, suffixLength) {
          if (suffixLength === void 0) {
            suffixLength = 4;
          }
          return prefix + "-" + Math.floor(this.rng.nextInt() * Math.pow(10, suffixLength));
        };
        PDFContext2.create = function() {
          return new PDFContext2();
        };
        return PDFContext2;
      }()
    );
    exports.default = PDFContext;
  }
});

// node_modules/pdf-lib/cjs/core/structures/PDFPageLeaf.js
var require_PDFPageLeaf = __commonJS({
  "node_modules/pdf-lib/cjs/core/structures/PDFPageLeaf.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFArray_1 = tslib_1.__importDefault(require_PDFArray());
    var PDFDict_1 = tslib_1.__importDefault(require_PDFDict());
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFNumber_1 = tslib_1.__importDefault(require_PDFNumber());
    var PDFStream_1 = tslib_1.__importDefault(require_PDFStream());
    var PDFPageLeaf = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFPageLeaf2, _super);
        function PDFPageLeaf2(map, context, autoNormalizeCTM) {
          if (autoNormalizeCTM === void 0) {
            autoNormalizeCTM = true;
          }
          var _this = _super.call(this, map, context) || this;
          _this.normalized = false;
          _this.autoNormalizeCTM = autoNormalizeCTM;
          return _this;
        }
        PDFPageLeaf2.prototype.clone = function(context) {
          var clone = PDFPageLeaf2.fromMapWithContext(/* @__PURE__ */ new Map(), context || this.context, this.autoNormalizeCTM);
          var entries = this.entries();
          for (var idx = 0, len = entries.length; idx < len; idx++) {
            var _a = entries[idx], key = _a[0], value = _a[1];
            clone.set(key, value);
          }
          return clone;
        };
        PDFPageLeaf2.prototype.Parent = function() {
          return this.lookupMaybe(PDFName_1.default.Parent, PDFDict_1.default);
        };
        PDFPageLeaf2.prototype.Contents = function() {
          return this.lookup(PDFName_1.default.of("Contents"));
        };
        PDFPageLeaf2.prototype.Annots = function() {
          return this.lookupMaybe(PDFName_1.default.Annots, PDFArray_1.default);
        };
        PDFPageLeaf2.prototype.BleedBox = function() {
          return this.lookupMaybe(PDFName_1.default.BleedBox, PDFArray_1.default);
        };
        PDFPageLeaf2.prototype.TrimBox = function() {
          return this.lookupMaybe(PDFName_1.default.TrimBox, PDFArray_1.default);
        };
        PDFPageLeaf2.prototype.ArtBox = function() {
          return this.lookupMaybe(PDFName_1.default.ArtBox, PDFArray_1.default);
        };
        PDFPageLeaf2.prototype.Resources = function() {
          var dictOrRef = this.getInheritableAttribute(PDFName_1.default.Resources);
          return this.context.lookupMaybe(dictOrRef, PDFDict_1.default);
        };
        PDFPageLeaf2.prototype.MediaBox = function() {
          var arrayOrRef = this.getInheritableAttribute(PDFName_1.default.MediaBox);
          return this.context.lookup(arrayOrRef, PDFArray_1.default);
        };
        PDFPageLeaf2.prototype.CropBox = function() {
          var arrayOrRef = this.getInheritableAttribute(PDFName_1.default.CropBox);
          return this.context.lookupMaybe(arrayOrRef, PDFArray_1.default);
        };
        PDFPageLeaf2.prototype.Rotate = function() {
          var numberOrRef = this.getInheritableAttribute(PDFName_1.default.Rotate);
          return this.context.lookupMaybe(numberOrRef, PDFNumber_1.default);
        };
        PDFPageLeaf2.prototype.getInheritableAttribute = function(name) {
          var attribute;
          this.ascend(function(node) {
            if (!attribute)
              attribute = node.get(name);
          });
          return attribute;
        };
        PDFPageLeaf2.prototype.setParent = function(parentRef) {
          this.set(PDFName_1.default.Parent, parentRef);
        };
        PDFPageLeaf2.prototype.addContentStream = function(contentStreamRef) {
          var Contents = this.normalizedEntries().Contents || this.context.obj([]);
          this.set(PDFName_1.default.Contents, Contents);
          Contents.push(contentStreamRef);
        };
        PDFPageLeaf2.prototype.wrapContentStreams = function(startStream, endStream) {
          var Contents = this.Contents();
          if (Contents instanceof PDFArray_1.default) {
            Contents.insert(0, startStream);
            Contents.push(endStream);
            return true;
          }
          return false;
        };
        PDFPageLeaf2.prototype.addAnnot = function(annotRef) {
          var Annots = this.normalizedEntries().Annots;
          Annots.push(annotRef);
        };
        PDFPageLeaf2.prototype.removeAnnot = function(annotRef) {
          var Annots = this.normalizedEntries().Annots;
          var index = Annots.indexOf(annotRef);
          if (index !== void 0) {
            Annots.remove(index);
          }
        };
        PDFPageLeaf2.prototype.setFontDictionary = function(name, fontDictRef) {
          var Font = this.normalizedEntries().Font;
          Font.set(name, fontDictRef);
        };
        PDFPageLeaf2.prototype.newFontDictionaryKey = function(tag) {
          var Font = this.normalizedEntries().Font;
          return Font.uniqueKey(tag);
        };
        PDFPageLeaf2.prototype.newFontDictionary = function(tag, fontDictRef) {
          var key = this.newFontDictionaryKey(tag);
          this.setFontDictionary(key, fontDictRef);
          return key;
        };
        PDFPageLeaf2.prototype.setXObject = function(name, xObjectRef) {
          var XObject = this.normalizedEntries().XObject;
          XObject.set(name, xObjectRef);
        };
        PDFPageLeaf2.prototype.newXObjectKey = function(tag) {
          var XObject = this.normalizedEntries().XObject;
          return XObject.uniqueKey(tag);
        };
        PDFPageLeaf2.prototype.newXObject = function(tag, xObjectRef) {
          var key = this.newXObjectKey(tag);
          this.setXObject(key, xObjectRef);
          return key;
        };
        PDFPageLeaf2.prototype.setExtGState = function(name, extGStateRef) {
          var ExtGState = this.normalizedEntries().ExtGState;
          ExtGState.set(name, extGStateRef);
        };
        PDFPageLeaf2.prototype.newExtGStateKey = function(tag) {
          var ExtGState = this.normalizedEntries().ExtGState;
          return ExtGState.uniqueKey(tag);
        };
        PDFPageLeaf2.prototype.newExtGState = function(tag, extGStateRef) {
          var key = this.newExtGStateKey(tag);
          this.setExtGState(key, extGStateRef);
          return key;
        };
        PDFPageLeaf2.prototype.ascend = function(visitor) {
          visitor(this);
          var Parent = this.Parent();
          if (Parent)
            Parent.ascend(visitor);
        };
        PDFPageLeaf2.prototype.normalize = function() {
          if (this.normalized)
            return;
          var context = this.context;
          var contentsRef = this.get(PDFName_1.default.Contents);
          var contents = this.context.lookup(contentsRef);
          if (contents instanceof PDFStream_1.default) {
            this.set(PDFName_1.default.Contents, context.obj([contentsRef]));
          }
          if (this.autoNormalizeCTM) {
            this.wrapContentStreams(this.context.getPushGraphicsStateContentStream(), this.context.getPopGraphicsStateContentStream());
          }
          var dictOrRef = this.getInheritableAttribute(PDFName_1.default.Resources);
          var Resources = context.lookupMaybe(dictOrRef, PDFDict_1.default) || context.obj({});
          this.set(PDFName_1.default.Resources, Resources);
          var Font = Resources.lookupMaybe(PDFName_1.default.Font, PDFDict_1.default) || context.obj({});
          Resources.set(PDFName_1.default.Font, Font);
          var XObject = Resources.lookupMaybe(PDFName_1.default.XObject, PDFDict_1.default) || context.obj({});
          Resources.set(PDFName_1.default.XObject, XObject);
          var ExtGState = Resources.lookupMaybe(PDFName_1.default.ExtGState, PDFDict_1.default) || context.obj({});
          Resources.set(PDFName_1.default.ExtGState, ExtGState);
          var Annots = this.Annots() || context.obj([]);
          this.set(PDFName_1.default.Annots, Annots);
          this.normalized = true;
        };
        PDFPageLeaf2.prototype.normalizedEntries = function() {
          this.normalize();
          var Annots = this.Annots();
          var Resources = this.Resources();
          var Contents = this.Contents();
          return {
            Annots,
            Resources,
            Contents,
            Font: Resources.lookup(PDFName_1.default.Font, PDFDict_1.default),
            XObject: Resources.lookup(PDFName_1.default.XObject, PDFDict_1.default),
            ExtGState: Resources.lookup(PDFName_1.default.ExtGState, PDFDict_1.default)
          };
        };
        PDFPageLeaf2.InheritableEntries = [
          "Resources",
          "MediaBox",
          "CropBox",
          "Rotate"
        ];
        PDFPageLeaf2.withContextAndParent = function(context, parent) {
          var dict = /* @__PURE__ */ new Map();
          dict.set(PDFName_1.default.Type, PDFName_1.default.Page);
          dict.set(PDFName_1.default.Parent, parent);
          dict.set(PDFName_1.default.Resources, context.obj({}));
          dict.set(PDFName_1.default.MediaBox, context.obj([0, 0, 612, 792]));
          return new PDFPageLeaf2(dict, context, false);
        };
        PDFPageLeaf2.fromMapWithContext = function(map, context, autoNormalizeCTM) {
          if (autoNormalizeCTM === void 0) {
            autoNormalizeCTM = true;
          }
          return new PDFPageLeaf2(map, context, autoNormalizeCTM);
        };
        return PDFPageLeaf2;
      }(PDFDict_1.default)
    );
    exports.default = PDFPageLeaf;
  }
});

// node_modules/pdf-lib/cjs/core/PDFObjectCopier.js
var require_PDFObjectCopier = __commonJS({
  "node_modules/pdf-lib/cjs/core/PDFObjectCopier.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFArray_1 = tslib_1.__importDefault(require_PDFArray());
    var PDFDict_1 = tslib_1.__importDefault(require_PDFDict());
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFRef_1 = tslib_1.__importDefault(require_PDFRef());
    var PDFStream_1 = tslib_1.__importDefault(require_PDFStream());
    var PDFPageLeaf_1 = tslib_1.__importDefault(require_PDFPageLeaf());
    var PDFObjectCopier = (
      /** @class */
      function() {
        function PDFObjectCopier2(src, dest) {
          var _this = this;
          this.traversedObjects = /* @__PURE__ */ new Map();
          this.copy = function(object) {
            return object instanceof PDFPageLeaf_1.default ? _this.copyPDFPage(object) : object instanceof PDFDict_1.default ? _this.copyPDFDict(object) : object instanceof PDFArray_1.default ? _this.copyPDFArray(object) : object instanceof PDFStream_1.default ? _this.copyPDFStream(object) : object instanceof PDFRef_1.default ? _this.copyPDFIndirectObject(object) : object.clone();
          };
          this.copyPDFPage = function(originalPage) {
            var clonedPage = originalPage.clone();
            var InheritableEntries = PDFPageLeaf_1.default.InheritableEntries;
            for (var idx = 0, len = InheritableEntries.length; idx < len; idx++) {
              var key = PDFName_1.default.of(InheritableEntries[idx]);
              var value = clonedPage.getInheritableAttribute(key);
              if (!clonedPage.get(key) && value)
                clonedPage.set(key, value);
            }
            clonedPage.delete(PDFName_1.default.of("Parent"));
            return _this.copyPDFDict(clonedPage);
          };
          this.copyPDFDict = function(originalDict) {
            if (_this.traversedObjects.has(originalDict)) {
              return _this.traversedObjects.get(originalDict);
            }
            var clonedDict = originalDict.clone(_this.dest);
            _this.traversedObjects.set(originalDict, clonedDict);
            var entries = originalDict.entries();
            for (var idx = 0, len = entries.length; idx < len; idx++) {
              var _a = entries[idx], key = _a[0], value = _a[1];
              clonedDict.set(key, _this.copy(value));
            }
            return clonedDict;
          };
          this.copyPDFArray = function(originalArray) {
            if (_this.traversedObjects.has(originalArray)) {
              return _this.traversedObjects.get(originalArray);
            }
            var clonedArray = originalArray.clone(_this.dest);
            _this.traversedObjects.set(originalArray, clonedArray);
            for (var idx = 0, len = originalArray.size(); idx < len; idx++) {
              var value = originalArray.get(idx);
              clonedArray.set(idx, _this.copy(value));
            }
            return clonedArray;
          };
          this.copyPDFStream = function(originalStream) {
            if (_this.traversedObjects.has(originalStream)) {
              return _this.traversedObjects.get(originalStream);
            }
            var clonedStream = originalStream.clone(_this.dest);
            _this.traversedObjects.set(originalStream, clonedStream);
            var entries = originalStream.dict.entries();
            for (var idx = 0, len = entries.length; idx < len; idx++) {
              var _a = entries[idx], key = _a[0], value = _a[1];
              clonedStream.dict.set(key, _this.copy(value));
            }
            return clonedStream;
          };
          this.copyPDFIndirectObject = function(ref) {
            var alreadyMapped = _this.traversedObjects.has(ref);
            if (!alreadyMapped) {
              var newRef = _this.dest.nextRef();
              _this.traversedObjects.set(ref, newRef);
              var dereferencedValue = _this.src.lookup(ref);
              if (dereferencedValue) {
                var cloned = _this.copy(dereferencedValue);
                _this.dest.assign(newRef, cloned);
              }
            }
            return _this.traversedObjects.get(ref);
          };
          this.src = src;
          this.dest = dest;
        }
        PDFObjectCopier2.for = function(src, dest) {
          return new PDFObjectCopier2(src, dest);
        };
        return PDFObjectCopier2;
      }()
    );
    exports.default = PDFObjectCopier;
  }
});

// node_modules/pdf-lib/cjs/core/document/PDFCrossRefSection.js
var require_PDFCrossRefSection = __commonJS({
  "node_modules/pdf-lib/cjs/core/document/PDFCrossRefSection.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFRef_1 = tslib_1.__importDefault(require_PDFRef());
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var utils_1 = require_utils2();
    var PDFCrossRefSection = (
      /** @class */
      function() {
        function PDFCrossRefSection2(firstEntry) {
          this.subsections = firstEntry ? [[firstEntry]] : [];
          this.chunkIdx = 0;
          this.chunkLength = firstEntry ? 1 : 0;
        }
        PDFCrossRefSection2.prototype.addEntry = function(ref, offset) {
          this.append({ ref, offset, deleted: false });
        };
        PDFCrossRefSection2.prototype.addDeletedEntry = function(ref, nextFreeObjectNumber) {
          this.append({ ref, offset: nextFreeObjectNumber, deleted: true });
        };
        PDFCrossRefSection2.prototype.toString = function() {
          var section = "xref\n";
          for (var rangeIdx = 0, rangeLen = this.subsections.length; rangeIdx < rangeLen; rangeIdx++) {
            var range = this.subsections[rangeIdx];
            section += range[0].ref.objectNumber + " " + range.length + "\n";
            for (var entryIdx = 0, entryLen = range.length; entryIdx < entryLen; entryIdx++) {
              var entry = range[entryIdx];
              section += utils_1.padStart(String(entry.offset), 10, "0");
              section += " ";
              section += utils_1.padStart(String(entry.ref.generationNumber), 5, "0");
              section += " ";
              section += entry.deleted ? "f" : "n";
              section += " \n";
            }
          }
          return section;
        };
        PDFCrossRefSection2.prototype.sizeInBytes = function() {
          var size = 5;
          for (var idx = 0, len = this.subsections.length; idx < len; idx++) {
            var subsection = this.subsections[idx];
            var subsectionLength = subsection.length;
            var firstEntry = subsection[0];
            size += 2;
            size += String(firstEntry.ref.objectNumber).length;
            size += String(subsectionLength).length;
            size += 20 * subsectionLength;
          }
          return size;
        };
        PDFCrossRefSection2.prototype.copyBytesInto = function(buffer, offset) {
          var initialOffset = offset;
          buffer[offset++] = CharCodes_1.default.x;
          buffer[offset++] = CharCodes_1.default.r;
          buffer[offset++] = CharCodes_1.default.e;
          buffer[offset++] = CharCodes_1.default.f;
          buffer[offset++] = CharCodes_1.default.Newline;
          offset += this.copySubsectionsIntoBuffer(this.subsections, buffer, offset);
          return offset - initialOffset;
        };
        PDFCrossRefSection2.prototype.copySubsectionsIntoBuffer = function(subsections, buffer, offset) {
          var initialOffset = offset;
          var length = subsections.length;
          for (var idx = 0; idx < length; idx++) {
            var subsection = this.subsections[idx];
            var firstObjectNumber = String(subsection[0].ref.objectNumber);
            offset += utils_1.copyStringIntoBuffer(firstObjectNumber, buffer, offset);
            buffer[offset++] = CharCodes_1.default.Space;
            var rangeLength = String(subsection.length);
            offset += utils_1.copyStringIntoBuffer(rangeLength, buffer, offset);
            buffer[offset++] = CharCodes_1.default.Newline;
            offset += this.copyEntriesIntoBuffer(subsection, buffer, offset);
          }
          return offset - initialOffset;
        };
        PDFCrossRefSection2.prototype.copyEntriesIntoBuffer = function(entries, buffer, offset) {
          var length = entries.length;
          for (var idx = 0; idx < length; idx++) {
            var entry = entries[idx];
            var entryOffset = utils_1.padStart(String(entry.offset), 10, "0");
            offset += utils_1.copyStringIntoBuffer(entryOffset, buffer, offset);
            buffer[offset++] = CharCodes_1.default.Space;
            var entryGen = utils_1.padStart(String(entry.ref.generationNumber), 5, "0");
            offset += utils_1.copyStringIntoBuffer(entryGen, buffer, offset);
            buffer[offset++] = CharCodes_1.default.Space;
            buffer[offset++] = entry.deleted ? CharCodes_1.default.f : CharCodes_1.default.n;
            buffer[offset++] = CharCodes_1.default.Space;
            buffer[offset++] = CharCodes_1.default.Newline;
          }
          return 20 * length;
        };
        PDFCrossRefSection2.prototype.append = function(currEntry) {
          if (this.chunkLength === 0) {
            this.subsections.push([currEntry]);
            this.chunkIdx = 0;
            this.chunkLength = 1;
            return;
          }
          var chunk = this.subsections[this.chunkIdx];
          var prevEntry = chunk[this.chunkLength - 1];
          if (currEntry.ref.objectNumber - prevEntry.ref.objectNumber > 1) {
            this.subsections.push([currEntry]);
            this.chunkIdx += 1;
            this.chunkLength = 1;
          } else {
            chunk.push(currEntry);
            this.chunkLength += 1;
          }
        };
        PDFCrossRefSection2.create = function() {
          return new PDFCrossRefSection2({
            ref: PDFRef_1.default.of(0, 65535),
            offset: 0,
            deleted: true
          });
        };
        PDFCrossRefSection2.createEmpty = function() {
          return new PDFCrossRefSection2();
        };
        return PDFCrossRefSection2;
      }()
    );
    exports.default = PDFCrossRefSection;
  }
});

// node_modules/pdf-lib/cjs/core/document/PDFTrailer.js
var require_PDFTrailer = __commonJS({
  "node_modules/pdf-lib/cjs/core/document/PDFTrailer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var utils_1 = require_utils2();
    var PDFTrailer = (
      /** @class */
      function() {
        function PDFTrailer2(lastXRefOffset) {
          this.lastXRefOffset = String(lastXRefOffset);
        }
        PDFTrailer2.prototype.toString = function() {
          return "startxref\n" + this.lastXRefOffset + "\n%%EOF";
        };
        PDFTrailer2.prototype.sizeInBytes = function() {
          return 16 + this.lastXRefOffset.length;
        };
        PDFTrailer2.prototype.copyBytesInto = function(buffer, offset) {
          var initialOffset = offset;
          buffer[offset++] = CharCodes_1.default.s;
          buffer[offset++] = CharCodes_1.default.t;
          buffer[offset++] = CharCodes_1.default.a;
          buffer[offset++] = CharCodes_1.default.r;
          buffer[offset++] = CharCodes_1.default.t;
          buffer[offset++] = CharCodes_1.default.x;
          buffer[offset++] = CharCodes_1.default.r;
          buffer[offset++] = CharCodes_1.default.e;
          buffer[offset++] = CharCodes_1.default.f;
          buffer[offset++] = CharCodes_1.default.Newline;
          offset += utils_1.copyStringIntoBuffer(this.lastXRefOffset, buffer, offset);
          buffer[offset++] = CharCodes_1.default.Newline;
          buffer[offset++] = CharCodes_1.default.Percent;
          buffer[offset++] = CharCodes_1.default.Percent;
          buffer[offset++] = CharCodes_1.default.E;
          buffer[offset++] = CharCodes_1.default.O;
          buffer[offset++] = CharCodes_1.default.F;
          return offset - initialOffset;
        };
        PDFTrailer2.forLastCrossRefSectionOffset = function(offset) {
          return new PDFTrailer2(offset);
        };
        return PDFTrailer2;
      }()
    );
    exports.default = PDFTrailer;
  }
});

// node_modules/pdf-lib/cjs/core/document/PDFTrailerDict.js
var require_PDFTrailerDict = __commonJS({
  "node_modules/pdf-lib/cjs/core/document/PDFTrailerDict.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var PDFTrailerDict = (
      /** @class */
      function() {
        function PDFTrailerDict2(dict) {
          this.dict = dict;
        }
        PDFTrailerDict2.prototype.toString = function() {
          return "trailer\n" + this.dict.toString();
        };
        PDFTrailerDict2.prototype.sizeInBytes = function() {
          return 8 + this.dict.sizeInBytes();
        };
        PDFTrailerDict2.prototype.copyBytesInto = function(buffer, offset) {
          var initialOffset = offset;
          buffer[offset++] = CharCodes_1.default.t;
          buffer[offset++] = CharCodes_1.default.r;
          buffer[offset++] = CharCodes_1.default.a;
          buffer[offset++] = CharCodes_1.default.i;
          buffer[offset++] = CharCodes_1.default.l;
          buffer[offset++] = CharCodes_1.default.e;
          buffer[offset++] = CharCodes_1.default.r;
          buffer[offset++] = CharCodes_1.default.Newline;
          offset += this.dict.copyBytesInto(buffer, offset);
          return offset - initialOffset;
        };
        PDFTrailerDict2.of = function(dict) {
          return new PDFTrailerDict2(dict);
        };
        return PDFTrailerDict2;
      }()
    );
    exports.default = PDFTrailerDict;
  }
});

// node_modules/pdf-lib/cjs/core/structures/PDFObjectStream.js
var require_PDFObjectStream = __commonJS({
  "node_modules/pdf-lib/cjs/core/structures/PDFObjectStream.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFNumber_1 = tslib_1.__importDefault(require_PDFNumber());
    var PDFFlateStream_1 = tslib_1.__importDefault(require_PDFFlateStream());
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var utils_1 = require_utils2();
    var PDFObjectStream = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFObjectStream2, _super);
        function PDFObjectStream2(context, objects, encode) {
          if (encode === void 0) {
            encode = true;
          }
          var _this = _super.call(this, context.obj({}), encode) || this;
          _this.objects = objects;
          _this.offsets = _this.computeObjectOffsets();
          _this.offsetsString = _this.computeOffsetsString();
          _this.dict.set(PDFName_1.default.of("Type"), PDFName_1.default.of("ObjStm"));
          _this.dict.set(PDFName_1.default.of("N"), PDFNumber_1.default.of(_this.objects.length));
          _this.dict.set(PDFName_1.default.of("First"), PDFNumber_1.default.of(_this.offsetsString.length));
          return _this;
        }
        PDFObjectStream2.prototype.getObjectsCount = function() {
          return this.objects.length;
        };
        PDFObjectStream2.prototype.clone = function(context) {
          return PDFObjectStream2.withContextAndObjects(context || this.dict.context, this.objects.slice(), this.encode);
        };
        PDFObjectStream2.prototype.getContentsString = function() {
          var value = this.offsetsString;
          for (var idx = 0, len = this.objects.length; idx < len; idx++) {
            var _a = this.objects[idx], object = _a[1];
            value += object + "\n";
          }
          return value;
        };
        PDFObjectStream2.prototype.getUnencodedContents = function() {
          var buffer = new Uint8Array(this.getUnencodedContentsSize());
          var offset = utils_1.copyStringIntoBuffer(this.offsetsString, buffer, 0);
          for (var idx = 0, len = this.objects.length; idx < len; idx++) {
            var _a = this.objects[idx], object = _a[1];
            offset += object.copyBytesInto(buffer, offset);
            buffer[offset++] = CharCodes_1.default.Newline;
          }
          return buffer;
        };
        PDFObjectStream2.prototype.getUnencodedContentsSize = function() {
          return this.offsetsString.length + utils_1.last(this.offsets)[1] + utils_1.last(this.objects)[1].sizeInBytes() + 1;
        };
        PDFObjectStream2.prototype.computeOffsetsString = function() {
          var offsetsString = "";
          for (var idx = 0, len = this.offsets.length; idx < len; idx++) {
            var _a = this.offsets[idx], objectNumber = _a[0], offset = _a[1];
            offsetsString += objectNumber + " " + offset + " ";
          }
          return offsetsString;
        };
        PDFObjectStream2.prototype.computeObjectOffsets = function() {
          var offset = 0;
          var offsets = new Array(this.objects.length);
          for (var idx = 0, len = this.objects.length; idx < len; idx++) {
            var _a = this.objects[idx], ref = _a[0], object = _a[1];
            offsets[idx] = [ref.objectNumber, offset];
            offset += object.sizeInBytes() + 1;
          }
          return offsets;
        };
        PDFObjectStream2.withContextAndObjects = function(context, objects, encode) {
          if (encode === void 0) {
            encode = true;
          }
          return new PDFObjectStream2(context, objects, encode);
        };
        return PDFObjectStream2;
      }(PDFFlateStream_1.default)
    );
    exports.default = PDFObjectStream;
  }
});

// node_modules/pdf-lib/cjs/core/writers/PDFWriter.js
var require_PDFWriter = __commonJS({
  "node_modules/pdf-lib/cjs/core/writers/PDFWriter.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFCrossRefSection_1 = tslib_1.__importDefault(require_PDFCrossRefSection());
    var PDFHeader_1 = tslib_1.__importDefault(require_PDFHeader());
    var PDFTrailer_1 = tslib_1.__importDefault(require_PDFTrailer());
    var PDFTrailerDict_1 = tslib_1.__importDefault(require_PDFTrailerDict());
    var PDFObjectStream_1 = tslib_1.__importDefault(require_PDFObjectStream());
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var utils_1 = require_utils2();
    var PDFWriter = (
      /** @class */
      function() {
        function PDFWriter2(context, objectsPerTick) {
          var _this = this;
          this.parsedObjects = 0;
          this.shouldWaitForTick = function(n) {
            _this.parsedObjects += n;
            return _this.parsedObjects % _this.objectsPerTick === 0;
          };
          this.context = context;
          this.objectsPerTick = objectsPerTick;
        }
        PDFWriter2.prototype.serializeToBuffer = function() {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var _a, size, header, indirectObjects, xref, trailerDict, trailer, offset, buffer, idx, len, _b, ref, object, objectNumber, generationNumber, n;
            return tslib_1.__generator(this, function(_c) {
              switch (_c.label) {
                case 0:
                  return [4, this.computeBufferSize()];
                case 1:
                  _a = _c.sent(), size = _a.size, header = _a.header, indirectObjects = _a.indirectObjects, xref = _a.xref, trailerDict = _a.trailerDict, trailer = _a.trailer;
                  offset = 0;
                  buffer = new Uint8Array(size);
                  offset += header.copyBytesInto(buffer, offset);
                  buffer[offset++] = CharCodes_1.default.Newline;
                  buffer[offset++] = CharCodes_1.default.Newline;
                  idx = 0, len = indirectObjects.length;
                  _c.label = 2;
                case 2:
                  if (!(idx < len))
                    return [3, 5];
                  _b = indirectObjects[idx], ref = _b[0], object = _b[1];
                  objectNumber = String(ref.objectNumber);
                  offset += utils_1.copyStringIntoBuffer(objectNumber, buffer, offset);
                  buffer[offset++] = CharCodes_1.default.Space;
                  generationNumber = String(ref.generationNumber);
                  offset += utils_1.copyStringIntoBuffer(generationNumber, buffer, offset);
                  buffer[offset++] = CharCodes_1.default.Space;
                  buffer[offset++] = CharCodes_1.default.o;
                  buffer[offset++] = CharCodes_1.default.b;
                  buffer[offset++] = CharCodes_1.default.j;
                  buffer[offset++] = CharCodes_1.default.Newline;
                  offset += object.copyBytesInto(buffer, offset);
                  buffer[offset++] = CharCodes_1.default.Newline;
                  buffer[offset++] = CharCodes_1.default.e;
                  buffer[offset++] = CharCodes_1.default.n;
                  buffer[offset++] = CharCodes_1.default.d;
                  buffer[offset++] = CharCodes_1.default.o;
                  buffer[offset++] = CharCodes_1.default.b;
                  buffer[offset++] = CharCodes_1.default.j;
                  buffer[offset++] = CharCodes_1.default.Newline;
                  buffer[offset++] = CharCodes_1.default.Newline;
                  n = object instanceof PDFObjectStream_1.default ? object.getObjectsCount() : 1;
                  if (!this.shouldWaitForTick(n))
                    return [3, 4];
                  return [4, utils_1.waitForTick()];
                case 3:
                  _c.sent();
                  _c.label = 4;
                case 4:
                  idx++;
                  return [3, 2];
                case 5:
                  if (xref) {
                    offset += xref.copyBytesInto(buffer, offset);
                    buffer[offset++] = CharCodes_1.default.Newline;
                  }
                  if (trailerDict) {
                    offset += trailerDict.copyBytesInto(buffer, offset);
                    buffer[offset++] = CharCodes_1.default.Newline;
                    buffer[offset++] = CharCodes_1.default.Newline;
                  }
                  offset += trailer.copyBytesInto(buffer, offset);
                  return [2, buffer];
              }
            });
          });
        };
        PDFWriter2.prototype.computeIndirectObjectSize = function(_a) {
          var ref = _a[0], object = _a[1];
          var refSize = ref.sizeInBytes() + 3;
          var objectSize = object.sizeInBytes() + 9;
          return refSize + objectSize;
        };
        PDFWriter2.prototype.createTrailerDict = function() {
          return this.context.obj({
            Size: this.context.largestObjectNumber + 1,
            Root: this.context.trailerInfo.Root,
            Encrypt: this.context.trailerInfo.Encrypt,
            Info: this.context.trailerInfo.Info,
            ID: this.context.trailerInfo.ID
          });
        };
        PDFWriter2.prototype.computeBufferSize = function() {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var header, size, xref, indirectObjects, idx, len, indirectObject, ref, xrefOffset, trailerDict, trailer;
            return tslib_1.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  header = PDFHeader_1.default.forVersion(1, 7);
                  size = header.sizeInBytes() + 2;
                  xref = PDFCrossRefSection_1.default.create();
                  indirectObjects = this.context.enumerateIndirectObjects();
                  idx = 0, len = indirectObjects.length;
                  _a.label = 1;
                case 1:
                  if (!(idx < len))
                    return [3, 4];
                  indirectObject = indirectObjects[idx];
                  ref = indirectObject[0];
                  xref.addEntry(ref, size);
                  size += this.computeIndirectObjectSize(indirectObject);
                  if (!this.shouldWaitForTick(1))
                    return [3, 3];
                  return [4, utils_1.waitForTick()];
                case 2:
                  _a.sent();
                  _a.label = 3;
                case 3:
                  idx++;
                  return [3, 1];
                case 4:
                  xrefOffset = size;
                  size += xref.sizeInBytes() + 1;
                  trailerDict = PDFTrailerDict_1.default.of(this.createTrailerDict());
                  size += trailerDict.sizeInBytes() + 2;
                  trailer = PDFTrailer_1.default.forLastCrossRefSectionOffset(xrefOffset);
                  size += trailer.sizeInBytes();
                  return [2, { size, header, indirectObjects, xref, trailerDict, trailer }];
              }
            });
          });
        };
        PDFWriter2.forContext = function(context, objectsPerTick) {
          return new PDFWriter2(context, objectsPerTick);
        };
        return PDFWriter2;
      }()
    );
    exports.default = PDFWriter;
  }
});

// node_modules/pdf-lib/cjs/core/objects/PDFInvalidObject.js
var require_PDFInvalidObject = __commonJS({
  "node_modules/pdf-lib/cjs/core/objects/PDFInvalidObject.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFObject_1 = tslib_1.__importDefault(require_PDFObject());
    var PDFInvalidObject = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFInvalidObject2, _super);
        function PDFInvalidObject2(data) {
          var _this = _super.call(this) || this;
          _this.data = data;
          return _this;
        }
        PDFInvalidObject2.prototype.clone = function() {
          return PDFInvalidObject2.of(this.data.slice());
        };
        PDFInvalidObject2.prototype.toString = function() {
          return "PDFInvalidObject(" + this.data.length + " bytes)";
        };
        PDFInvalidObject2.prototype.sizeInBytes = function() {
          return this.data.length;
        };
        PDFInvalidObject2.prototype.copyBytesInto = function(buffer, offset) {
          var length = this.data.length;
          for (var idx = 0; idx < length; idx++) {
            buffer[offset++] = this.data[idx];
          }
          return length;
        };
        PDFInvalidObject2.of = function(data) {
          return new PDFInvalidObject2(data);
        };
        return PDFInvalidObject2;
      }(PDFObject_1.default)
    );
    exports.default = PDFInvalidObject;
  }
});

// node_modules/pdf-lib/cjs/core/structures/PDFCrossRefStream.js
var require_PDFCrossRefStream = __commonJS({
  "node_modules/pdf-lib/cjs/core/structures/PDFCrossRefStream.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EntryType = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFRef_1 = tslib_1.__importDefault(require_PDFRef());
    var PDFFlateStream_1 = tslib_1.__importDefault(require_PDFFlateStream());
    var utils_1 = require_utils2();
    var EntryType;
    (function(EntryType2) {
      EntryType2[EntryType2["Deleted"] = 0] = "Deleted";
      EntryType2[EntryType2["Uncompressed"] = 1] = "Uncompressed";
      EntryType2[EntryType2["Compressed"] = 2] = "Compressed";
    })(EntryType = exports.EntryType || (exports.EntryType = {}));
    var PDFCrossRefStream = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFCrossRefStream2, _super);
        function PDFCrossRefStream2(dict, entries, encode) {
          if (encode === void 0) {
            encode = true;
          }
          var _this = _super.call(this, dict, encode) || this;
          _this.computeIndex = function() {
            var subsections = [];
            var subsectionLength = 0;
            for (var idx = 0, len = _this.entries.length; idx < len; idx++) {
              var currEntry = _this.entries[idx];
              var prevEntry = _this.entries[idx - 1];
              if (idx === 0) {
                subsections.push(currEntry.ref.objectNumber);
              } else if (currEntry.ref.objectNumber - prevEntry.ref.objectNumber > 1) {
                subsections.push(subsectionLength);
                subsections.push(currEntry.ref.objectNumber);
                subsectionLength = 0;
              }
              subsectionLength += 1;
            }
            subsections.push(subsectionLength);
            return subsections;
          };
          _this.computeEntryTuples = function() {
            var entryTuples = new Array(_this.entries.length);
            for (var idx = 0, len = _this.entries.length; idx < len; idx++) {
              var entry = _this.entries[idx];
              if (entry.type === EntryType.Deleted) {
                var type = entry.type, nextFreeObjectNumber = entry.nextFreeObjectNumber, ref = entry.ref;
                entryTuples[idx] = [type, nextFreeObjectNumber, ref.generationNumber];
              }
              if (entry.type === EntryType.Uncompressed) {
                var type = entry.type, offset = entry.offset, ref = entry.ref;
                entryTuples[idx] = [type, offset, ref.generationNumber];
              }
              if (entry.type === EntryType.Compressed) {
                var type = entry.type, objectStreamRef = entry.objectStreamRef, index = entry.index;
                entryTuples[idx] = [type, objectStreamRef.objectNumber, index];
              }
            }
            return entryTuples;
          };
          _this.computeMaxEntryByteWidths = function() {
            var entryTuples = _this.entryTuplesCache.access();
            var widths = [0, 0, 0];
            for (var idx = 0, len = entryTuples.length; idx < len; idx++) {
              var _a = entryTuples[idx], first = _a[0], second = _a[1], third = _a[2];
              var firstSize = utils_1.sizeInBytes(first);
              var secondSize = utils_1.sizeInBytes(second);
              var thirdSize = utils_1.sizeInBytes(third);
              if (firstSize > widths[0])
                widths[0] = firstSize;
              if (secondSize > widths[1])
                widths[1] = secondSize;
              if (thirdSize > widths[2])
                widths[2] = thirdSize;
            }
            return widths;
          };
          _this.entries = entries || [];
          _this.entryTuplesCache = utils_1.Cache.populatedBy(_this.computeEntryTuples);
          _this.maxByteWidthsCache = utils_1.Cache.populatedBy(_this.computeMaxEntryByteWidths);
          _this.indexCache = utils_1.Cache.populatedBy(_this.computeIndex);
          dict.set(PDFName_1.default.of("Type"), PDFName_1.default.of("XRef"));
          return _this;
        }
        PDFCrossRefStream2.prototype.addDeletedEntry = function(ref, nextFreeObjectNumber) {
          var type = EntryType.Deleted;
          this.entries.push({ type, ref, nextFreeObjectNumber });
          this.entryTuplesCache.invalidate();
          this.maxByteWidthsCache.invalidate();
          this.indexCache.invalidate();
          this.contentsCache.invalidate();
        };
        PDFCrossRefStream2.prototype.addUncompressedEntry = function(ref, offset) {
          var type = EntryType.Uncompressed;
          this.entries.push({ type, ref, offset });
          this.entryTuplesCache.invalidate();
          this.maxByteWidthsCache.invalidate();
          this.indexCache.invalidate();
          this.contentsCache.invalidate();
        };
        PDFCrossRefStream2.prototype.addCompressedEntry = function(ref, objectStreamRef, index) {
          var type = EntryType.Compressed;
          this.entries.push({ type, ref, objectStreamRef, index });
          this.entryTuplesCache.invalidate();
          this.maxByteWidthsCache.invalidate();
          this.indexCache.invalidate();
          this.contentsCache.invalidate();
        };
        PDFCrossRefStream2.prototype.clone = function(context) {
          var _a = this, dict = _a.dict, entries = _a.entries, encode = _a.encode;
          return PDFCrossRefStream2.of(dict.clone(context), entries.slice(), encode);
        };
        PDFCrossRefStream2.prototype.getContentsString = function() {
          var entryTuples = this.entryTuplesCache.access();
          var byteWidths = this.maxByteWidthsCache.access();
          var value = "";
          for (var entryIdx = 0, entriesLen = entryTuples.length; entryIdx < entriesLen; entryIdx++) {
            var _a = entryTuples[entryIdx], first = _a[0], second = _a[1], third = _a[2];
            var firstBytes = utils_1.reverseArray(utils_1.bytesFor(first));
            var secondBytes = utils_1.reverseArray(utils_1.bytesFor(second));
            var thirdBytes = utils_1.reverseArray(utils_1.bytesFor(third));
            for (var idx = byteWidths[0] - 1; idx >= 0; idx--) {
              value += (firstBytes[idx] || 0).toString(2);
            }
            for (var idx = byteWidths[1] - 1; idx >= 0; idx--) {
              value += (secondBytes[idx] || 0).toString(2);
            }
            for (var idx = byteWidths[2] - 1; idx >= 0; idx--) {
              value += (thirdBytes[idx] || 0).toString(2);
            }
          }
          return value;
        };
        PDFCrossRefStream2.prototype.getUnencodedContents = function() {
          var entryTuples = this.entryTuplesCache.access();
          var byteWidths = this.maxByteWidthsCache.access();
          var buffer = new Uint8Array(this.getUnencodedContentsSize());
          var offset = 0;
          for (var entryIdx = 0, entriesLen = entryTuples.length; entryIdx < entriesLen; entryIdx++) {
            var _a = entryTuples[entryIdx], first = _a[0], second = _a[1], third = _a[2];
            var firstBytes = utils_1.reverseArray(utils_1.bytesFor(first));
            var secondBytes = utils_1.reverseArray(utils_1.bytesFor(second));
            var thirdBytes = utils_1.reverseArray(utils_1.bytesFor(third));
            for (var idx = byteWidths[0] - 1; idx >= 0; idx--) {
              buffer[offset++] = firstBytes[idx] || 0;
            }
            for (var idx = byteWidths[1] - 1; idx >= 0; idx--) {
              buffer[offset++] = secondBytes[idx] || 0;
            }
            for (var idx = byteWidths[2] - 1; idx >= 0; idx--) {
              buffer[offset++] = thirdBytes[idx] || 0;
            }
          }
          return buffer;
        };
        PDFCrossRefStream2.prototype.getUnencodedContentsSize = function() {
          var byteWidths = this.maxByteWidthsCache.access();
          var entryWidth = utils_1.sum(byteWidths);
          return entryWidth * this.entries.length;
        };
        PDFCrossRefStream2.prototype.updateDict = function() {
          _super.prototype.updateDict.call(this);
          var byteWidths = this.maxByteWidthsCache.access();
          var index = this.indexCache.access();
          var context = this.dict.context;
          this.dict.set(PDFName_1.default.of("W"), context.obj(byteWidths));
          this.dict.set(PDFName_1.default.of("Index"), context.obj(index));
        };
        PDFCrossRefStream2.create = function(dict, encode) {
          if (encode === void 0) {
            encode = true;
          }
          var stream = new PDFCrossRefStream2(dict, [], encode);
          stream.addDeletedEntry(PDFRef_1.default.of(0, 65535), 0);
          return stream;
        };
        PDFCrossRefStream2.of = function(dict, entries, encode) {
          if (encode === void 0) {
            encode = true;
          }
          return new PDFCrossRefStream2(dict, entries, encode);
        };
        return PDFCrossRefStream2;
      }(PDFFlateStream_1.default)
    );
    exports.default = PDFCrossRefStream;
  }
});

// node_modules/pdf-lib/cjs/core/writers/PDFStreamWriter.js
var require_PDFStreamWriter = __commonJS({
  "node_modules/pdf-lib/cjs/core/writers/PDFStreamWriter.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFHeader_1 = tslib_1.__importDefault(require_PDFHeader());
    var PDFTrailer_1 = tslib_1.__importDefault(require_PDFTrailer());
    var PDFInvalidObject_1 = tslib_1.__importDefault(require_PDFInvalidObject());
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFNumber_1 = tslib_1.__importDefault(require_PDFNumber());
    var PDFRef_1 = tslib_1.__importDefault(require_PDFRef());
    var PDFStream_1 = tslib_1.__importDefault(require_PDFStream());
    var PDFCrossRefStream_1 = tslib_1.__importDefault(require_PDFCrossRefStream());
    var PDFObjectStream_1 = tslib_1.__importDefault(require_PDFObjectStream());
    var PDFWriter_1 = tslib_1.__importDefault(require_PDFWriter());
    var utils_1 = require_utils2();
    var PDFStreamWriter = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFStreamWriter2, _super);
        function PDFStreamWriter2(context, objectsPerTick, encodeStreams, objectsPerStream) {
          var _this = _super.call(this, context, objectsPerTick) || this;
          _this.encodeStreams = encodeStreams;
          _this.objectsPerStream = objectsPerStream;
          return _this;
        }
        PDFStreamWriter2.prototype.computeBufferSize = function() {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var objectNumber, header, size, xrefStream, uncompressedObjects, compressedObjects, objectStreamRefs, indirectObjects, idx, len, indirectObject, ref, object, shouldNotCompress, chunk, objectStreamRef, idx, len, chunk, ref, objectStream, xrefStreamRef, xrefOffset, trailer;
            return tslib_1.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  objectNumber = this.context.largestObjectNumber + 1;
                  header = PDFHeader_1.default.forVersion(1, 7);
                  size = header.sizeInBytes() + 2;
                  xrefStream = PDFCrossRefStream_1.default.create(this.createTrailerDict(), this.encodeStreams);
                  uncompressedObjects = [];
                  compressedObjects = [];
                  objectStreamRefs = [];
                  indirectObjects = this.context.enumerateIndirectObjects();
                  idx = 0, len = indirectObjects.length;
                  _a.label = 1;
                case 1:
                  if (!(idx < len))
                    return [3, 6];
                  indirectObject = indirectObjects[idx];
                  ref = indirectObject[0], object = indirectObject[1];
                  shouldNotCompress = ref === this.context.trailerInfo.Encrypt || object instanceof PDFStream_1.default || object instanceof PDFInvalidObject_1.default || ref.generationNumber !== 0;
                  if (!shouldNotCompress)
                    return [3, 4];
                  uncompressedObjects.push(indirectObject);
                  xrefStream.addUncompressedEntry(ref, size);
                  size += this.computeIndirectObjectSize(indirectObject);
                  if (!this.shouldWaitForTick(1))
                    return [3, 3];
                  return [4, utils_1.waitForTick()];
                case 2:
                  _a.sent();
                  _a.label = 3;
                case 3:
                  return [3, 5];
                case 4:
                  chunk = utils_1.last(compressedObjects);
                  objectStreamRef = utils_1.last(objectStreamRefs);
                  if (!chunk || chunk.length % this.objectsPerStream === 0) {
                    chunk = [];
                    compressedObjects.push(chunk);
                    objectStreamRef = PDFRef_1.default.of(objectNumber++);
                    objectStreamRefs.push(objectStreamRef);
                  }
                  xrefStream.addCompressedEntry(ref, objectStreamRef, chunk.length);
                  chunk.push(indirectObject);
                  _a.label = 5;
                case 5:
                  idx++;
                  return [3, 1];
                case 6:
                  idx = 0, len = compressedObjects.length;
                  _a.label = 7;
                case 7:
                  if (!(idx < len))
                    return [3, 10];
                  chunk = compressedObjects[idx];
                  ref = objectStreamRefs[idx];
                  objectStream = PDFObjectStream_1.default.withContextAndObjects(this.context, chunk, this.encodeStreams);
                  xrefStream.addUncompressedEntry(ref, size);
                  size += this.computeIndirectObjectSize([ref, objectStream]);
                  uncompressedObjects.push([ref, objectStream]);
                  if (!this.shouldWaitForTick(chunk.length))
                    return [3, 9];
                  return [4, utils_1.waitForTick()];
                case 8:
                  _a.sent();
                  _a.label = 9;
                case 9:
                  idx++;
                  return [3, 7];
                case 10:
                  xrefStreamRef = PDFRef_1.default.of(objectNumber++);
                  xrefStream.dict.set(PDFName_1.default.of("Size"), PDFNumber_1.default.of(objectNumber));
                  xrefStream.addUncompressedEntry(xrefStreamRef, size);
                  xrefOffset = size;
                  size += this.computeIndirectObjectSize([xrefStreamRef, xrefStream]);
                  uncompressedObjects.push([xrefStreamRef, xrefStream]);
                  trailer = PDFTrailer_1.default.forLastCrossRefSectionOffset(xrefOffset);
                  size += trailer.sizeInBytes();
                  return [2, { size, header, indirectObjects: uncompressedObjects, trailer }];
              }
            });
          });
        };
        PDFStreamWriter2.forContext = function(context, objectsPerTick, encodeStreams, objectsPerStream) {
          if (encodeStreams === void 0) {
            encodeStreams = true;
          }
          if (objectsPerStream === void 0) {
            objectsPerStream = 50;
          }
          return new PDFStreamWriter2(context, objectsPerTick, encodeStreams, objectsPerStream);
        };
        return PDFStreamWriter2;
      }(PDFWriter_1.default)
    );
    exports.default = PDFStreamWriter;
  }
});

// node_modules/pdf-lib/cjs/core/objects/PDFHexString.js
var require_PDFHexString = __commonJS({
  "node_modules/pdf-lib/cjs/core/objects/PDFHexString.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFObject_1 = tslib_1.__importDefault(require_PDFObject());
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var utils_1 = require_utils2();
    var errors_1 = require_errors2();
    var PDFHexString = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFHexString2, _super);
        function PDFHexString2(value) {
          var _this = _super.call(this) || this;
          _this.value = value;
          return _this;
        }
        PDFHexString2.prototype.asBytes = function() {
          var hex = this.value + (this.value.length % 2 === 1 ? "0" : "");
          var hexLength = hex.length;
          var bytes = new Uint8Array(hex.length / 2);
          var hexOffset = 0;
          var bytesOffset = 0;
          while (hexOffset < hexLength) {
            var byte = parseInt(hex.substring(hexOffset, hexOffset + 2), 16);
            bytes[bytesOffset] = byte;
            hexOffset += 2;
            bytesOffset += 1;
          }
          return bytes;
        };
        PDFHexString2.prototype.decodeText = function() {
          var bytes = this.asBytes();
          if (utils_1.hasUtf16BOM(bytes))
            return utils_1.utf16Decode(bytes);
          return utils_1.pdfDocEncodingDecode(bytes);
        };
        PDFHexString2.prototype.decodeDate = function() {
          var text = this.decodeText();
          var date = utils_1.parseDate(text);
          if (!date)
            throw new errors_1.InvalidPDFDateStringError(text);
          return date;
        };
        PDFHexString2.prototype.asString = function() {
          return this.value;
        };
        PDFHexString2.prototype.clone = function() {
          return PDFHexString2.of(this.value);
        };
        PDFHexString2.prototype.toString = function() {
          return "<" + this.value + ">";
        };
        PDFHexString2.prototype.sizeInBytes = function() {
          return this.value.length + 2;
        };
        PDFHexString2.prototype.copyBytesInto = function(buffer, offset) {
          buffer[offset++] = CharCodes_1.default.LessThan;
          offset += utils_1.copyStringIntoBuffer(this.value, buffer, offset);
          buffer[offset++] = CharCodes_1.default.GreaterThan;
          return this.value.length + 2;
        };
        PDFHexString2.of = function(value) {
          return new PDFHexString2(value);
        };
        PDFHexString2.fromText = function(value) {
          var encoded = utils_1.utf16Encode(value);
          var hex = "";
          for (var idx = 0, len = encoded.length; idx < len; idx++) {
            hex += utils_1.toHexStringOfMinLength(encoded[idx], 4);
          }
          return new PDFHexString2(hex);
        };
        return PDFHexString2;
      }(PDFObject_1.default)
    );
    exports.default = PDFHexString;
  }
});

// node_modules/pdf-lib/cjs/core/embedders/StandardFontEmbedder.js
var require_StandardFontEmbedder = __commonJS({
  "node_modules/pdf-lib/cjs/core/embedders/StandardFontEmbedder.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var standard_fonts_1 = require_lib();
    var PDFHexString_1 = tslib_1.__importDefault(require_PDFHexString());
    var utils_1 = require_utils2();
    var StandardFontEmbedder = (
      /** @class */
      function() {
        function StandardFontEmbedder2(fontName, customName) {
          this.encoding = fontName === standard_fonts_1.FontNames.ZapfDingbats ? standard_fonts_1.Encodings.ZapfDingbats : fontName === standard_fonts_1.FontNames.Symbol ? standard_fonts_1.Encodings.Symbol : standard_fonts_1.Encodings.WinAnsi;
          this.font = standard_fonts_1.Font.load(fontName);
          this.fontName = this.font.FontName;
          this.customName = customName;
        }
        StandardFontEmbedder2.prototype.encodeText = function(text) {
          var glyphs = this.encodeTextAsGlyphs(text);
          var hexCodes = new Array(glyphs.length);
          for (var idx = 0, len = glyphs.length; idx < len; idx++) {
            hexCodes[idx] = utils_1.toHexString(glyphs[idx].code);
          }
          return PDFHexString_1.default.of(hexCodes.join(""));
        };
        StandardFontEmbedder2.prototype.widthOfTextAtSize = function(text, size) {
          var glyphs = this.encodeTextAsGlyphs(text);
          var totalWidth = 0;
          for (var idx = 0, len = glyphs.length; idx < len; idx++) {
            var left = glyphs[idx].name;
            var right = (glyphs[idx + 1] || {}).name;
            var kernAmount = this.font.getXAxisKerningForPair(left, right) || 0;
            totalWidth += this.widthOfGlyph(left) + kernAmount;
          }
          var scale = size / 1e3;
          return totalWidth * scale;
        };
        StandardFontEmbedder2.prototype.heightOfFontAtSize = function(size, options) {
          if (options === void 0) {
            options = {};
          }
          var _a = options.descender, descender = _a === void 0 ? true : _a;
          var _b = this.font, Ascender = _b.Ascender, Descender = _b.Descender, FontBBox = _b.FontBBox;
          var yTop = Ascender || FontBBox[3];
          var yBottom = Descender || FontBBox[1];
          var height = yTop - yBottom;
          if (!descender)
            height += Descender || 0;
          return height / 1e3 * size;
        };
        StandardFontEmbedder2.prototype.sizeOfFontAtHeight = function(height) {
          var _a = this.font, Ascender = _a.Ascender, Descender = _a.Descender, FontBBox = _a.FontBBox;
          var yTop = Ascender || FontBBox[3];
          var yBottom = Descender || FontBBox[1];
          return 1e3 * height / (yTop - yBottom);
        };
        StandardFontEmbedder2.prototype.embedIntoContext = function(context, ref) {
          var fontDict = context.obj({
            Type: "Font",
            Subtype: "Type1",
            BaseFont: this.customName || this.fontName,
            Encoding: this.encoding === standard_fonts_1.Encodings.WinAnsi ? "WinAnsiEncoding" : void 0
          });
          if (ref) {
            context.assign(ref, fontDict);
            return ref;
          } else {
            return context.register(fontDict);
          }
        };
        StandardFontEmbedder2.prototype.widthOfGlyph = function(glyphName) {
          return this.font.getWidthOfGlyph(glyphName) || 250;
        };
        StandardFontEmbedder2.prototype.encodeTextAsGlyphs = function(text) {
          var codePoints = Array.from(text);
          var glyphs = new Array(codePoints.length);
          for (var idx = 0, len = codePoints.length; idx < len; idx++) {
            var codePoint = utils_1.toCodePoint(codePoints[idx]);
            glyphs[idx] = this.encoding.encodeUnicodeCodePoint(codePoint);
          }
          return glyphs;
        };
        StandardFontEmbedder2.for = function(fontName, customName) {
          return new StandardFontEmbedder2(fontName, customName);
        };
        return StandardFontEmbedder2;
      }()
    );
    exports.default = StandardFontEmbedder;
  }
});

// node_modules/pdf-lib/cjs/core/embedders/CMap.js
var require_CMap = __commonJS({
  "node_modules/pdf-lib/cjs/core/embedders/CMap.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createCmap = void 0;
    var utils_1 = require_utils2();
    var unicode_1 = require_unicode();
    exports.createCmap = function(glyphs, glyphId) {
      var bfChars = new Array(glyphs.length);
      for (var idx = 0, len = glyphs.length; idx < len; idx++) {
        var glyph = glyphs[idx];
        var id = cmapHexFormat(cmapHexString(glyphId(glyph)));
        var unicode = cmapHexFormat.apply(void 0, glyph.codePoints.map(cmapCodePointFormat));
        bfChars[idx] = [id, unicode];
      }
      return fillCmapTemplate(bfChars);
    };
    var fillCmapTemplate = function(bfChars) {
      return "/CIDInit /ProcSet findresource begin\n12 dict begin\nbegincmap\n/CIDSystemInfo <<\n  /Registry (Adobe)\n  /Ordering (UCS)\n  /Supplement 0\n>> def\n/CMapName /Adobe-Identity-UCS def\n/CMapType 2 def\n1 begincodespacerange\n<0000><ffff>\nendcodespacerange\n" + bfChars.length + " beginbfchar\n" + bfChars.map(function(_a) {
        var glyphId = _a[0], codePoint = _a[1];
        return glyphId + " " + codePoint;
      }).join("\n") + "\nendbfchar\nendcmap\nCMapName currentdict /CMap defineresource pop\nend\nend";
    };
    var cmapHexFormat = function() {
      var values = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        values[_i] = arguments[_i];
      }
      return "<" + values.join("") + ">";
    };
    var cmapHexString = function(value) {
      return utils_1.toHexStringOfMinLength(value, 4);
    };
    var cmapCodePointFormat = function(codePoint) {
      if (unicode_1.isWithinBMP(codePoint))
        return cmapHexString(codePoint);
      if (unicode_1.hasSurrogates(codePoint)) {
        var hs = unicode_1.highSurrogate(codePoint);
        var ls = unicode_1.lowSurrogate(codePoint);
        return "" + cmapHexString(hs) + cmapHexString(ls);
      }
      var hex = utils_1.toHexString(codePoint);
      var msg = "0x" + hex + " is not a valid UTF-8 or UTF-16 codepoint.";
      throw new Error(msg);
    };
  }
});

// node_modules/pdf-lib/cjs/core/embedders/FontFlags.js
var require_FontFlags = __commonJS({
  "node_modules/pdf-lib/cjs/core/embedders/FontFlags.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.deriveFontFlags = void 0;
    var makeFontFlags = function(options) {
      var flags = 0;
      var flipBit = function(bit) {
        flags |= 1 << bit - 1;
      };
      if (options.fixedPitch)
        flipBit(1);
      if (options.serif)
        flipBit(2);
      if (options.symbolic)
        flipBit(3);
      if (options.script)
        flipBit(4);
      if (options.nonsymbolic)
        flipBit(6);
      if (options.italic)
        flipBit(7);
      if (options.allCap)
        flipBit(17);
      if (options.smallCap)
        flipBit(18);
      if (options.forceBold)
        flipBit(19);
      return flags;
    };
    exports.deriveFontFlags = function(font) {
      var familyClass = font["OS/2"] ? font["OS/2"].sFamilyClass : 0;
      var flags = makeFontFlags({
        fixedPitch: font.post.isFixedPitch,
        serif: 1 <= familyClass && familyClass <= 7,
        symbolic: true,
        script: familyClass === 10,
        italic: font.head.macStyle.italic
      });
      return flags;
    };
  }
});

// node_modules/pdf-lib/cjs/core/objects/PDFString.js
var require_PDFString = __commonJS({
  "node_modules/pdf-lib/cjs/core/objects/PDFString.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFObject_1 = tslib_1.__importDefault(require_PDFObject());
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var utils_1 = require_utils2();
    var errors_1 = require_errors2();
    var PDFString = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFString2, _super);
        function PDFString2(value) {
          var _this = _super.call(this) || this;
          _this.value = value;
          return _this;
        }
        PDFString2.prototype.asBytes = function() {
          var bytes = [];
          var octal = "";
          var escaped = false;
          var pushByte = function(byte2) {
            if (byte2 !== void 0)
              bytes.push(byte2);
            escaped = false;
          };
          for (var idx = 0, len = this.value.length; idx < len; idx++) {
            var char = this.value[idx];
            var byte = utils_1.toCharCode(char);
            var nextChar = this.value[idx + 1];
            if (!escaped) {
              if (byte === CharCodes_1.default.BackSlash)
                escaped = true;
              else
                pushByte(byte);
            } else {
              if (byte === CharCodes_1.default.Newline)
                pushByte();
              else if (byte === CharCodes_1.default.CarriageReturn)
                pushByte();
              else if (byte === CharCodes_1.default.n)
                pushByte(CharCodes_1.default.Newline);
              else if (byte === CharCodes_1.default.r)
                pushByte(CharCodes_1.default.CarriageReturn);
              else if (byte === CharCodes_1.default.t)
                pushByte(CharCodes_1.default.Tab);
              else if (byte === CharCodes_1.default.b)
                pushByte(CharCodes_1.default.Backspace);
              else if (byte === CharCodes_1.default.f)
                pushByte(CharCodes_1.default.FormFeed);
              else if (byte === CharCodes_1.default.LeftParen)
                pushByte(CharCodes_1.default.LeftParen);
              else if (byte === CharCodes_1.default.RightParen)
                pushByte(CharCodes_1.default.RightParen);
              else if (byte === CharCodes_1.default.Backspace)
                pushByte(CharCodes_1.default.BackSlash);
              else if (byte >= CharCodes_1.default.Zero && byte <= CharCodes_1.default.Seven) {
                octal += char;
                if (octal.length === 3 || !(nextChar >= "0" && nextChar <= "7")) {
                  pushByte(parseInt(octal, 8));
                  octal = "";
                }
              } else {
                pushByte(byte);
              }
            }
          }
          return new Uint8Array(bytes);
        };
        PDFString2.prototype.decodeText = function() {
          var bytes = this.asBytes();
          if (utils_1.hasUtf16BOM(bytes))
            return utils_1.utf16Decode(bytes);
          return utils_1.pdfDocEncodingDecode(bytes);
        };
        PDFString2.prototype.decodeDate = function() {
          var text = this.decodeText();
          var date = utils_1.parseDate(text);
          if (!date)
            throw new errors_1.InvalidPDFDateStringError(text);
          return date;
        };
        PDFString2.prototype.asString = function() {
          return this.value;
        };
        PDFString2.prototype.clone = function() {
          return PDFString2.of(this.value);
        };
        PDFString2.prototype.toString = function() {
          return "(" + this.value + ")";
        };
        PDFString2.prototype.sizeInBytes = function() {
          return this.value.length + 2;
        };
        PDFString2.prototype.copyBytesInto = function(buffer, offset) {
          buffer[offset++] = CharCodes_1.default.LeftParen;
          offset += utils_1.copyStringIntoBuffer(this.value, buffer, offset);
          buffer[offset++] = CharCodes_1.default.RightParen;
          return this.value.length + 2;
        };
        PDFString2.of = function(value) {
          return new PDFString2(value);
        };
        PDFString2.fromDate = function(date) {
          var year = utils_1.padStart(String(date.getUTCFullYear()), 4, "0");
          var month = utils_1.padStart(String(date.getUTCMonth() + 1), 2, "0");
          var day = utils_1.padStart(String(date.getUTCDate()), 2, "0");
          var hours = utils_1.padStart(String(date.getUTCHours()), 2, "0");
          var mins = utils_1.padStart(String(date.getUTCMinutes()), 2, "0");
          var secs = utils_1.padStart(String(date.getUTCSeconds()), 2, "0");
          return new PDFString2("D:" + year + month + day + hours + mins + secs + "Z");
        };
        return PDFString2;
      }(PDFObject_1.default)
    );
    exports.default = PDFString;
  }
});

// node_modules/pdf-lib/cjs/core/embedders/CustomFontEmbedder.js
var require_CustomFontEmbedder = __commonJS({
  "node_modules/pdf-lib/cjs/core/embedders/CustomFontEmbedder.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var CMap_1 = require_CMap();
    var FontFlags_1 = require_FontFlags();
    var PDFHexString_1 = tslib_1.__importDefault(require_PDFHexString());
    var PDFString_1 = tslib_1.__importDefault(require_PDFString());
    var utils_1 = require_utils2();
    var CustomFontEmbedder = (
      /** @class */
      function() {
        function CustomFontEmbedder2(font, fontData, customName, fontFeatures) {
          var _this = this;
          this.allGlyphsInFontSortedById = function() {
            var glyphs = new Array(_this.font.characterSet.length);
            for (var idx = 0, len = glyphs.length; idx < len; idx++) {
              var codePoint = _this.font.characterSet[idx];
              glyphs[idx] = _this.font.glyphForCodePoint(codePoint);
            }
            return utils_1.sortedUniq(glyphs.sort(utils_1.byAscendingId), function(g) {
              return g.id;
            });
          };
          this.font = font;
          this.scale = 1e3 / this.font.unitsPerEm;
          this.fontData = fontData;
          this.fontName = this.font.postscriptName || "Font";
          this.customName = customName;
          this.fontFeatures = fontFeatures;
          this.baseFontName = "";
          this.glyphCache = utils_1.Cache.populatedBy(this.allGlyphsInFontSortedById);
        }
        CustomFontEmbedder2.for = function(fontkit, fontData, customName, fontFeatures) {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var font;
            return tslib_1.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, fontkit.create(fontData)];
                case 1:
                  font = _a.sent();
                  return [2, new CustomFontEmbedder2(font, fontData, customName, fontFeatures)];
              }
            });
          });
        };
        CustomFontEmbedder2.prototype.encodeText = function(text) {
          var glyphs = this.font.layout(text, this.fontFeatures).glyphs;
          var hexCodes = new Array(glyphs.length);
          for (var idx = 0, len = glyphs.length; idx < len; idx++) {
            hexCodes[idx] = utils_1.toHexStringOfMinLength(glyphs[idx].id, 4);
          }
          return PDFHexString_1.default.of(hexCodes.join(""));
        };
        CustomFontEmbedder2.prototype.widthOfTextAtSize = function(text, size) {
          var glyphs = this.font.layout(text, this.fontFeatures).glyphs;
          var totalWidth = 0;
          for (var idx = 0, len = glyphs.length; idx < len; idx++) {
            totalWidth += glyphs[idx].advanceWidth * this.scale;
          }
          var scale = size / 1e3;
          return totalWidth * scale;
        };
        CustomFontEmbedder2.prototype.heightOfFontAtSize = function(size, options) {
          if (options === void 0) {
            options = {};
          }
          var _a = options.descender, descender = _a === void 0 ? true : _a;
          var _b = this.font, ascent = _b.ascent, descent = _b.descent, bbox = _b.bbox;
          var yTop = (ascent || bbox.maxY) * this.scale;
          var yBottom = (descent || bbox.minY) * this.scale;
          var height = yTop - yBottom;
          if (!descender)
            height -= Math.abs(descent) || 0;
          return height / 1e3 * size;
        };
        CustomFontEmbedder2.prototype.sizeOfFontAtHeight = function(height) {
          var _a = this.font, ascent = _a.ascent, descent = _a.descent, bbox = _a.bbox;
          var yTop = (ascent || bbox.maxY) * this.scale;
          var yBottom = (descent || bbox.minY) * this.scale;
          return 1e3 * height / (yTop - yBottom);
        };
        CustomFontEmbedder2.prototype.embedIntoContext = function(context, ref) {
          this.baseFontName = this.customName || context.addRandomSuffix(this.fontName);
          return this.embedFontDict(context, ref);
        };
        CustomFontEmbedder2.prototype.embedFontDict = function(context, ref) {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var cidFontDictRef, unicodeCMapRef, fontDict;
            return tslib_1.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.embedCIDFontDict(context)];
                case 1:
                  cidFontDictRef = _a.sent();
                  unicodeCMapRef = this.embedUnicodeCmap(context);
                  fontDict = context.obj({
                    Type: "Font",
                    Subtype: "Type0",
                    BaseFont: this.baseFontName,
                    Encoding: "Identity-H",
                    DescendantFonts: [cidFontDictRef],
                    ToUnicode: unicodeCMapRef
                  });
                  if (ref) {
                    context.assign(ref, fontDict);
                    return [2, ref];
                  } else {
                    return [2, context.register(fontDict)];
                  }
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        };
        CustomFontEmbedder2.prototype.isCFF = function() {
          return this.font.cff;
        };
        CustomFontEmbedder2.prototype.embedCIDFontDict = function(context) {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var fontDescriptorRef, cidFontDict;
            return tslib_1.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.embedFontDescriptor(context)];
                case 1:
                  fontDescriptorRef = _a.sent();
                  cidFontDict = context.obj({
                    Type: "Font",
                    Subtype: this.isCFF() ? "CIDFontType0" : "CIDFontType2",
                    CIDToGIDMap: "Identity",
                    BaseFont: this.baseFontName,
                    CIDSystemInfo: {
                      Registry: PDFString_1.default.of("Adobe"),
                      Ordering: PDFString_1.default.of("Identity"),
                      Supplement: 0
                    },
                    FontDescriptor: fontDescriptorRef,
                    W: this.computeWidths()
                  });
                  return [2, context.register(cidFontDict)];
              }
            });
          });
        };
        CustomFontEmbedder2.prototype.embedFontDescriptor = function(context) {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var fontStreamRef, scale, _a, italicAngle, ascent, descent, capHeight, xHeight, _b, minX, minY, maxX, maxY, fontDescriptor;
            var _c;
            return tslib_1.__generator(this, function(_d) {
              switch (_d.label) {
                case 0:
                  return [4, this.embedFontStream(context)];
                case 1:
                  fontStreamRef = _d.sent();
                  scale = this.scale;
                  _a = this.font, italicAngle = _a.italicAngle, ascent = _a.ascent, descent = _a.descent, capHeight = _a.capHeight, xHeight = _a.xHeight;
                  _b = this.font.bbox, minX = _b.minX, minY = _b.minY, maxX = _b.maxX, maxY = _b.maxY;
                  fontDescriptor = context.obj((_c = {
                    Type: "FontDescriptor",
                    FontName: this.baseFontName,
                    Flags: FontFlags_1.deriveFontFlags(this.font),
                    FontBBox: [minX * scale, minY * scale, maxX * scale, maxY * scale],
                    ItalicAngle: italicAngle,
                    Ascent: ascent * scale,
                    Descent: descent * scale,
                    CapHeight: (capHeight || ascent) * scale,
                    XHeight: (xHeight || 0) * scale,
                    // Not sure how to compute/find this, nor is anybody else really:
                    // https://stackoverflow.com/questions/35485179/stemv-value-of-the-truetype-font
                    StemV: 0
                  }, _c[this.isCFF() ? "FontFile3" : "FontFile2"] = fontStreamRef, _c));
                  return [2, context.register(fontDescriptor)];
              }
            });
          });
        };
        CustomFontEmbedder2.prototype.serializeFont = function() {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            return tslib_1.__generator(this, function(_a) {
              return [2, this.fontData];
            });
          });
        };
        CustomFontEmbedder2.prototype.embedFontStream = function(context) {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var fontStream, _a, _b;
            return tslib_1.__generator(this, function(_c) {
              switch (_c.label) {
                case 0:
                  _b = (_a = context).flateStream;
                  return [4, this.serializeFont()];
                case 1:
                  fontStream = _b.apply(_a, [_c.sent(), {
                    Subtype: this.isCFF() ? "CIDFontType0C" : void 0
                  }]);
                  return [2, context.register(fontStream)];
              }
            });
          });
        };
        CustomFontEmbedder2.prototype.embedUnicodeCmap = function(context) {
          var cmap = CMap_1.createCmap(this.glyphCache.access(), this.glyphId.bind(this));
          var cmapStream = context.flateStream(cmap);
          return context.register(cmapStream);
        };
        CustomFontEmbedder2.prototype.glyphId = function(glyph) {
          return glyph ? glyph.id : -1;
        };
        CustomFontEmbedder2.prototype.computeWidths = function() {
          var glyphs = this.glyphCache.access();
          var widths = [];
          var currSection = [];
          for (var idx = 0, len = glyphs.length; idx < len; idx++) {
            var currGlyph = glyphs[idx];
            var prevGlyph = glyphs[idx - 1];
            var currGlyphId = this.glyphId(currGlyph);
            var prevGlyphId = this.glyphId(prevGlyph);
            if (idx === 0) {
              widths.push(currGlyphId);
            } else if (currGlyphId - prevGlyphId !== 1) {
              widths.push(currSection);
              widths.push(currGlyphId);
              currSection = [];
            }
            currSection.push(currGlyph.advanceWidth * this.scale);
          }
          widths.push(currSection);
          return widths;
        };
        return CustomFontEmbedder2;
      }()
    );
    exports.default = CustomFontEmbedder;
  }
});

// node_modules/pdf-lib/cjs/core/embedders/CustomFontSubsetEmbedder.js
var require_CustomFontSubsetEmbedder = __commonJS({
  "node_modules/pdf-lib/cjs/core/embedders/CustomFontSubsetEmbedder.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var CustomFontEmbedder_1 = tslib_1.__importDefault(require_CustomFontEmbedder());
    var PDFHexString_1 = tslib_1.__importDefault(require_PDFHexString());
    var utils_1 = require_utils2();
    var CustomFontSubsetEmbedder = (
      /** @class */
      function(_super) {
        tslib_1.__extends(CustomFontSubsetEmbedder2, _super);
        function CustomFontSubsetEmbedder2(font, fontData, customFontName, fontFeatures) {
          var _this = _super.call(this, font, fontData, customFontName, fontFeatures) || this;
          _this.subset = _this.font.createSubset();
          _this.glyphs = [];
          _this.glyphCache = utils_1.Cache.populatedBy(function() {
            return _this.glyphs;
          });
          _this.glyphIdMap = /* @__PURE__ */ new Map();
          return _this;
        }
        CustomFontSubsetEmbedder2.for = function(fontkit, fontData, customFontName, fontFeatures) {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var font;
            return tslib_1.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, fontkit.create(fontData)];
                case 1:
                  font = _a.sent();
                  return [2, new CustomFontSubsetEmbedder2(font, fontData, customFontName, fontFeatures)];
              }
            });
          });
        };
        CustomFontSubsetEmbedder2.prototype.encodeText = function(text) {
          var glyphs = this.font.layout(text, this.fontFeatures).glyphs;
          var hexCodes = new Array(glyphs.length);
          for (var idx = 0, len = glyphs.length; idx < len; idx++) {
            var glyph = glyphs[idx];
            var subsetGlyphId = this.subset.includeGlyph(glyph);
            this.glyphs[subsetGlyphId - 1] = glyph;
            this.glyphIdMap.set(glyph.id, subsetGlyphId);
            hexCodes[idx] = utils_1.toHexStringOfMinLength(subsetGlyphId, 4);
          }
          this.glyphCache.invalidate();
          return PDFHexString_1.default.of(hexCodes.join(""));
        };
        CustomFontSubsetEmbedder2.prototype.isCFF = function() {
          return this.subset.cff;
        };
        CustomFontSubsetEmbedder2.prototype.glyphId = function(glyph) {
          return glyph ? this.glyphIdMap.get(glyph.id) : -1;
        };
        CustomFontSubsetEmbedder2.prototype.serializeFont = function() {
          var _this = this;
          return new Promise(function(resolve, reject) {
            var parts = [];
            _this.subset.encodeStream().on("data", function(bytes) {
              return parts.push(bytes);
            }).on("end", function() {
              return resolve(utils_1.mergeUint8Arrays(parts));
            }).on("error", function(err) {
              return reject(err);
            });
          });
        };
        return CustomFontSubsetEmbedder2;
      }(CustomFontEmbedder_1.default)
    );
    exports.default = CustomFontSubsetEmbedder;
  }
});

// node_modules/pdf-lib/cjs/core/embedders/FileEmbedder.js
var require_FileEmbedder = __commonJS({
  "node_modules/pdf-lib/cjs/core/embedders/FileEmbedder.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AFRelationship = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFString_1 = tslib_1.__importDefault(require_PDFString());
    var PDFHexString_1 = tslib_1.__importDefault(require_PDFHexString());
    var AFRelationship;
    (function(AFRelationship2) {
      AFRelationship2["Source"] = "Source";
      AFRelationship2["Data"] = "Data";
      AFRelationship2["Alternative"] = "Alternative";
      AFRelationship2["Supplement"] = "Supplement";
      AFRelationship2["EncryptedPayload"] = "EncryptedPayload";
      AFRelationship2["FormData"] = "EncryptedPayload";
      AFRelationship2["Schema"] = "Schema";
      AFRelationship2["Unspecified"] = "Unspecified";
    })(AFRelationship = exports.AFRelationship || (exports.AFRelationship = {}));
    var FileEmbedder = (
      /** @class */
      function() {
        function FileEmbedder2(fileData, fileName, options) {
          if (options === void 0) {
            options = {};
          }
          this.fileData = fileData;
          this.fileName = fileName;
          this.options = options;
        }
        FileEmbedder2.for = function(bytes, fileName, options) {
          if (options === void 0) {
            options = {};
          }
          return new FileEmbedder2(bytes, fileName, options);
        };
        FileEmbedder2.prototype.embedIntoContext = function(context, ref) {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var _a, mimeType, description, creationDate, modificationDate, afRelationship, embeddedFileStream, embeddedFileStreamRef, fileSpecDict;
            return tslib_1.__generator(this, function(_b) {
              _a = this.options, mimeType = _a.mimeType, description = _a.description, creationDate = _a.creationDate, modificationDate = _a.modificationDate, afRelationship = _a.afRelationship;
              embeddedFileStream = context.flateStream(this.fileData, {
                Type: "EmbeddedFile",
                Subtype: mimeType !== null && mimeType !== void 0 ? mimeType : void 0,
                Params: {
                  Size: this.fileData.length,
                  CreationDate: creationDate ? PDFString_1.default.fromDate(creationDate) : void 0,
                  ModDate: modificationDate ? PDFString_1.default.fromDate(modificationDate) : void 0
                }
              });
              embeddedFileStreamRef = context.register(embeddedFileStream);
              fileSpecDict = context.obj({
                Type: "Filespec",
                F: PDFString_1.default.of(this.fileName),
                UF: PDFHexString_1.default.fromText(this.fileName),
                EF: { F: embeddedFileStreamRef },
                Desc: description ? PDFHexString_1.default.fromText(description) : void 0,
                AFRelationship: afRelationship !== null && afRelationship !== void 0 ? afRelationship : void 0
              });
              if (ref) {
                context.assign(ref, fileSpecDict);
                return [2, ref];
              } else {
                return [2, context.register(fileSpecDict)];
              }
              return [
                2
                /*return*/
              ];
            });
          });
        };
        return FileEmbedder2;
      }()
    );
    exports.default = FileEmbedder;
  }
});

// node_modules/pdf-lib/cjs/core/embedders/JpegEmbedder.js
var require_JpegEmbedder = __commonJS({
  "node_modules/pdf-lib/cjs/core/embedders/JpegEmbedder.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var MARKERS = [
      65472,
      65473,
      65474,
      65475,
      65477,
      65478,
      65479,
      65480,
      65481,
      65482,
      65483,
      65484,
      65485,
      65486,
      65487
    ];
    var ColorSpace;
    (function(ColorSpace2) {
      ColorSpace2["DeviceGray"] = "DeviceGray";
      ColorSpace2["DeviceRGB"] = "DeviceRGB";
      ColorSpace2["DeviceCMYK"] = "DeviceCMYK";
    })(ColorSpace || (ColorSpace = {}));
    var ChannelToColorSpace = {
      1: ColorSpace.DeviceGray,
      3: ColorSpace.DeviceRGB,
      4: ColorSpace.DeviceCMYK
    };
    var JpegEmbedder = (
      /** @class */
      function() {
        function JpegEmbedder2(imageData, bitsPerComponent, width, height, colorSpace) {
          this.imageData = imageData;
          this.bitsPerComponent = bitsPerComponent;
          this.width = width;
          this.height = height;
          this.colorSpace = colorSpace;
        }
        JpegEmbedder2.for = function(imageData) {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var dataView, soi, pos, marker, bitsPerComponent, height, width, channelByte, channelName, colorSpace;
            return tslib_1.__generator(this, function(_a) {
              dataView = new DataView(imageData.buffer);
              soi = dataView.getUint16(0);
              if (soi !== 65496)
                throw new Error("SOI not found in JPEG");
              pos = 2;
              while (pos < dataView.byteLength) {
                marker = dataView.getUint16(pos);
                pos += 2;
                if (MARKERS.includes(marker))
                  break;
                pos += dataView.getUint16(pos);
              }
              if (!MARKERS.includes(marker))
                throw new Error("Invalid JPEG");
              pos += 2;
              bitsPerComponent = dataView.getUint8(pos++);
              height = dataView.getUint16(pos);
              pos += 2;
              width = dataView.getUint16(pos);
              pos += 2;
              channelByte = dataView.getUint8(pos++);
              channelName = ChannelToColorSpace[channelByte];
              if (!channelName)
                throw new Error("Unknown JPEG channel.");
              colorSpace = channelName;
              return [2, new JpegEmbedder2(imageData, bitsPerComponent, width, height, colorSpace)];
            });
          });
        };
        JpegEmbedder2.prototype.embedIntoContext = function(context, ref) {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var xObject;
            return tslib_1.__generator(this, function(_a) {
              xObject = context.stream(this.imageData, {
                Type: "XObject",
                Subtype: "Image",
                BitsPerComponent: this.bitsPerComponent,
                Width: this.width,
                Height: this.height,
                ColorSpace: this.colorSpace,
                Filter: "DCTDecode",
                // CMYK JPEG streams in PDF are typically stored complemented,
                // with 1 as 'off' and 0 as 'on' (PDF 32000-1:2008, 8.6.4.4).
                //
                // Standalone CMYK JPEG (usually exported by Photoshop) are
                // stored inverse, with 0 as 'off' and 1 as 'on', like RGB.
                //
                // Applying a swap here as a hedge that most bytes passing
                // through this method will benefit from it.
                Decode: this.colorSpace === ColorSpace.DeviceCMYK ? [1, 0, 1, 0, 1, 0, 1, 0] : void 0
              });
              if (ref) {
                context.assign(ref, xObject);
                return [2, ref];
              } else {
                return [2, context.register(xObject)];
              }
              return [
                2
                /*return*/
              ];
            });
          });
        };
        return JpegEmbedder2;
      }()
    );
    exports.default = JpegEmbedder;
  }
});

// node_modules/@pdf-lib/upng/cjs/UPNG.js
var require_UPNG = __commonJS({
  "node_modules/@pdf-lib/upng/cjs/UPNG.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _pako = _interopRequireDefault(require_pako());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var UPNG = {};
    UPNG.toRGBA8 = function(out) {
      var w = out.width, h = out.height;
      if (out.tabs.acTL == null)
        return [UPNG.toRGBA8.decodeImage(out.data, w, h, out).buffer];
      var frms = [];
      if (out.frames[0].data == null)
        out.frames[0].data = out.data;
      var len = w * h * 4, img = new Uint8Array(len), empty = new Uint8Array(len), prev = new Uint8Array(len);
      for (var i = 0; i < out.frames.length; i++) {
        var frm = out.frames[i];
        var fx = frm.rect.x, fy = frm.rect.y, fw = frm.rect.width, fh = frm.rect.height;
        var fdata = UPNG.toRGBA8.decodeImage(frm.data, fw, fh, out);
        if (i != 0)
          for (var j = 0; j < len; j++)
            prev[j] = img[j];
        if (frm.blend == 0)
          UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 0);
        else if (frm.blend == 1)
          UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 1);
        frms.push(img.buffer.slice(0));
        if (frm.dispose == 0) {
        } else if (frm.dispose == 1)
          UPNG._copyTile(empty, fw, fh, img, w, h, fx, fy, 0);
        else if (frm.dispose == 2)
          for (var j = 0; j < len; j++)
            img[j] = prev[j];
      }
      return frms;
    };
    UPNG.toRGBA8.decodeImage = function(data, w, h, out) {
      var area = w * h, bpp = UPNG.decode._getBPP(out);
      var bpl = Math.ceil(w * bpp / 8);
      var bf = new Uint8Array(area * 4), bf32 = new Uint32Array(bf.buffer);
      var ctype = out.ctype, depth = out.depth;
      var rs = UPNG._bin.readUshort;
      var time = Date.now();
      if (ctype == 6) {
        var qarea = area << 2;
        if (depth == 8)
          for (var i = 0; i < qarea; i += 4) {
            bf[i] = data[i];
            bf[i + 1] = data[i + 1];
            bf[i + 2] = data[i + 2];
            bf[i + 3] = data[i + 3];
          }
        if (depth == 16)
          for (var i = 0; i < qarea; i++) {
            bf[i] = data[i << 1];
          }
      } else if (ctype == 2) {
        var ts = out.tabs["tRNS"];
        if (ts == null) {
          if (depth == 8)
            for (var i = 0; i < area; i++) {
              var ti = i * 3;
              bf32[i] = 255 << 24 | data[ti + 2] << 16 | data[ti + 1] << 8 | data[ti];
            }
          if (depth == 16)
            for (var i = 0; i < area; i++) {
              var ti = i * 6;
              bf32[i] = 255 << 24 | data[ti + 4] << 16 | data[ti + 2] << 8 | data[ti];
            }
        } else {
          var tr = ts[0], tg = ts[1], tb = ts[2];
          if (depth == 8)
            for (var i = 0; i < area; i++) {
              var qi = i << 2, ti = i * 3;
              bf32[i] = 255 << 24 | data[ti + 2] << 16 | data[ti + 1] << 8 | data[ti];
              if (data[ti] == tr && data[ti + 1] == tg && data[ti + 2] == tb)
                bf[qi + 3] = 0;
            }
          if (depth == 16)
            for (var i = 0; i < area; i++) {
              var qi = i << 2, ti = i * 6;
              bf32[i] = 255 << 24 | data[ti + 4] << 16 | data[ti + 2] << 8 | data[ti];
              if (rs(data, ti) == tr && rs(data, ti + 2) == tg && rs(data, ti + 4) == tb)
                bf[qi + 3] = 0;
            }
        }
      } else if (ctype == 3) {
        var p = out.tabs["PLTE"], ap = out.tabs["tRNS"], tl = ap ? ap.length : 0;
        if (depth == 1)
          for (var y = 0; y < h; y++) {
            var s0 = y * bpl, t0 = y * w;
            for (var i = 0; i < w; i++) {
              var qi = t0 + i << 2, j = data[s0 + (i >> 3)] >> 7 - ((i & 7) << 0) & 1, cj = 3 * j;
              bf[qi] = p[cj];
              bf[qi + 1] = p[cj + 1];
              bf[qi + 2] = p[cj + 2];
              bf[qi + 3] = j < tl ? ap[j] : 255;
            }
          }
        if (depth == 2)
          for (var y = 0; y < h; y++) {
            var s0 = y * bpl, t0 = y * w;
            for (var i = 0; i < w; i++) {
              var qi = t0 + i << 2, j = data[s0 + (i >> 2)] >> 6 - ((i & 3) << 1) & 3, cj = 3 * j;
              bf[qi] = p[cj];
              bf[qi + 1] = p[cj + 1];
              bf[qi + 2] = p[cj + 2];
              bf[qi + 3] = j < tl ? ap[j] : 255;
            }
          }
        if (depth == 4)
          for (var y = 0; y < h; y++) {
            var s0 = y * bpl, t0 = y * w;
            for (var i = 0; i < w; i++) {
              var qi = t0 + i << 2, j = data[s0 + (i >> 1)] >> 4 - ((i & 1) << 2) & 15, cj = 3 * j;
              bf[qi] = p[cj];
              bf[qi + 1] = p[cj + 1];
              bf[qi + 2] = p[cj + 2];
              bf[qi + 3] = j < tl ? ap[j] : 255;
            }
          }
        if (depth == 8)
          for (var i = 0; i < area; i++) {
            var qi = i << 2, j = data[i], cj = 3 * j;
            bf[qi] = p[cj];
            bf[qi + 1] = p[cj + 1];
            bf[qi + 2] = p[cj + 2];
            bf[qi + 3] = j < tl ? ap[j] : 255;
          }
      } else if (ctype == 4) {
        if (depth == 8)
          for (var i = 0; i < area; i++) {
            var qi = i << 2, di = i << 1, gr = data[di];
            bf[qi] = gr;
            bf[qi + 1] = gr;
            bf[qi + 2] = gr;
            bf[qi + 3] = data[di + 1];
          }
        if (depth == 16)
          for (var i = 0; i < area; i++) {
            var qi = i << 2, di = i << 2, gr = data[di];
            bf[qi] = gr;
            bf[qi + 1] = gr;
            bf[qi + 2] = gr;
            bf[qi + 3] = data[di + 2];
          }
      } else if (ctype == 0) {
        var tr = out.tabs["tRNS"] ? out.tabs["tRNS"] : -1;
        for (var y = 0; y < h; y++) {
          var off = y * bpl, to = y * w;
          if (depth == 1)
            for (var x = 0; x < w; x++) {
              var gr = 255 * (data[off + (x >>> 3)] >>> 7 - (x & 7) & 1), al = gr == tr * 255 ? 0 : 255;
              bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;
            }
          else if (depth == 2)
            for (var x = 0; x < w; x++) {
              var gr = 85 * (data[off + (x >>> 2)] >>> 6 - ((x & 3) << 1) & 3), al = gr == tr * 85 ? 0 : 255;
              bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;
            }
          else if (depth == 4)
            for (var x = 0; x < w; x++) {
              var gr = 17 * (data[off + (x >>> 1)] >>> 4 - ((x & 1) << 2) & 15), al = gr == tr * 17 ? 0 : 255;
              bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;
            }
          else if (depth == 8)
            for (var x = 0; x < w; x++) {
              var gr = data[off + x], al = gr == tr ? 0 : 255;
              bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;
            }
          else if (depth == 16)
            for (var x = 0; x < w; x++) {
              var gr = data[off + (x << 1)], al = rs(data, off + (x << i)) == tr ? 0 : 255;
              bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;
            }
        }
      }
      return bf;
    };
    UPNG.decode = function(buff) {
      var data = new Uint8Array(buff), offset = 8, bin = UPNG._bin, rUs = bin.readUshort, rUi = bin.readUint;
      var out = {
        tabs: {},
        frames: []
      };
      var dd = new Uint8Array(data.length), doff = 0;
      var fd, foff = 0;
      var mgck = [137, 80, 78, 71, 13, 10, 26, 10];
      for (var i = 0; i < 8; i++)
        if (data[i] != mgck[i])
          throw "The input is not a PNG file!";
      while (offset < data.length) {
        var len = bin.readUint(data, offset);
        offset += 4;
        var type = bin.readASCII(data, offset, 4);
        offset += 4;
        if (type == "IHDR") {
          UPNG.decode._IHDR(data, offset, out);
        } else if (type == "IDAT") {
          for (var i = 0; i < len; i++)
            dd[doff + i] = data[offset + i];
          doff += len;
        } else if (type == "acTL") {
          out.tabs[type] = {
            num_frames: rUi(data, offset),
            num_plays: rUi(data, offset + 4)
          };
          fd = new Uint8Array(data.length);
        } else if (type == "fcTL") {
          if (foff != 0) {
            var fr = out.frames[out.frames.length - 1];
            fr.data = UPNG.decode._decompress(out, fd.slice(0, foff), fr.rect.width, fr.rect.height);
            foff = 0;
          }
          var rct = {
            x: rUi(data, offset + 12),
            y: rUi(data, offset + 16),
            width: rUi(data, offset + 4),
            height: rUi(data, offset + 8)
          };
          var del = rUs(data, offset + 22);
          del = rUs(data, offset + 20) / (del == 0 ? 100 : del);
          var frm = {
            rect: rct,
            delay: Math.round(del * 1e3),
            dispose: data[offset + 24],
            blend: data[offset + 25]
          };
          out.frames.push(frm);
        } else if (type == "fdAT") {
          for (var i = 0; i < len - 4; i++)
            fd[foff + i] = data[offset + i + 4];
          foff += len - 4;
        } else if (type == "pHYs") {
          out.tabs[type] = [bin.readUint(data, offset), bin.readUint(data, offset + 4), data[offset + 8]];
        } else if (type == "cHRM") {
          out.tabs[type] = [];
          for (var i = 0; i < 8; i++)
            out.tabs[type].push(bin.readUint(data, offset + i * 4));
        } else if (type == "tEXt") {
          if (out.tabs[type] == null)
            out.tabs[type] = {};
          var nz = bin.nextZero(data, offset);
          var keyw = bin.readASCII(data, offset, nz - offset);
          var text = bin.readASCII(data, nz + 1, offset + len - nz - 1);
          out.tabs[type][keyw] = text;
        } else if (type == "iTXt") {
          if (out.tabs[type] == null)
            out.tabs[type] = {};
          var nz = 0, off = offset;
          nz = bin.nextZero(data, off);
          var keyw = bin.readASCII(data, off, nz - off);
          off = nz + 1;
          var cflag = data[off], cmeth = data[off + 1];
          off += 2;
          nz = bin.nextZero(data, off);
          var ltag = bin.readASCII(data, off, nz - off);
          off = nz + 1;
          nz = bin.nextZero(data, off);
          var tkeyw = bin.readUTF8(data, off, nz - off);
          off = nz + 1;
          var text = bin.readUTF8(data, off, len - (off - offset));
          out.tabs[type][keyw] = text;
        } else if (type == "PLTE") {
          out.tabs[type] = bin.readBytes(data, offset, len);
        } else if (type == "hIST") {
          var pl = out.tabs["PLTE"].length / 3;
          out.tabs[type] = [];
          for (var i = 0; i < pl; i++)
            out.tabs[type].push(rUs(data, offset + i * 2));
        } else if (type == "tRNS") {
          if (out.ctype == 3)
            out.tabs[type] = bin.readBytes(data, offset, len);
          else if (out.ctype == 0)
            out.tabs[type] = rUs(data, offset);
          else if (out.ctype == 2)
            out.tabs[type] = [rUs(data, offset), rUs(data, offset + 2), rUs(data, offset + 4)];
        } else if (type == "gAMA")
          out.tabs[type] = bin.readUint(data, offset) / 1e5;
        else if (type == "sRGB")
          out.tabs[type] = data[offset];
        else if (type == "bKGD") {
          if (out.ctype == 0 || out.ctype == 4)
            out.tabs[type] = [rUs(data, offset)];
          else if (out.ctype == 2 || out.ctype == 6)
            out.tabs[type] = [rUs(data, offset), rUs(data, offset + 2), rUs(data, offset + 4)];
          else if (out.ctype == 3)
            out.tabs[type] = data[offset];
        } else if (type == "IEND") {
          break;
        }
        offset += len;
        var crc = bin.readUint(data, offset);
        offset += 4;
      }
      if (foff != 0) {
        var fr = out.frames[out.frames.length - 1];
        fr.data = UPNG.decode._decompress(out, fd.slice(0, foff), fr.rect.width, fr.rect.height);
        foff = 0;
      }
      out.data = UPNG.decode._decompress(out, dd, out.width, out.height);
      delete out.compress;
      delete out.interlace;
      delete out.filter;
      return out;
    };
    UPNG.decode._decompress = function(out, dd, w, h) {
      var time = Date.now();
      var bpp = UPNG.decode._getBPP(out), bpl = Math.ceil(w * bpp / 8), buff = new Uint8Array((bpl + 1 + out.interlace) * h);
      dd = UPNG.decode._inflate(dd, buff);
      var time = Date.now();
      if (out.interlace == 0)
        dd = UPNG.decode._filterZero(dd, out, 0, w, h);
      else if (out.interlace == 1)
        dd = UPNG.decode._readInterlace(dd, out);
      return dd;
    };
    UPNG.decode._inflate = function(data, buff) {
      var out = UPNG["inflateRaw"](new Uint8Array(data.buffer, 2, data.length - 6), buff);
      return out;
    };
    UPNG.inflateRaw = function() {
      var H = {};
      H.H = {};
      H.H.N = function(N, W) {
        var R = Uint8Array, i = 0, m = 0, J = 0, h = 0, Q = 0, X = 0, u = 0, w = 0, d = 0, v, C;
        if (N[0] == 3 && N[1] == 0)
          return W ? W : new R(0);
        var V = H.H, n = V.b, A = V.e, l = V.R, M = V.n, I = V.A, e = V.Z, b = V.m, Z = W == null;
        if (Z)
          W = new R(N.length >>> 2 << 3);
        while (i == 0) {
          i = n(N, d, 1);
          m = n(N, d + 1, 2);
          d += 3;
          if (m == 0) {
            if ((d & 7) != 0)
              d += 8 - (d & 7);
            var D = (d >>> 3) + 4, q = N[D - 4] | N[D - 3] << 8;
            if (Z)
              W = H.H.W(W, w + q);
            W.set(new R(N.buffer, N.byteOffset + D, q), w);
            d = D + q << 3;
            w += q;
            continue;
          }
          if (Z)
            W = H.H.W(W, w + (1 << 17));
          if (m == 1) {
            v = b.J;
            C = b.h;
            X = (1 << 9) - 1;
            u = (1 << 5) - 1;
          }
          if (m == 2) {
            J = A(N, d, 5) + 257;
            h = A(N, d + 5, 5) + 1;
            Q = A(N, d + 10, 4) + 4;
            d += 14;
            var E = d, j = 1;
            for (var c = 0; c < 38; c += 2) {
              b.Q[c] = 0;
              b.Q[c + 1] = 0;
            }
            for (var c = 0; c < Q; c++) {
              var K = A(N, d + c * 3, 3);
              b.Q[(b.X[c] << 1) + 1] = K;
              if (K > j)
                j = K;
            }
            d += 3 * Q;
            M(b.Q, j);
            I(b.Q, j, b.u);
            v = b.w;
            C = b.d;
            d = l(b.u, (1 << j) - 1, J + h, N, d, b.v);
            var r = V.V(b.v, 0, J, b.C);
            X = (1 << r) - 1;
            var S = V.V(b.v, J, h, b.D);
            u = (1 << S) - 1;
            M(b.C, r);
            I(b.C, r, v);
            M(b.D, S);
            I(b.D, S, C);
          }
          while (true) {
            var T = v[e(N, d) & X];
            d += T & 15;
            var p = T >>> 4;
            if (p >>> 8 == 0) {
              W[w++] = p;
            } else if (p == 256) {
              break;
            } else {
              var z = w + p - 254;
              if (p > 264) {
                var _ = b.q[p - 257];
                z = w + (_ >>> 3) + A(N, d, _ & 7);
                d += _ & 7;
              }
              var $ = C[e(N, d) & u];
              d += $ & 15;
              var s = $ >>> 4, Y = b.c[s], a = (Y >>> 4) + n(N, d, Y & 15);
              d += Y & 15;
              while (w < z) {
                W[w] = W[w++ - a];
                W[w] = W[w++ - a];
                W[w] = W[w++ - a];
                W[w] = W[w++ - a];
              }
              w = z;
            }
          }
        }
        return W.length == w ? W : W.slice(0, w);
      };
      H.H.W = function(N, W) {
        var R = N.length;
        if (W <= R)
          return N;
        var V = new Uint8Array(R << 1);
        V.set(N, 0);
        return V;
      };
      H.H.R = function(N, W, R, V, n, A) {
        var l = H.H.e, M = H.H.Z, I = 0;
        while (I < R) {
          var e = N[M(V, n) & W];
          n += e & 15;
          var b = e >>> 4;
          if (b <= 15) {
            A[I] = b;
            I++;
          } else {
            var Z = 0, m = 0;
            if (b == 16) {
              m = 3 + l(V, n, 2);
              n += 2;
              Z = A[I - 1];
            } else if (b == 17) {
              m = 3 + l(V, n, 3);
              n += 3;
            } else if (b == 18) {
              m = 11 + l(V, n, 7);
              n += 7;
            }
            var J = I + m;
            while (I < J) {
              A[I] = Z;
              I++;
            }
          }
        }
        return n;
      };
      H.H.V = function(N, W, R, V) {
        var n = 0, A = 0, l = V.length >>> 1;
        while (A < R) {
          var M = N[A + W];
          V[A << 1] = 0;
          V[(A << 1) + 1] = M;
          if (M > n)
            n = M;
          A++;
        }
        while (A < l) {
          V[A << 1] = 0;
          V[(A << 1) + 1] = 0;
          A++;
        }
        return n;
      };
      H.H.n = function(N, W) {
        var R = H.H.m, V = N.length, n, A, l, M, I, e = R.j;
        for (var M = 0; M <= W; M++)
          e[M] = 0;
        for (M = 1; M < V; M += 2)
          e[N[M]]++;
        var b = R.K;
        n = 0;
        e[0] = 0;
        for (A = 1; A <= W; A++) {
          n = n + e[A - 1] << 1;
          b[A] = n;
        }
        for (l = 0; l < V; l += 2) {
          I = N[l + 1];
          if (I != 0) {
            N[l] = b[I];
            b[I]++;
          }
        }
      };
      H.H.A = function(N, W, R) {
        var V = N.length, n = H.H.m, A = n.r;
        for (var l = 0; l < V; l += 2)
          if (N[l + 1] != 0) {
            var M = l >> 1, I = N[l + 1], e = M << 4 | I, b = W - I, Z = N[l] << b, m = Z + (1 << b);
            while (Z != m) {
              var J = A[Z] >>> 15 - W;
              R[J] = e;
              Z++;
            }
          }
      };
      H.H.l = function(N, W) {
        var R = H.H.m.r, V = 15 - W;
        for (var n = 0; n < N.length; n += 2) {
          var A = N[n] << W - N[n + 1];
          N[n] = R[A] >>> V;
        }
      };
      H.H.M = function(N, W, R) {
        R = R << (W & 7);
        var V = W >>> 3;
        N[V] |= R;
        N[V + 1] |= R >>> 8;
      };
      H.H.I = function(N, W, R) {
        R = R << (W & 7);
        var V = W >>> 3;
        N[V] |= R;
        N[V + 1] |= R >>> 8;
        N[V + 2] |= R >>> 16;
      };
      H.H.e = function(N, W, R) {
        return (N[W >>> 3] | N[(W >>> 3) + 1] << 8) >>> (W & 7) & (1 << R) - 1;
      };
      H.H.b = function(N, W, R) {
        return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16) >>> (W & 7) & (1 << R) - 1;
      };
      H.H.Z = function(N, W) {
        return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16) >>> (W & 7);
      };
      H.H.i = function(N, W) {
        return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16 | N[(W >>> 3) + 3] << 24) >>> (W & 7);
      };
      H.H.m = function() {
        var N = Uint16Array, W = Uint32Array;
        return {
          K: new N(16),
          j: new N(16),
          X: [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
          S: [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999],
          T: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0],
          q: new N(32),
          p: [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 65535, 65535],
          z: [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0],
          c: new W(32),
          J: new N(512),
          _: [],
          h: new N(32),
          $: [],
          w: new N(32768),
          C: [],
          v: [],
          d: new N(32768),
          D: [],
          u: new N(512),
          Q: [],
          r: new N(1 << 15),
          s: new W(286),
          Y: new W(30),
          a: new W(19),
          t: new W(15e3),
          k: new N(1 << 16),
          g: new N(1 << 15)
        };
      }();
      (function() {
        var N = H.H.m, W = 1 << 15;
        for (var R = 0; R < W; R++) {
          var V = R;
          V = (V & 2863311530) >>> 1 | (V & 1431655765) << 1;
          V = (V & 3435973836) >>> 2 | (V & 858993459) << 2;
          V = (V & 4042322160) >>> 4 | (V & 252645135) << 4;
          V = (V & 4278255360) >>> 8 | (V & 16711935) << 8;
          N.r[R] = (V >>> 16 | V << 16) >>> 17;
        }
        function n(A, l, M) {
          while (l-- != 0)
            A.push(0, M);
        }
        for (var R = 0; R < 32; R++) {
          N.q[R] = N.S[R] << 3 | N.T[R];
          N.c[R] = N.p[R] << 4 | N.z[R];
        }
        n(N._, 144, 8);
        n(N._, 255 - 143, 9);
        n(N._, 279 - 255, 7);
        n(N._, 287 - 279, 8);
        H.H.n(N._, 9);
        H.H.A(N._, 9, N.J);
        H.H.l(N._, 9);
        n(N.$, 32, 5);
        H.H.n(N.$, 5);
        H.H.A(N.$, 5, N.h);
        H.H.l(N.$, 5);
        n(N.Q, 19, 0);
        n(N.C, 286, 0);
        n(N.D, 30, 0);
        n(N.v, 320, 0);
      })();
      return H.H.N;
    }();
    UPNG.decode._readInterlace = function(data, out) {
      var w = out.width, h = out.height;
      var bpp = UPNG.decode._getBPP(out), cbpp = bpp >> 3, bpl = Math.ceil(w * bpp / 8);
      var img = new Uint8Array(h * bpl);
      var di = 0;
      var starting_row = [0, 0, 4, 0, 2, 0, 1];
      var starting_col = [0, 4, 0, 2, 0, 1, 0];
      var row_increment = [8, 8, 8, 4, 4, 2, 2];
      var col_increment = [8, 8, 4, 4, 2, 2, 1];
      var pass = 0;
      while (pass < 7) {
        var ri = row_increment[pass], ci = col_increment[pass];
        var sw = 0, sh = 0;
        var cr = starting_row[pass];
        while (cr < h) {
          cr += ri;
          sh++;
        }
        var cc = starting_col[pass];
        while (cc < w) {
          cc += ci;
          sw++;
        }
        var bpll = Math.ceil(sw * bpp / 8);
        UPNG.decode._filterZero(data, out, di, sw, sh);
        var y = 0, row = starting_row[pass];
        while (row < h) {
          var col = starting_col[pass];
          var cdi = di + y * bpll << 3;
          while (col < w) {
            if (bpp == 1) {
              var val = data[cdi >> 3];
              val = val >> 7 - (cdi & 7) & 1;
              img[row * bpl + (col >> 3)] |= val << 7 - ((col & 7) << 0);
            }
            if (bpp == 2) {
              var val = data[cdi >> 3];
              val = val >> 6 - (cdi & 7) & 3;
              img[row * bpl + (col >> 2)] |= val << 6 - ((col & 3) << 1);
            }
            if (bpp == 4) {
              var val = data[cdi >> 3];
              val = val >> 4 - (cdi & 7) & 15;
              img[row * bpl + (col >> 1)] |= val << 4 - ((col & 1) << 2);
            }
            if (bpp >= 8) {
              var ii = row * bpl + col * cbpp;
              for (var j = 0; j < cbpp; j++)
                img[ii + j] = data[(cdi >> 3) + j];
            }
            cdi += bpp;
            col += ci;
          }
          y++;
          row += ri;
        }
        if (sw * sh != 0)
          di += sh * (1 + bpll);
        pass = pass + 1;
      }
      return img;
    };
    UPNG.decode._getBPP = function(out) {
      var noc = [1, null, 3, 1, 2, null, 4][out.ctype];
      return noc * out.depth;
    };
    UPNG.decode._filterZero = function(data, out, off, w, h) {
      var bpp = UPNG.decode._getBPP(out), bpl = Math.ceil(w * bpp / 8), paeth = UPNG.decode._paeth;
      bpp = Math.ceil(bpp / 8);
      var i = 0, di = 1, type = data[off], x = 0;
      if (type > 1)
        data[off] = [0, 0, 1][type - 2];
      if (type == 3)
        for (x = bpp; x < bpl; x++)
          data[x + 1] = data[x + 1] + (data[x + 1 - bpp] >>> 1) & 255;
      for (var y = 0; y < h; y++) {
        i = off + y * bpl;
        di = i + y + 1;
        type = data[di - 1];
        x = 0;
        if (type == 0)
          for (; x < bpl; x++)
            data[i + x] = data[di + x];
        else if (type == 1) {
          for (; x < bpp; x++)
            data[i + x] = data[di + x];
          for (; x < bpl; x++)
            data[i + x] = data[di + x] + data[i + x - bpp];
        } else if (type == 2) {
          for (; x < bpl; x++)
            data[i + x] = data[di + x] + data[i + x - bpl];
        } else if (type == 3) {
          for (; x < bpp; x++)
            data[i + x] = data[di + x] + (data[i + x - bpl] >>> 1);
          for (; x < bpl; x++)
            data[i + x] = data[di + x] + (data[i + x - bpl] + data[i + x - bpp] >>> 1);
        } else {
          for (; x < bpp; x++)
            data[i + x] = data[di + x] + paeth(0, data[i + x - bpl], 0);
          for (; x < bpl; x++)
            data[i + x] = data[di + x] + paeth(data[i + x - bpp], data[i + x - bpl], data[i + x - bpp - bpl]);
        }
      }
      return data;
    };
    UPNG.decode._paeth = function(a, b, c) {
      var p = a + b - c, pa = p - a, pb = p - b, pc = p - c;
      if (pa * pa <= pb * pb && pa * pa <= pc * pc)
        return a;
      else if (pb * pb <= pc * pc)
        return b;
      return c;
    };
    UPNG.decode._IHDR = function(data, offset, out) {
      var bin = UPNG._bin;
      out.width = bin.readUint(data, offset);
      offset += 4;
      out.height = bin.readUint(data, offset);
      offset += 4;
      out.depth = data[offset];
      offset++;
      out.ctype = data[offset];
      offset++;
      out.compress = data[offset];
      offset++;
      out.filter = data[offset];
      offset++;
      out.interlace = data[offset];
      offset++;
    };
    UPNG._bin = {
      nextZero: function(data, p) {
        while (data[p] != 0)
          p++;
        return p;
      },
      readUshort: function(buff, p) {
        return buff[p] << 8 | buff[p + 1];
      },
      writeUshort: function(buff, p, n) {
        buff[p] = n >> 8 & 255;
        buff[p + 1] = n & 255;
      },
      readUint: function(buff, p) {
        return buff[p] * (256 * 256 * 256) + (buff[p + 1] << 16 | buff[p + 2] << 8 | buff[p + 3]);
      },
      writeUint: function(buff, p, n) {
        buff[p] = n >> 24 & 255;
        buff[p + 1] = n >> 16 & 255;
        buff[p + 2] = n >> 8 & 255;
        buff[p + 3] = n & 255;
      },
      readASCII: function(buff, p, l) {
        var s = "";
        for (var i = 0; i < l; i++)
          s += String.fromCharCode(buff[p + i]);
        return s;
      },
      writeASCII: function(data, p, s) {
        for (var i = 0; i < s.length; i++)
          data[p + i] = s.charCodeAt(i);
      },
      readBytes: function(buff, p, l) {
        var arr = [];
        for (var i = 0; i < l; i++)
          arr.push(buff[p + i]);
        return arr;
      },
      pad: function(n) {
        return n.length < 2 ? "0" + n : n;
      },
      readUTF8: function(buff, p, l) {
        var s = "", ns;
        for (var i = 0; i < l; i++)
          s += "%" + UPNG._bin.pad(buff[p + i].toString(16));
        try {
          ns = decodeURIComponent(s);
        } catch (e) {
          return UPNG._bin.readASCII(buff, p, l);
        }
        return ns;
      }
    };
    UPNG._copyTile = function(sb, sw, sh, tb, tw, th, xoff, yoff, mode) {
      var w = Math.min(sw, tw), h = Math.min(sh, th);
      var si = 0, ti = 0;
      for (var y = 0; y < h; y++)
        for (var x = 0; x < w; x++) {
          if (xoff >= 0 && yoff >= 0) {
            si = y * sw + x << 2;
            ti = (yoff + y) * tw + xoff + x << 2;
          } else {
            si = (-yoff + y) * sw - xoff + x << 2;
            ti = y * tw + x << 2;
          }
          if (mode == 0) {
            tb[ti] = sb[si];
            tb[ti + 1] = sb[si + 1];
            tb[ti + 2] = sb[si + 2];
            tb[ti + 3] = sb[si + 3];
          } else if (mode == 1) {
            var fa = sb[si + 3] * (1 / 255), fr = sb[si] * fa, fg = sb[si + 1] * fa, fb = sb[si + 2] * fa;
            var ba = tb[ti + 3] * (1 / 255), br = tb[ti] * ba, bg = tb[ti + 1] * ba, bb = tb[ti + 2] * ba;
            var ifa = 1 - fa, oa = fa + ba * ifa, ioa = oa == 0 ? 0 : 1 / oa;
            tb[ti + 3] = 255 * oa;
            tb[ti + 0] = (fr + br * ifa) * ioa;
            tb[ti + 1] = (fg + bg * ifa) * ioa;
            tb[ti + 2] = (fb + bb * ifa) * ioa;
          } else if (mode == 2) {
            var fa = sb[si + 3], fr = sb[si], fg = sb[si + 1], fb = sb[si + 2];
            var ba = tb[ti + 3], br = tb[ti], bg = tb[ti + 1], bb = tb[ti + 2];
            if (fa == ba && fr == br && fg == bg && fb == bb) {
              tb[ti] = 0;
              tb[ti + 1] = 0;
              tb[ti + 2] = 0;
              tb[ti + 3] = 0;
            } else {
              tb[ti] = fr;
              tb[ti + 1] = fg;
              tb[ti + 2] = fb;
              tb[ti + 3] = fa;
            }
          } else if (mode == 3) {
            var fa = sb[si + 3], fr = sb[si], fg = sb[si + 1], fb = sb[si + 2];
            var ba = tb[ti + 3], br = tb[ti], bg = tb[ti + 1], bb = tb[ti + 2];
            if (fa == ba && fr == br && fg == bg && fb == bb)
              continue;
            if (fa < 220 && ba > 20)
              return false;
          }
        }
      return true;
    };
    UPNG.encode = function(bufs, w, h, ps, dels, tabs, forbidPlte) {
      if (ps == null)
        ps = 0;
      if (forbidPlte == null)
        forbidPlte = false;
      var nimg = UPNG.encode.compress(bufs, w, h, ps, [false, false, false, 0, forbidPlte]);
      UPNG.encode.compressPNG(nimg, -1);
      return UPNG.encode._main(nimg, w, h, dels, tabs);
    };
    UPNG.encodeLL = function(bufs, w, h, cc, ac, depth, dels, tabs) {
      var nimg = {
        ctype: 0 + (cc == 1 ? 0 : 2) + (ac == 0 ? 0 : 4),
        depth,
        frames: []
      };
      var time = Date.now();
      var bipp = (cc + ac) * depth, bipl = bipp * w;
      for (var i = 0; i < bufs.length; i++)
        nimg.frames.push({
          rect: {
            x: 0,
            y: 0,
            width: w,
            height: h
          },
          img: new Uint8Array(bufs[i]),
          blend: 0,
          dispose: 1,
          bpp: Math.ceil(bipp / 8),
          bpl: Math.ceil(bipl / 8)
        });
      UPNG.encode.compressPNG(nimg, 0, true);
      var out = UPNG.encode._main(nimg, w, h, dels, tabs);
      return out;
    };
    UPNG.encode._main = function(nimg, w, h, dels, tabs) {
      if (tabs == null)
        tabs = {};
      var crc = UPNG.crc.crc, wUi = UPNG._bin.writeUint, wUs = UPNG._bin.writeUshort, wAs = UPNG._bin.writeASCII;
      var offset = 8, anim = nimg.frames.length > 1, pltAlpha = false;
      var leng = 8 + (16 + 5 + 4) + (anim ? 20 : 0);
      if (tabs["sRGB"] != null)
        leng += 8 + 1 + 4;
      if (tabs["pHYs"] != null)
        leng += 8 + 9 + 4;
      if (nimg.ctype == 3) {
        var dl = nimg.plte.length;
        for (var i = 0; i < dl; i++)
          if (nimg.plte[i] >>> 24 != 255)
            pltAlpha = true;
        leng += 8 + dl * 3 + 4 + (pltAlpha ? 8 + dl * 1 + 4 : 0);
      }
      for (var j = 0; j < nimg.frames.length; j++) {
        var fr = nimg.frames[j];
        if (anim)
          leng += 38;
        leng += fr.cimg.length + 12;
        if (j != 0)
          leng += 4;
      }
      leng += 12;
      var data = new Uint8Array(leng);
      var wr = [137, 80, 78, 71, 13, 10, 26, 10];
      for (var i = 0; i < 8; i++)
        data[i] = wr[i];
      wUi(data, offset, 13);
      offset += 4;
      wAs(data, offset, "IHDR");
      offset += 4;
      wUi(data, offset, w);
      offset += 4;
      wUi(data, offset, h);
      offset += 4;
      data[offset] = nimg.depth;
      offset++;
      data[offset] = nimg.ctype;
      offset++;
      data[offset] = 0;
      offset++;
      data[offset] = 0;
      offset++;
      data[offset] = 0;
      offset++;
      wUi(data, offset, crc(data, offset - 17, 17));
      offset += 4;
      if (tabs["sRGB"] != null) {
        wUi(data, offset, 1);
        offset += 4;
        wAs(data, offset, "sRGB");
        offset += 4;
        data[offset] = tabs["sRGB"];
        offset++;
        wUi(data, offset, crc(data, offset - 5, 5));
        offset += 4;
      }
      if (tabs["pHYs"] != null) {
        wUi(data, offset, 9);
        offset += 4;
        wAs(data, offset, "pHYs");
        offset += 4;
        wUi(data, offset, tabs["pHYs"][0]);
        offset += 4;
        wUi(data, offset, tabs["pHYs"][1]);
        offset += 4;
        data[offset] = tabs["pHYs"][2];
        offset++;
        wUi(data, offset, crc(data, offset - 13, 13));
        offset += 4;
      }
      if (anim) {
        wUi(data, offset, 8);
        offset += 4;
        wAs(data, offset, "acTL");
        offset += 4;
        wUi(data, offset, nimg.frames.length);
        offset += 4;
        wUi(data, offset, tabs["loop"] != null ? tabs["loop"] : 0);
        offset += 4;
        wUi(data, offset, crc(data, offset - 12, 12));
        offset += 4;
      }
      if (nimg.ctype == 3) {
        var dl = nimg.plte.length;
        wUi(data, offset, dl * 3);
        offset += 4;
        wAs(data, offset, "PLTE");
        offset += 4;
        for (var i = 0; i < dl; i++) {
          var ti = i * 3, c = nimg.plte[i], r = c & 255, g = c >>> 8 & 255, b = c >>> 16 & 255;
          data[offset + ti + 0] = r;
          data[offset + ti + 1] = g;
          data[offset + ti + 2] = b;
        }
        offset += dl * 3;
        wUi(data, offset, crc(data, offset - dl * 3 - 4, dl * 3 + 4));
        offset += 4;
        if (pltAlpha) {
          wUi(data, offset, dl);
          offset += 4;
          wAs(data, offset, "tRNS");
          offset += 4;
          for (var i = 0; i < dl; i++)
            data[offset + i] = nimg.plte[i] >>> 24 & 255;
          offset += dl;
          wUi(data, offset, crc(data, offset - dl - 4, dl + 4));
          offset += 4;
        }
      }
      var fi = 0;
      for (var j = 0; j < nimg.frames.length; j++) {
        var fr = nimg.frames[j];
        if (anim) {
          wUi(data, offset, 26);
          offset += 4;
          wAs(data, offset, "fcTL");
          offset += 4;
          wUi(data, offset, fi++);
          offset += 4;
          wUi(data, offset, fr.rect.width);
          offset += 4;
          wUi(data, offset, fr.rect.height);
          offset += 4;
          wUi(data, offset, fr.rect.x);
          offset += 4;
          wUi(data, offset, fr.rect.y);
          offset += 4;
          wUs(data, offset, dels[j]);
          offset += 2;
          wUs(data, offset, 1e3);
          offset += 2;
          data[offset] = fr.dispose;
          offset++;
          data[offset] = fr.blend;
          offset++;
          wUi(data, offset, crc(data, offset - 30, 30));
          offset += 4;
        }
        var imgd = fr.cimg, dl = imgd.length;
        wUi(data, offset, dl + (j == 0 ? 0 : 4));
        offset += 4;
        var ioff = offset;
        wAs(data, offset, j == 0 ? "IDAT" : "fdAT");
        offset += 4;
        if (j != 0) {
          wUi(data, offset, fi++);
          offset += 4;
        }
        data.set(imgd, offset);
        offset += dl;
        wUi(data, offset, crc(data, ioff, offset - ioff));
        offset += 4;
      }
      wUi(data, offset, 0);
      offset += 4;
      wAs(data, offset, "IEND");
      offset += 4;
      wUi(data, offset, crc(data, offset - 4, 4));
      offset += 4;
      return data.buffer;
    };
    UPNG.encode.compressPNG = function(out, filter, levelZero) {
      for (var i = 0; i < out.frames.length; i++) {
        var frm = out.frames[i], nw = frm.rect.width, nh = frm.rect.height;
        var fdata = new Uint8Array(nh * frm.bpl + nh);
        frm.cimg = UPNG.encode._filterZero(frm.img, nh, frm.bpp, frm.bpl, fdata, filter, levelZero);
      }
    };
    UPNG.encode.compress = function(bufs, w, h, ps, prms) {
      var onlyBlend = prms[0], evenCrd = prms[1], forbidPrev = prms[2], minBits = prms[3], forbidPlte = prms[4];
      var ctype = 6, depth = 8, alphaAnd = 255;
      for (var j = 0; j < bufs.length; j++) {
        var img = new Uint8Array(bufs[j]), ilen = img.length;
        for (var i = 0; i < ilen; i += 4)
          alphaAnd &= img[i + 3];
      }
      var gotAlpha = alphaAnd != 255;
      var frms = UPNG.encode.framize(bufs, w, h, onlyBlend, evenCrd, forbidPrev);
      var cmap = {}, plte = [], inds = [];
      if (ps != 0) {
        var nbufs = [];
        for (var i = 0; i < frms.length; i++)
          nbufs.push(frms[i].img.buffer);
        var abuf = UPNG.encode.concatRGBA(nbufs), qres = UPNG.quantize(abuf, ps);
        var cof = 0, bb = new Uint8Array(qres.abuf);
        for (var i = 0; i < frms.length; i++) {
          var ti = frms[i].img, bln = ti.length;
          inds.push(new Uint8Array(qres.inds.buffer, cof >> 2, bln >> 2));
          for (var j = 0; j < bln; j += 4) {
            ti[j] = bb[cof + j];
            ti[j + 1] = bb[cof + j + 1];
            ti[j + 2] = bb[cof + j + 2];
            ti[j + 3] = bb[cof + j + 3];
          }
          cof += bln;
        }
        for (var i = 0; i < qres.plte.length; i++)
          plte.push(qres.plte[i].est.rgba);
      } else {
        for (var j = 0; j < frms.length; j++) {
          var frm = frms[j], img32 = new Uint32Array(frm.img.buffer), nw = frm.rect.width, ilen = img32.length;
          var ind = new Uint8Array(ilen);
          inds.push(ind);
          for (var i = 0; i < ilen; i++) {
            var c = img32[i];
            if (i != 0 && c == img32[i - 1])
              ind[i] = ind[i - 1];
            else if (i > nw && c == img32[i - nw])
              ind[i] = ind[i - nw];
            else {
              var cmc = cmap[c];
              if (cmc == null) {
                cmap[c] = cmc = plte.length;
                plte.push(c);
                if (plte.length >= 300)
                  break;
              }
              ind[i] = cmc;
            }
          }
        }
      }
      var cc = plte.length;
      if (cc <= 256 && forbidPlte == false) {
        if (cc <= 2)
          depth = 1;
        else if (cc <= 4)
          depth = 2;
        else if (cc <= 16)
          depth = 4;
        else
          depth = 8;
        depth = Math.max(depth, minBits);
      }
      for (var j = 0; j < frms.length; j++) {
        var frm = frms[j], nx = frm.rect.x, ny = frm.rect.y, nw = frm.rect.width, nh = frm.rect.height;
        var cimg = frm.img, cimg32 = new Uint32Array(cimg.buffer);
        var bpl = 4 * nw, bpp = 4;
        if (cc <= 256 && forbidPlte == false) {
          bpl = Math.ceil(depth * nw / 8);
          var nimg = new Uint8Array(bpl * nh);
          var inj = inds[j];
          for (var y = 0; y < nh; y++) {
            var i = y * bpl, ii = y * nw;
            if (depth == 8)
              for (var x = 0; x < nw; x++)
                nimg[i + x] = inj[ii + x];
            else if (depth == 4)
              for (var x = 0; x < nw; x++)
                nimg[i + (x >> 1)] |= inj[ii + x] << 4 - (x & 1) * 4;
            else if (depth == 2)
              for (var x = 0; x < nw; x++)
                nimg[i + (x >> 2)] |= inj[ii + x] << 6 - (x & 3) * 2;
            else if (depth == 1)
              for (var x = 0; x < nw; x++)
                nimg[i + (x >> 3)] |= inj[ii + x] << 7 - (x & 7) * 1;
          }
          cimg = nimg;
          ctype = 3;
          bpp = 1;
        } else if (gotAlpha == false && frms.length == 1) {
          var nimg = new Uint8Array(nw * nh * 3), area = nw * nh;
          for (var i = 0; i < area; i++) {
            var ti = i * 3, qi = i * 4;
            nimg[ti] = cimg[qi];
            nimg[ti + 1] = cimg[qi + 1];
            nimg[ti + 2] = cimg[qi + 2];
          }
          cimg = nimg;
          ctype = 2;
          bpp = 3;
          bpl = 3 * nw;
        }
        frm.img = cimg;
        frm.bpl = bpl;
        frm.bpp = bpp;
      }
      return {
        ctype,
        depth,
        plte,
        frames: frms
      };
    };
    UPNG.encode.framize = function(bufs, w, h, alwaysBlend, evenCrd, forbidPrev) {
      var frms = [];
      for (var j = 0; j < bufs.length; j++) {
        var cimg = new Uint8Array(bufs[j]), cimg32 = new Uint32Array(cimg.buffer);
        var nimg;
        var nx = 0, ny = 0, nw = w, nh = h, blend = alwaysBlend ? 1 : 0;
        if (j != 0) {
          var tlim = forbidPrev || alwaysBlend || j == 1 || frms[j - 2].dispose != 0 ? 1 : 2, tstp = 0, tarea = 1e9;
          for (var it = 0; it < tlim; it++) {
            var pimg = new Uint8Array(bufs[j - 1 - it]), p32 = new Uint32Array(bufs[j - 1 - it]);
            var mix = w, miy = h, max = -1, may = -1;
            for (var y = 0; y < h; y++)
              for (var x = 0; x < w; x++) {
                var i = y * w + x;
                if (cimg32[i] != p32[i]) {
                  if (x < mix)
                    mix = x;
                  if (x > max)
                    max = x;
                  if (y < miy)
                    miy = y;
                  if (y > may)
                    may = y;
                }
              }
            if (max == -1)
              mix = miy = max = may = 0;
            if (evenCrd) {
              if ((mix & 1) == 1)
                mix--;
              if ((miy & 1) == 1)
                miy--;
            }
            var sarea = (max - mix + 1) * (may - miy + 1);
            if (sarea < tarea) {
              tarea = sarea;
              tstp = it;
              nx = mix;
              ny = miy;
              nw = max - mix + 1;
              nh = may - miy + 1;
            }
          }
          var pimg = new Uint8Array(bufs[j - 1 - tstp]);
          if (tstp == 1)
            frms[j - 1].dispose = 2;
          nimg = new Uint8Array(nw * nh * 4);
          UPNG._copyTile(pimg, w, h, nimg, nw, nh, -nx, -ny, 0);
          blend = UPNG._copyTile(cimg, w, h, nimg, nw, nh, -nx, -ny, 3) ? 1 : 0;
          if (blend == 1)
            UPNG.encode._prepareDiff(cimg, w, h, nimg, {
              x: nx,
              y: ny,
              width: nw,
              height: nh
            });
          else
            UPNG._copyTile(cimg, w, h, nimg, nw, nh, -nx, -ny, 0);
        } else
          nimg = cimg.slice(0);
        frms.push({
          rect: {
            x: nx,
            y: ny,
            width: nw,
            height: nh
          },
          img: nimg,
          blend,
          dispose: 0
        });
      }
      if (alwaysBlend)
        for (var j = 0; j < frms.length; j++) {
          var frm = frms[j];
          if (frm.blend == 1)
            continue;
          var r0 = frm.rect, r1 = frms[j - 1].rect;
          var miX = Math.min(r0.x, r1.x), miY = Math.min(r0.y, r1.y);
          var maX = Math.max(r0.x + r0.width, r1.x + r1.width), maY = Math.max(r0.y + r0.height, r1.y + r1.height);
          var r = {
            x: miX,
            y: miY,
            width: maX - miX,
            height: maY - miY
          };
          frms[j - 1].dispose = 1;
          if (j - 1 != 0)
            UPNG.encode._updateFrame(bufs, w, h, frms, j - 1, r, evenCrd);
          UPNG.encode._updateFrame(bufs, w, h, frms, j, r, evenCrd);
        }
      var area = 0;
      if (bufs.length != 1)
        for (var i = 0; i < frms.length; i++) {
          var frm = frms[i];
          area += frm.rect.width * frm.rect.height;
        }
      return frms;
    };
    UPNG.encode._updateFrame = function(bufs, w, h, frms, i, r, evenCrd) {
      var U8 = Uint8Array, U32 = Uint32Array;
      var pimg = new U8(bufs[i - 1]), pimg32 = new U32(bufs[i - 1]), nimg = i + 1 < bufs.length ? new U8(bufs[i + 1]) : null;
      var cimg = new U8(bufs[i]), cimg32 = new U32(cimg.buffer);
      var mix = w, miy = h, max = -1, may = -1;
      for (var y = 0; y < r.height; y++)
        for (var x = 0; x < r.width; x++) {
          var cx = r.x + x, cy = r.y + y;
          var j = cy * w + cx, cc = cimg32[j];
          if (cc == 0 || frms[i - 1].dispose == 0 && pimg32[j] == cc && (nimg == null || nimg[j * 4 + 3] != 0)) {
          } else {
            if (cx < mix)
              mix = cx;
            if (cx > max)
              max = cx;
            if (cy < miy)
              miy = cy;
            if (cy > may)
              may = cy;
          }
        }
      if (max == -1)
        mix = miy = max = may = 0;
      if (evenCrd) {
        if ((mix & 1) == 1)
          mix--;
        if ((miy & 1) == 1)
          miy--;
      }
      r = {
        x: mix,
        y: miy,
        width: max - mix + 1,
        height: may - miy + 1
      };
      var fr = frms[i];
      fr.rect = r;
      fr.blend = 1;
      fr.img = new Uint8Array(r.width * r.height * 4);
      if (frms[i - 1].dispose == 0) {
        UPNG._copyTile(pimg, w, h, fr.img, r.width, r.height, -r.x, -r.y, 0);
        UPNG.encode._prepareDiff(cimg, w, h, fr.img, r);
      } else
        UPNG._copyTile(cimg, w, h, fr.img, r.width, r.height, -r.x, -r.y, 0);
    };
    UPNG.encode._prepareDiff = function(cimg, w, h, nimg, rec) {
      UPNG._copyTile(cimg, w, h, nimg, rec.width, rec.height, -rec.x, -rec.y, 2);
    };
    UPNG.encode._filterZero = function(img, h, bpp, bpl, data, filter, levelZero) {
      var fls = [], ftry = [0, 1, 2, 3, 4];
      if (filter != -1)
        ftry = [filter];
      else if (h * bpl > 5e5 || bpp == 1)
        ftry = [0];
      var opts;
      if (levelZero)
        opts = {
          level: 0
        };
      var CMPR = levelZero && UZIP != null ? UZIP : _pako.default;
      for (var i = 0; i < ftry.length; i++) {
        for (var y = 0; y < h; y++)
          UPNG.encode._filterLine(data, img, y, bpl, bpp, ftry[i]);
        fls.push(CMPR["deflate"](data, opts));
      }
      var ti, tsize = 1e9;
      for (var i = 0; i < fls.length; i++)
        if (fls[i].length < tsize) {
          ti = i;
          tsize = fls[i].length;
        }
      return fls[ti];
    };
    UPNG.encode._filterLine = function(data, img, y, bpl, bpp, type) {
      var i = y * bpl, di = i + y, paeth = UPNG.decode._paeth;
      data[di] = type;
      di++;
      if (type == 0) {
        if (bpl < 500)
          for (var x = 0; x < bpl; x++)
            data[di + x] = img[i + x];
        else
          data.set(new Uint8Array(img.buffer, i, bpl), di);
      } else if (type == 1) {
        for (var x = 0; x < bpp; x++)
          data[di + x] = img[i + x];
        for (var x = bpp; x < bpl; x++)
          data[di + x] = img[i + x] - img[i + x - bpp] + 256 & 255;
      } else if (y == 0) {
        for (var x = 0; x < bpp; x++)
          data[di + x] = img[i + x];
        if (type == 2)
          for (var x = bpp; x < bpl; x++)
            data[di + x] = img[i + x];
        if (type == 3)
          for (var x = bpp; x < bpl; x++)
            data[di + x] = img[i + x] - (img[i + x - bpp] >> 1) + 256 & 255;
        if (type == 4)
          for (var x = bpp; x < bpl; x++)
            data[di + x] = img[i + x] - paeth(img[i + x - bpp], 0, 0) + 256 & 255;
      } else {
        if (type == 2) {
          for (var x = 0; x < bpl; x++)
            data[di + x] = img[i + x] + 256 - img[i + x - bpl] & 255;
        }
        if (type == 3) {
          for (var x = 0; x < bpp; x++)
            data[di + x] = img[i + x] + 256 - (img[i + x - bpl] >> 1) & 255;
          for (var x = bpp; x < bpl; x++)
            data[di + x] = img[i + x] + 256 - (img[i + x - bpl] + img[i + x - bpp] >> 1) & 255;
        }
        if (type == 4) {
          for (var x = 0; x < bpp; x++)
            data[di + x] = img[i + x] + 256 - paeth(0, img[i + x - bpl], 0) & 255;
          for (var x = bpp; x < bpl; x++)
            data[di + x] = img[i + x] + 256 - paeth(img[i + x - bpp], img[i + x - bpl], img[i + x - bpp - bpl]) & 255;
        }
      }
    };
    UPNG.crc = {
      table: function() {
        var tab = new Uint32Array(256);
        for (var n = 0; n < 256; n++) {
          var c = n;
          for (var k = 0; k < 8; k++) {
            if (c & 1)
              c = 3988292384 ^ c >>> 1;
            else
              c = c >>> 1;
          }
          tab[n] = c;
        }
        return tab;
      }(),
      update: function(c, buf, off, len) {
        for (var i = 0; i < len; i++)
          c = UPNG.crc.table[(c ^ buf[off + i]) & 255] ^ c >>> 8;
        return c;
      },
      crc: function(b, o, l) {
        return UPNG.crc.update(4294967295, b, o, l) ^ 4294967295;
      }
    };
    UPNG.quantize = function(abuf, ps) {
      var oimg = new Uint8Array(abuf), nimg = oimg.slice(0), nimg32 = new Uint32Array(nimg.buffer);
      var KD = UPNG.quantize.getKDtree(nimg, ps);
      var root = KD[0], leafs = KD[1];
      var planeDst = UPNG.quantize.planeDst;
      var sb = oimg, tb = nimg32, len = sb.length;
      var inds = new Uint8Array(oimg.length >> 2);
      for (var i = 0; i < len; i += 4) {
        var r = sb[i] * (1 / 255), g = sb[i + 1] * (1 / 255), b = sb[i + 2] * (1 / 255), a = sb[i + 3] * (1 / 255);
        var nd = UPNG.quantize.getNearest(root, r, g, b, a);
        inds[i >> 2] = nd.ind;
        tb[i >> 2] = nd.est.rgba;
      }
      return {
        abuf: nimg.buffer,
        inds,
        plte: leafs
      };
    };
    UPNG.quantize.getKDtree = function(nimg, ps, err) {
      if (err == null)
        err = 1e-4;
      var nimg32 = new Uint32Array(nimg.buffer);
      var root = {
        i0: 0,
        i1: nimg.length,
        bst: null,
        est: null,
        tdst: 0,
        left: null,
        right: null
      };
      root.bst = UPNG.quantize.stats(nimg, root.i0, root.i1);
      root.est = UPNG.quantize.estats(root.bst);
      var leafs = [root];
      while (leafs.length < ps) {
        var maxL = 0, mi = 0;
        for (var i = 0; i < leafs.length; i++)
          if (leafs[i].est.L > maxL) {
            maxL = leafs[i].est.L;
            mi = i;
          }
        if (maxL < err)
          break;
        var node = leafs[mi];
        var s0 = UPNG.quantize.splitPixels(nimg, nimg32, node.i0, node.i1, node.est.e, node.est.eMq255);
        var s0wrong = node.i0 >= s0 || node.i1 <= s0;
        if (s0wrong) {
          node.est.L = 0;
          continue;
        }
        var ln = {
          i0: node.i0,
          i1: s0,
          bst: null,
          est: null,
          tdst: 0,
          left: null,
          right: null
        };
        ln.bst = UPNG.quantize.stats(nimg, ln.i0, ln.i1);
        ln.est = UPNG.quantize.estats(ln.bst);
        var rn = {
          i0: s0,
          i1: node.i1,
          bst: null,
          est: null,
          tdst: 0,
          left: null,
          right: null
        };
        rn.bst = {
          R: [],
          m: [],
          N: node.bst.N - ln.bst.N
        };
        for (var i = 0; i < 16; i++)
          rn.bst.R[i] = node.bst.R[i] - ln.bst.R[i];
        for (var i = 0; i < 4; i++)
          rn.bst.m[i] = node.bst.m[i] - ln.bst.m[i];
        rn.est = UPNG.quantize.estats(rn.bst);
        node.left = ln;
        node.right = rn;
        leafs[mi] = ln;
        leafs.push(rn);
      }
      leafs.sort(function(a, b) {
        return b.bst.N - a.bst.N;
      });
      for (var i = 0; i < leafs.length; i++)
        leafs[i].ind = i;
      return [root, leafs];
    };
    UPNG.quantize.getNearest = function(nd, r, g, b, a) {
      if (nd.left == null) {
        nd.tdst = UPNG.quantize.dist(nd.est.q, r, g, b, a);
        return nd;
      }
      var planeDst = UPNG.quantize.planeDst(nd.est, r, g, b, a);
      var node0 = nd.left, node1 = nd.right;
      if (planeDst > 0) {
        node0 = nd.right;
        node1 = nd.left;
      }
      var ln = UPNG.quantize.getNearest(node0, r, g, b, a);
      if (ln.tdst <= planeDst * planeDst)
        return ln;
      var rn = UPNG.quantize.getNearest(node1, r, g, b, a);
      return rn.tdst < ln.tdst ? rn : ln;
    };
    UPNG.quantize.planeDst = function(est, r, g, b, a) {
      var e = est.e;
      return e[0] * r + e[1] * g + e[2] * b + e[3] * a - est.eMq;
    };
    UPNG.quantize.dist = function(q, r, g, b, a) {
      var d0 = r - q[0], d1 = g - q[1], d2 = b - q[2], d3 = a - q[3];
      return d0 * d0 + d1 * d1 + d2 * d2 + d3 * d3;
    };
    UPNG.quantize.splitPixels = function(nimg, nimg32, i0, i1, e, eMq) {
      var vecDot = UPNG.quantize.vecDot;
      i1 -= 4;
      var shfs = 0;
      while (i0 < i1) {
        while (vecDot(nimg, i0, e) <= eMq)
          i0 += 4;
        while (vecDot(nimg, i1, e) > eMq)
          i1 -= 4;
        if (i0 >= i1)
          break;
        var t = nimg32[i0 >> 2];
        nimg32[i0 >> 2] = nimg32[i1 >> 2];
        nimg32[i1 >> 2] = t;
        i0 += 4;
        i1 -= 4;
      }
      while (vecDot(nimg, i0, e) > eMq)
        i0 -= 4;
      return i0 + 4;
    };
    UPNG.quantize.vecDot = function(nimg, i, e) {
      return nimg[i] * e[0] + nimg[i + 1] * e[1] + nimg[i + 2] * e[2] + nimg[i + 3] * e[3];
    };
    UPNG.quantize.stats = function(nimg, i0, i1) {
      var R = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      var m = [0, 0, 0, 0];
      var N = i1 - i0 >> 2;
      for (var i = i0; i < i1; i += 4) {
        var r = nimg[i] * (1 / 255), g = nimg[i + 1] * (1 / 255), b = nimg[i + 2] * (1 / 255), a = nimg[i + 3] * (1 / 255);
        m[0] += r;
        m[1] += g;
        m[2] += b;
        m[3] += a;
        R[0] += r * r;
        R[1] += r * g;
        R[2] += r * b;
        R[3] += r * a;
        R[5] += g * g;
        R[6] += g * b;
        R[7] += g * a;
        R[10] += b * b;
        R[11] += b * a;
        R[15] += a * a;
      }
      R[4] = R[1];
      R[8] = R[2];
      R[9] = R[6];
      R[12] = R[3];
      R[13] = R[7];
      R[14] = R[11];
      return {
        R,
        m,
        N
      };
    };
    UPNG.quantize.estats = function(stats) {
      var R = stats.R, m = stats.m, N = stats.N;
      var m0 = m[0], m1 = m[1], m2 = m[2], m3 = m[3], iN = N == 0 ? 0 : 1 / N;
      var Rj = [R[0] - m0 * m0 * iN, R[1] - m0 * m1 * iN, R[2] - m0 * m2 * iN, R[3] - m0 * m3 * iN, R[4] - m1 * m0 * iN, R[5] - m1 * m1 * iN, R[6] - m1 * m2 * iN, R[7] - m1 * m3 * iN, R[8] - m2 * m0 * iN, R[9] - m2 * m1 * iN, R[10] - m2 * m2 * iN, R[11] - m2 * m3 * iN, R[12] - m3 * m0 * iN, R[13] - m3 * m1 * iN, R[14] - m3 * m2 * iN, R[15] - m3 * m3 * iN];
      var A = Rj, M = UPNG.M4;
      var b = [0.5, 0.5, 0.5, 0.5], mi = 0, tmi = 0;
      if (N != 0)
        for (var i = 0; i < 10; i++) {
          b = M.multVec(A, b);
          tmi = Math.sqrt(M.dot(b, b));
          b = M.sml(1 / tmi, b);
          if (Math.abs(tmi - mi) < 1e-9)
            break;
          mi = tmi;
        }
      var q = [m0 * iN, m1 * iN, m2 * iN, m3 * iN];
      var eMq255 = M.dot(M.sml(255, q), b);
      return {
        Cov: Rj,
        q,
        e: b,
        L: mi,
        eMq255,
        eMq: M.dot(b, q),
        rgba: (Math.round(255 * q[3]) << 24 | Math.round(255 * q[2]) << 16 | Math.round(255 * q[1]) << 8 | Math.round(255 * q[0]) << 0) >>> 0
      };
    };
    UPNG.M4 = {
      multVec: function(m, v) {
        return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2] + m[3] * v[3], m[4] * v[0] + m[5] * v[1] + m[6] * v[2] + m[7] * v[3], m[8] * v[0] + m[9] * v[1] + m[10] * v[2] + m[11] * v[3], m[12] * v[0] + m[13] * v[1] + m[14] * v[2] + m[15] * v[3]];
      },
      dot: function(x, y) {
        return x[0] * y[0] + x[1] * y[1] + x[2] * y[2] + x[3] * y[3];
      },
      sml: function(a, y) {
        return [a * y[0], a * y[1], a * y[2], a * y[3]];
      }
    };
    UPNG.encode.concatRGBA = function(bufs) {
      var tlen = 0;
      for (var i = 0; i < bufs.length; i++)
        tlen += bufs[i].byteLength;
      var nimg = new Uint8Array(tlen), noff = 0;
      for (var i = 0; i < bufs.length; i++) {
        var img = new Uint8Array(bufs[i]), il = img.length;
        for (var j = 0; j < il; j += 4) {
          var r = img[j], g = img[j + 1], b = img[j + 2], a = img[j + 3];
          if (a == 0)
            r = g = b = 0;
          nimg[noff + j] = r;
          nimg[noff + j + 1] = g;
          nimg[noff + j + 2] = b;
          nimg[noff + j + 3] = a;
        }
        noff += il;
      }
      return nimg.buffer;
    };
    var _default = UPNG;
    exports.default = _default;
  }
});

// node_modules/pdf-lib/cjs/utils/png.js
var require_png = __commonJS({
  "node_modules/pdf-lib/cjs/utils/png.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PNG = exports.PngType = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var upng_1 = tslib_1.__importDefault(require_UPNG());
    var getImageType = function(ctype) {
      if (ctype === 0)
        return PngType.Greyscale;
      if (ctype === 2)
        return PngType.Truecolour;
      if (ctype === 3)
        return PngType.IndexedColour;
      if (ctype === 4)
        return PngType.GreyscaleWithAlpha;
      if (ctype === 6)
        return PngType.TruecolourWithAlpha;
      throw new Error("Unknown color type: " + ctype);
    };
    var splitAlphaChannel = function(rgbaChannel) {
      var pixelCount = Math.floor(rgbaChannel.length / 4);
      var rgbChannel = new Uint8Array(pixelCount * 3);
      var alphaChannel = new Uint8Array(pixelCount * 1);
      var rgbaOffset = 0;
      var rgbOffset = 0;
      var alphaOffset = 0;
      while (rgbaOffset < rgbaChannel.length) {
        rgbChannel[rgbOffset++] = rgbaChannel[rgbaOffset++];
        rgbChannel[rgbOffset++] = rgbaChannel[rgbaOffset++];
        rgbChannel[rgbOffset++] = rgbaChannel[rgbaOffset++];
        alphaChannel[alphaOffset++] = rgbaChannel[rgbaOffset++];
      }
      return { rgbChannel, alphaChannel };
    };
    var PngType;
    (function(PngType2) {
      PngType2["Greyscale"] = "Greyscale";
      PngType2["Truecolour"] = "Truecolour";
      PngType2["IndexedColour"] = "IndexedColour";
      PngType2["GreyscaleWithAlpha"] = "GreyscaleWithAlpha";
      PngType2["TruecolourWithAlpha"] = "TruecolourWithAlpha";
    })(PngType = exports.PngType || (exports.PngType = {}));
    var PNG = (
      /** @class */
      function() {
        function PNG2(pngData) {
          var upng = upng_1.default.decode(pngData);
          var frames = upng_1.default.toRGBA8(upng);
          if (frames.length > 1)
            throw new Error("Animated PNGs are not supported");
          var frame = new Uint8Array(frames[0]);
          var _a = splitAlphaChannel(frame), rgbChannel = _a.rgbChannel, alphaChannel = _a.alphaChannel;
          this.rgbChannel = rgbChannel;
          var hasAlphaValues = alphaChannel.some(function(a) {
            return a < 255;
          });
          if (hasAlphaValues)
            this.alphaChannel = alphaChannel;
          this.type = getImageType(upng.ctype);
          this.width = upng.width;
          this.height = upng.height;
          this.bitsPerComponent = 8;
        }
        PNG2.load = function(pngData) {
          return new PNG2(pngData);
        };
        return PNG2;
      }()
    );
    exports.PNG = PNG;
  }
});

// node_modules/pdf-lib/cjs/core/embedders/PngEmbedder.js
var require_PngEmbedder = __commonJS({
  "node_modules/pdf-lib/cjs/core/embedders/PngEmbedder.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var png_1 = require_png();
    var PngEmbedder = (
      /** @class */
      function() {
        function PngEmbedder2(png) {
          this.image = png;
          this.bitsPerComponent = png.bitsPerComponent;
          this.width = png.width;
          this.height = png.height;
          this.colorSpace = "DeviceRGB";
        }
        PngEmbedder2.for = function(imageData) {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var png;
            return tslib_1.__generator(this, function(_a) {
              png = png_1.PNG.load(imageData);
              return [2, new PngEmbedder2(png)];
            });
          });
        };
        PngEmbedder2.prototype.embedIntoContext = function(context, ref) {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var SMask, xObject;
            return tslib_1.__generator(this, function(_a) {
              SMask = this.embedAlphaChannel(context);
              xObject = context.flateStream(this.image.rgbChannel, {
                Type: "XObject",
                Subtype: "Image",
                BitsPerComponent: this.image.bitsPerComponent,
                Width: this.image.width,
                Height: this.image.height,
                ColorSpace: this.colorSpace,
                SMask
              });
              if (ref) {
                context.assign(ref, xObject);
                return [2, ref];
              } else {
                return [2, context.register(xObject)];
              }
              return [
                2
                /*return*/
              ];
            });
          });
        };
        PngEmbedder2.prototype.embedAlphaChannel = function(context) {
          if (!this.image.alphaChannel)
            return void 0;
          var xObject = context.flateStream(this.image.alphaChannel, {
            Type: "XObject",
            Subtype: "Image",
            Height: this.image.height,
            Width: this.image.width,
            BitsPerComponent: this.image.bitsPerComponent,
            ColorSpace: "DeviceGray",
            Decode: [0, 1]
          });
          return context.register(xObject);
        };
        return PngEmbedder2;
      }()
    );
    exports.default = PngEmbedder;
  }
});

// node_modules/pdf-lib/cjs/core/streams/Stream.js
var require_Stream = __commonJS({
  "node_modules/pdf-lib/cjs/core/streams/Stream.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Stream = (
      /** @class */
      function() {
        function Stream2(buffer, start, length) {
          this.bytes = buffer;
          this.start = start || 0;
          this.pos = this.start;
          this.end = !!start && !!length ? start + length : this.bytes.length;
        }
        Object.defineProperty(Stream2.prototype, "length", {
          get: function() {
            return this.end - this.start;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Stream2.prototype, "isEmpty", {
          get: function() {
            return this.length === 0;
          },
          enumerable: false,
          configurable: true
        });
        Stream2.prototype.getByte = function() {
          if (this.pos >= this.end) {
            return -1;
          }
          return this.bytes[this.pos++];
        };
        Stream2.prototype.getUint16 = function() {
          var b0 = this.getByte();
          var b1 = this.getByte();
          if (b0 === -1 || b1 === -1) {
            return -1;
          }
          return (b0 << 8) + b1;
        };
        Stream2.prototype.getInt32 = function() {
          var b0 = this.getByte();
          var b1 = this.getByte();
          var b2 = this.getByte();
          var b3 = this.getByte();
          return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;
        };
        Stream2.prototype.getBytes = function(length, forceClamped) {
          if (forceClamped === void 0) {
            forceClamped = false;
          }
          var bytes = this.bytes;
          var pos = this.pos;
          var strEnd = this.end;
          if (!length) {
            var subarray = bytes.subarray(pos, strEnd);
            return forceClamped ? new Uint8ClampedArray(subarray) : subarray;
          } else {
            var end = pos + length;
            if (end > strEnd) {
              end = strEnd;
            }
            this.pos = end;
            var subarray = bytes.subarray(pos, end);
            return forceClamped ? new Uint8ClampedArray(subarray) : subarray;
          }
        };
        Stream2.prototype.peekByte = function() {
          var peekedByte = this.getByte();
          this.pos--;
          return peekedByte;
        };
        Stream2.prototype.peekBytes = function(length, forceClamped) {
          if (forceClamped === void 0) {
            forceClamped = false;
          }
          var bytes = this.getBytes(length, forceClamped);
          this.pos -= bytes.length;
          return bytes;
        };
        Stream2.prototype.skip = function(n) {
          if (!n) {
            n = 1;
          }
          this.pos += n;
        };
        Stream2.prototype.reset = function() {
          this.pos = this.start;
        };
        Stream2.prototype.moveStart = function() {
          this.start = this.pos;
        };
        Stream2.prototype.makeSubStream = function(start, length) {
          return new Stream2(this.bytes, start, length);
        };
        Stream2.prototype.decode = function() {
          return this.bytes;
        };
        return Stream2;
      }()
    );
    exports.default = Stream;
  }
});

// node_modules/pdf-lib/cjs/core/streams/DecodeStream.js
var require_DecodeStream = __commonJS({
  "node_modules/pdf-lib/cjs/core/streams/DecodeStream.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var errors_1 = require_errors2();
    var Stream_1 = tslib_1.__importDefault(require_Stream());
    var emptyBuffer = new Uint8Array(0);
    var DecodeStream = (
      /** @class */
      function() {
        function DecodeStream2(maybeMinBufferLength) {
          this.pos = 0;
          this.bufferLength = 0;
          this.eof = false;
          this.buffer = emptyBuffer;
          this.minBufferLength = 512;
          if (maybeMinBufferLength) {
            while (this.minBufferLength < maybeMinBufferLength) {
              this.minBufferLength *= 2;
            }
          }
        }
        Object.defineProperty(DecodeStream2.prototype, "isEmpty", {
          get: function() {
            while (!this.eof && this.bufferLength === 0) {
              this.readBlock();
            }
            return this.bufferLength === 0;
          },
          enumerable: false,
          configurable: true
        });
        DecodeStream2.prototype.getByte = function() {
          var pos = this.pos;
          while (this.bufferLength <= pos) {
            if (this.eof) {
              return -1;
            }
            this.readBlock();
          }
          return this.buffer[this.pos++];
        };
        DecodeStream2.prototype.getUint16 = function() {
          var b0 = this.getByte();
          var b1 = this.getByte();
          if (b0 === -1 || b1 === -1) {
            return -1;
          }
          return (b0 << 8) + b1;
        };
        DecodeStream2.prototype.getInt32 = function() {
          var b0 = this.getByte();
          var b1 = this.getByte();
          var b2 = this.getByte();
          var b3 = this.getByte();
          return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;
        };
        DecodeStream2.prototype.getBytes = function(length, forceClamped) {
          if (forceClamped === void 0) {
            forceClamped = false;
          }
          var end;
          var pos = this.pos;
          if (length) {
            this.ensureBuffer(pos + length);
            end = pos + length;
            while (!this.eof && this.bufferLength < end) {
              this.readBlock();
            }
            var bufEnd = this.bufferLength;
            if (end > bufEnd) {
              end = bufEnd;
            }
          } else {
            while (!this.eof) {
              this.readBlock();
            }
            end = this.bufferLength;
          }
          this.pos = end;
          var subarray = this.buffer.subarray(pos, end);
          return forceClamped && !(subarray instanceof Uint8ClampedArray) ? new Uint8ClampedArray(subarray) : subarray;
        };
        DecodeStream2.prototype.peekByte = function() {
          var peekedByte = this.getByte();
          this.pos--;
          return peekedByte;
        };
        DecodeStream2.prototype.peekBytes = function(length, forceClamped) {
          if (forceClamped === void 0) {
            forceClamped = false;
          }
          var bytes = this.getBytes(length, forceClamped);
          this.pos -= bytes.length;
          return bytes;
        };
        DecodeStream2.prototype.skip = function(n) {
          if (!n) {
            n = 1;
          }
          this.pos += n;
        };
        DecodeStream2.prototype.reset = function() {
          this.pos = 0;
        };
        DecodeStream2.prototype.makeSubStream = function(start, length) {
          var end = start + length;
          while (this.bufferLength <= end && !this.eof) {
            this.readBlock();
          }
          return new Stream_1.default(
            this.buffer,
            start,
            length
            /* dict */
          );
        };
        DecodeStream2.prototype.decode = function() {
          while (!this.eof)
            this.readBlock();
          return this.buffer.subarray(0, this.bufferLength);
        };
        DecodeStream2.prototype.readBlock = function() {
          throw new errors_1.MethodNotImplementedError(this.constructor.name, "readBlock");
        };
        DecodeStream2.prototype.ensureBuffer = function(requested) {
          var buffer = this.buffer;
          if (requested <= buffer.byteLength) {
            return buffer;
          }
          var size = this.minBufferLength;
          while (size < requested) {
            size *= 2;
          }
          var buffer2 = new Uint8Array(size);
          buffer2.set(buffer);
          return this.buffer = buffer2;
        };
        return DecodeStream2;
      }()
    );
    exports.default = DecodeStream;
  }
});

// node_modules/pdf-lib/cjs/core/streams/Ascii85Stream.js
var require_Ascii85Stream = __commonJS({
  "node_modules/pdf-lib/cjs/core/streams/Ascii85Stream.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var DecodeStream_1 = tslib_1.__importDefault(require_DecodeStream());
    var isSpace = function(ch) {
      return ch === 32 || ch === 9 || ch === 13 || ch === 10;
    };
    var Ascii85Stream = (
      /** @class */
      function(_super) {
        tslib_1.__extends(Ascii85Stream2, _super);
        function Ascii85Stream2(stream, maybeLength) {
          var _this = _super.call(this, maybeLength) || this;
          _this.stream = stream;
          _this.input = new Uint8Array(5);
          if (maybeLength) {
            maybeLength = 0.8 * maybeLength;
          }
          return _this;
        }
        Ascii85Stream2.prototype.readBlock = function() {
          var TILDA_CHAR = 126;
          var Z_LOWER_CHAR = 122;
          var EOF = -1;
          var stream = this.stream;
          var c = stream.getByte();
          while (isSpace(c)) {
            c = stream.getByte();
          }
          if (c === EOF || c === TILDA_CHAR) {
            this.eof = true;
            return;
          }
          var bufferLength = this.bufferLength;
          var buffer;
          var i;
          if (c === Z_LOWER_CHAR) {
            buffer = this.ensureBuffer(bufferLength + 4);
            for (i = 0; i < 4; ++i) {
              buffer[bufferLength + i] = 0;
            }
            this.bufferLength += 4;
          } else {
            var input = this.input;
            input[0] = c;
            for (i = 1; i < 5; ++i) {
              c = stream.getByte();
              while (isSpace(c)) {
                c = stream.getByte();
              }
              input[i] = c;
              if (c === EOF || c === TILDA_CHAR) {
                break;
              }
            }
            buffer = this.ensureBuffer(bufferLength + i - 1);
            this.bufferLength += i - 1;
            if (i < 5) {
              for (; i < 5; ++i) {
                input[i] = 33 + 84;
              }
              this.eof = true;
            }
            var t = 0;
            for (i = 0; i < 5; ++i) {
              t = t * 85 + (input[i] - 33);
            }
            for (i = 3; i >= 0; --i) {
              buffer[bufferLength + i] = t & 255;
              t >>= 8;
            }
          }
        };
        return Ascii85Stream2;
      }(DecodeStream_1.default)
    );
    exports.default = Ascii85Stream;
  }
});

// node_modules/pdf-lib/cjs/core/streams/AsciiHexStream.js
var require_AsciiHexStream = __commonJS({
  "node_modules/pdf-lib/cjs/core/streams/AsciiHexStream.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var DecodeStream_1 = tslib_1.__importDefault(require_DecodeStream());
    var AsciiHexStream = (
      /** @class */
      function(_super) {
        tslib_1.__extends(AsciiHexStream2, _super);
        function AsciiHexStream2(stream, maybeLength) {
          var _this = _super.call(this, maybeLength) || this;
          _this.stream = stream;
          _this.firstDigit = -1;
          if (maybeLength) {
            maybeLength = 0.5 * maybeLength;
          }
          return _this;
        }
        AsciiHexStream2.prototype.readBlock = function() {
          var UPSTREAM_BLOCK_SIZE = 8e3;
          var bytes = this.stream.getBytes(UPSTREAM_BLOCK_SIZE);
          if (!bytes.length) {
            this.eof = true;
            return;
          }
          var maxDecodeLength = bytes.length + 1 >> 1;
          var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);
          var bufferLength = this.bufferLength;
          var firstDigit = this.firstDigit;
          for (var i = 0, ii = bytes.length; i < ii; i++) {
            var ch = bytes[i];
            var digit = void 0;
            if (ch >= 48 && ch <= 57) {
              digit = ch & 15;
            } else if (ch >= 65 && ch <= 70 || ch >= 97 && ch <= 102) {
              digit = (ch & 15) + 9;
            } else if (ch === 62) {
              this.eof = true;
              break;
            } else {
              continue;
            }
            if (firstDigit < 0) {
              firstDigit = digit;
            } else {
              buffer[bufferLength++] = firstDigit << 4 | digit;
              firstDigit = -1;
            }
          }
          if (firstDigit >= 0 && this.eof) {
            buffer[bufferLength++] = firstDigit << 4;
            firstDigit = -1;
          }
          this.firstDigit = firstDigit;
          this.bufferLength = bufferLength;
        };
        return AsciiHexStream2;
      }(DecodeStream_1.default)
    );
    exports.default = AsciiHexStream;
  }
});

// node_modules/pdf-lib/cjs/core/streams/FlateStream.js
var require_FlateStream = __commonJS({
  "node_modules/pdf-lib/cjs/core/streams/FlateStream.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var DecodeStream_1 = tslib_1.__importDefault(require_DecodeStream());
    var codeLenCodeMap = new Int32Array([
      16,
      17,
      18,
      0,
      8,
      7,
      9,
      6,
      10,
      5,
      11,
      4,
      12,
      3,
      13,
      2,
      14,
      1,
      15
    ]);
    var lengthDecode = new Int32Array([
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      65547,
      65549,
      65551,
      65553,
      131091,
      131095,
      131099,
      131103,
      196643,
      196651,
      196659,
      196667,
      262211,
      262227,
      262243,
      262259,
      327811,
      327843,
      327875,
      327907,
      258,
      258,
      258
    ]);
    var distDecode = new Int32Array([
      1,
      2,
      3,
      4,
      65541,
      65543,
      131081,
      131085,
      196625,
      196633,
      262177,
      262193,
      327745,
      327777,
      393345,
      393409,
      459009,
      459137,
      524801,
      525057,
      590849,
      591361,
      657409,
      658433,
      724993,
      727041,
      794625,
      798721,
      868353,
      876545
    ]);
    var fixedLitCodeTab = [new Int32Array([
      459008,
      524368,
      524304,
      524568,
      459024,
      524400,
      524336,
      590016,
      459016,
      524384,
      524320,
      589984,
      524288,
      524416,
      524352,
      590048,
      459012,
      524376,
      524312,
      589968,
      459028,
      524408,
      524344,
      590032,
      459020,
      524392,
      524328,
      59e4,
      524296,
      524424,
      524360,
      590064,
      459010,
      524372,
      524308,
      524572,
      459026,
      524404,
      524340,
      590024,
      459018,
      524388,
      524324,
      589992,
      524292,
      524420,
      524356,
      590056,
      459014,
      524380,
      524316,
      589976,
      459030,
      524412,
      524348,
      590040,
      459022,
      524396,
      524332,
      590008,
      524300,
      524428,
      524364,
      590072,
      459009,
      524370,
      524306,
      524570,
      459025,
      524402,
      524338,
      590020,
      459017,
      524386,
      524322,
      589988,
      524290,
      524418,
      524354,
      590052,
      459013,
      524378,
      524314,
      589972,
      459029,
      524410,
      524346,
      590036,
      459021,
      524394,
      524330,
      590004,
      524298,
      524426,
      524362,
      590068,
      459011,
      524374,
      524310,
      524574,
      459027,
      524406,
      524342,
      590028,
      459019,
      524390,
      524326,
      589996,
      524294,
      524422,
      524358,
      590060,
      459015,
      524382,
      524318,
      589980,
      459031,
      524414,
      524350,
      590044,
      459023,
      524398,
      524334,
      590012,
      524302,
      524430,
      524366,
      590076,
      459008,
      524369,
      524305,
      524569,
      459024,
      524401,
      524337,
      590018,
      459016,
      524385,
      524321,
      589986,
      524289,
      524417,
      524353,
      590050,
      459012,
      524377,
      524313,
      589970,
      459028,
      524409,
      524345,
      590034,
      459020,
      524393,
      524329,
      590002,
      524297,
      524425,
      524361,
      590066,
      459010,
      524373,
      524309,
      524573,
      459026,
      524405,
      524341,
      590026,
      459018,
      524389,
      524325,
      589994,
      524293,
      524421,
      524357,
      590058,
      459014,
      524381,
      524317,
      589978,
      459030,
      524413,
      524349,
      590042,
      459022,
      524397,
      524333,
      590010,
      524301,
      524429,
      524365,
      590074,
      459009,
      524371,
      524307,
      524571,
      459025,
      524403,
      524339,
      590022,
      459017,
      524387,
      524323,
      589990,
      524291,
      524419,
      524355,
      590054,
      459013,
      524379,
      524315,
      589974,
      459029,
      524411,
      524347,
      590038,
      459021,
      524395,
      524331,
      590006,
      524299,
      524427,
      524363,
      590070,
      459011,
      524375,
      524311,
      524575,
      459027,
      524407,
      524343,
      590030,
      459019,
      524391,
      524327,
      589998,
      524295,
      524423,
      524359,
      590062,
      459015,
      524383,
      524319,
      589982,
      459031,
      524415,
      524351,
      590046,
      459023,
      524399,
      524335,
      590014,
      524303,
      524431,
      524367,
      590078,
      459008,
      524368,
      524304,
      524568,
      459024,
      524400,
      524336,
      590017,
      459016,
      524384,
      524320,
      589985,
      524288,
      524416,
      524352,
      590049,
      459012,
      524376,
      524312,
      589969,
      459028,
      524408,
      524344,
      590033,
      459020,
      524392,
      524328,
      590001,
      524296,
      524424,
      524360,
      590065,
      459010,
      524372,
      524308,
      524572,
      459026,
      524404,
      524340,
      590025,
      459018,
      524388,
      524324,
      589993,
      524292,
      524420,
      524356,
      590057,
      459014,
      524380,
      524316,
      589977,
      459030,
      524412,
      524348,
      590041,
      459022,
      524396,
      524332,
      590009,
      524300,
      524428,
      524364,
      590073,
      459009,
      524370,
      524306,
      524570,
      459025,
      524402,
      524338,
      590021,
      459017,
      524386,
      524322,
      589989,
      524290,
      524418,
      524354,
      590053,
      459013,
      524378,
      524314,
      589973,
      459029,
      524410,
      524346,
      590037,
      459021,
      524394,
      524330,
      590005,
      524298,
      524426,
      524362,
      590069,
      459011,
      524374,
      524310,
      524574,
      459027,
      524406,
      524342,
      590029,
      459019,
      524390,
      524326,
      589997,
      524294,
      524422,
      524358,
      590061,
      459015,
      524382,
      524318,
      589981,
      459031,
      524414,
      524350,
      590045,
      459023,
      524398,
      524334,
      590013,
      524302,
      524430,
      524366,
      590077,
      459008,
      524369,
      524305,
      524569,
      459024,
      524401,
      524337,
      590019,
      459016,
      524385,
      524321,
      589987,
      524289,
      524417,
      524353,
      590051,
      459012,
      524377,
      524313,
      589971,
      459028,
      524409,
      524345,
      590035,
      459020,
      524393,
      524329,
      590003,
      524297,
      524425,
      524361,
      590067,
      459010,
      524373,
      524309,
      524573,
      459026,
      524405,
      524341,
      590027,
      459018,
      524389,
      524325,
      589995,
      524293,
      524421,
      524357,
      590059,
      459014,
      524381,
      524317,
      589979,
      459030,
      524413,
      524349,
      590043,
      459022,
      524397,
      524333,
      590011,
      524301,
      524429,
      524365,
      590075,
      459009,
      524371,
      524307,
      524571,
      459025,
      524403,
      524339,
      590023,
      459017,
      524387,
      524323,
      589991,
      524291,
      524419,
      524355,
      590055,
      459013,
      524379,
      524315,
      589975,
      459029,
      524411,
      524347,
      590039,
      459021,
      524395,
      524331,
      590007,
      524299,
      524427,
      524363,
      590071,
      459011,
      524375,
      524311,
      524575,
      459027,
      524407,
      524343,
      590031,
      459019,
      524391,
      524327,
      589999,
      524295,
      524423,
      524359,
      590063,
      459015,
      524383,
      524319,
      589983,
      459031,
      524415,
      524351,
      590047,
      459023,
      524399,
      524335,
      590015,
      524303,
      524431,
      524367,
      590079
    ]), 9];
    var fixedDistCodeTab = [new Int32Array([
      327680,
      327696,
      327688,
      327704,
      327684,
      327700,
      327692,
      327708,
      327682,
      327698,
      327690,
      327706,
      327686,
      327702,
      327694,
      0,
      327681,
      327697,
      327689,
      327705,
      327685,
      327701,
      327693,
      327709,
      327683,
      327699,
      327691,
      327707,
      327687,
      327703,
      327695,
      0
    ]), 5];
    var FlateStream = (
      /** @class */
      function(_super) {
        tslib_1.__extends(FlateStream2, _super);
        function FlateStream2(stream, maybeLength) {
          var _this = _super.call(this, maybeLength) || this;
          _this.stream = stream;
          var cmf = stream.getByte();
          var flg = stream.getByte();
          if (cmf === -1 || flg === -1) {
            throw new Error("Invalid header in flate stream: " + cmf + ", " + flg);
          }
          if ((cmf & 15) !== 8) {
            throw new Error("Unknown compression method in flate stream: " + cmf + ", " + flg);
          }
          if (((cmf << 8) + flg) % 31 !== 0) {
            throw new Error("Bad FCHECK in flate stream: " + cmf + ", " + flg);
          }
          if (flg & 32) {
            throw new Error("FDICT bit set in flate stream: " + cmf + ", " + flg);
          }
          _this.codeSize = 0;
          _this.codeBuf = 0;
          return _this;
        }
        FlateStream2.prototype.readBlock = function() {
          var buffer;
          var len;
          var str = this.stream;
          var hdr = this.getBits(3);
          if (hdr & 1) {
            this.eof = true;
          }
          hdr >>= 1;
          if (hdr === 0) {
            var b = void 0;
            if ((b = str.getByte()) === -1) {
              throw new Error("Bad block header in flate stream");
            }
            var blockLen = b;
            if ((b = str.getByte()) === -1) {
              throw new Error("Bad block header in flate stream");
            }
            blockLen |= b << 8;
            if ((b = str.getByte()) === -1) {
              throw new Error("Bad block header in flate stream");
            }
            var check = b;
            if ((b = str.getByte()) === -1) {
              throw new Error("Bad block header in flate stream");
            }
            check |= b << 8;
            if (check !== (~blockLen & 65535) && (blockLen !== 0 || check !== 0)) {
              throw new Error("Bad uncompressed block length in flate stream");
            }
            this.codeBuf = 0;
            this.codeSize = 0;
            var bufferLength = this.bufferLength;
            buffer = this.ensureBuffer(bufferLength + blockLen);
            var end = bufferLength + blockLen;
            this.bufferLength = end;
            if (blockLen === 0) {
              if (str.peekByte() === -1) {
                this.eof = true;
              }
            } else {
              for (var n = bufferLength; n < end; ++n) {
                if ((b = str.getByte()) === -1) {
                  this.eof = true;
                  break;
                }
                buffer[n] = b;
              }
            }
            return;
          }
          var litCodeTable;
          var distCodeTable;
          if (hdr === 1) {
            litCodeTable = fixedLitCodeTab;
            distCodeTable = fixedDistCodeTab;
          } else if (hdr === 2) {
            var numLitCodes = this.getBits(5) + 257;
            var numDistCodes = this.getBits(5) + 1;
            var numCodeLenCodes = this.getBits(4) + 4;
            var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);
            var i = void 0;
            for (i = 0; i < numCodeLenCodes; ++i) {
              codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);
            }
            var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);
            len = 0;
            i = 0;
            var codes = numLitCodes + numDistCodes;
            var codeLengths = new Uint8Array(codes);
            var bitsLength = void 0;
            var bitsOffset = void 0;
            var what = void 0;
            while (i < codes) {
              var code = this.getCode(codeLenCodeTab);
              if (code === 16) {
                bitsLength = 2;
                bitsOffset = 3;
                what = len;
              } else if (code === 17) {
                bitsLength = 3;
                bitsOffset = 3;
                what = len = 0;
              } else if (code === 18) {
                bitsLength = 7;
                bitsOffset = 11;
                what = len = 0;
              } else {
                codeLengths[i++] = len = code;
                continue;
              }
              var repeatLength = this.getBits(bitsLength) + bitsOffset;
              while (repeatLength-- > 0) {
                codeLengths[i++] = what;
              }
            }
            litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));
            distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));
          } else {
            throw new Error("Unknown block type in flate stream");
          }
          buffer = this.buffer;
          var limit = buffer ? buffer.length : 0;
          var pos = this.bufferLength;
          while (true) {
            var code1 = this.getCode(litCodeTable);
            if (code1 < 256) {
              if (pos + 1 >= limit) {
                buffer = this.ensureBuffer(pos + 1);
                limit = buffer.length;
              }
              buffer[pos++] = code1;
              continue;
            }
            if (code1 === 256) {
              this.bufferLength = pos;
              return;
            }
            code1 -= 257;
            code1 = lengthDecode[code1];
            var code2 = code1 >> 16;
            if (code2 > 0) {
              code2 = this.getBits(code2);
            }
            len = (code1 & 65535) + code2;
            code1 = this.getCode(distCodeTable);
            code1 = distDecode[code1];
            code2 = code1 >> 16;
            if (code2 > 0) {
              code2 = this.getBits(code2);
            }
            var dist = (code1 & 65535) + code2;
            if (pos + len >= limit) {
              buffer = this.ensureBuffer(pos + len);
              limit = buffer.length;
            }
            for (var k = 0; k < len; ++k, ++pos) {
              buffer[pos] = buffer[pos - dist];
            }
          }
        };
        FlateStream2.prototype.getBits = function(bits) {
          var str = this.stream;
          var codeSize = this.codeSize;
          var codeBuf = this.codeBuf;
          var b;
          while (codeSize < bits) {
            if ((b = str.getByte()) === -1) {
              throw new Error("Bad encoding in flate stream");
            }
            codeBuf |= b << codeSize;
            codeSize += 8;
          }
          b = codeBuf & (1 << bits) - 1;
          this.codeBuf = codeBuf >> bits;
          this.codeSize = codeSize -= bits;
          return b;
        };
        FlateStream2.prototype.getCode = function(table) {
          var str = this.stream;
          var codes = table[0];
          var maxLen = table[1];
          var codeSize = this.codeSize;
          var codeBuf = this.codeBuf;
          var b;
          while (codeSize < maxLen) {
            if ((b = str.getByte()) === -1) {
              break;
            }
            codeBuf |= b << codeSize;
            codeSize += 8;
          }
          var code = codes[codeBuf & (1 << maxLen) - 1];
          if (typeof codes === "number") {
            console.log("FLATE:", code);
          }
          var codeLen = code >> 16;
          var codeVal = code & 65535;
          if (codeLen < 1 || codeSize < codeLen) {
            throw new Error("Bad encoding in flate stream");
          }
          this.codeBuf = codeBuf >> codeLen;
          this.codeSize = codeSize - codeLen;
          return codeVal;
        };
        FlateStream2.prototype.generateHuffmanTable = function(lengths) {
          var n = lengths.length;
          var maxLen = 0;
          var i;
          for (i = 0; i < n; ++i) {
            if (lengths[i] > maxLen) {
              maxLen = lengths[i];
            }
          }
          var size = 1 << maxLen;
          var codes = new Int32Array(size);
          for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {
            for (var val = 0; val < n; ++val) {
              if (lengths[val] === len) {
                var code2 = 0;
                var t = code;
                for (i = 0; i < len; ++i) {
                  code2 = code2 << 1 | t & 1;
                  t >>= 1;
                }
                for (i = code2; i < size; i += skip) {
                  codes[i] = len << 16 | val;
                }
                ++code;
              }
            }
          }
          return [codes, maxLen];
        };
        return FlateStream2;
      }(DecodeStream_1.default)
    );
    exports.default = FlateStream;
  }
});

// node_modules/pdf-lib/cjs/core/streams/LZWStream.js
var require_LZWStream = __commonJS({
  "node_modules/pdf-lib/cjs/core/streams/LZWStream.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var DecodeStream_1 = tslib_1.__importDefault(require_DecodeStream());
    var LZWStream = (
      /** @class */
      function(_super) {
        tslib_1.__extends(LZWStream2, _super);
        function LZWStream2(stream, maybeLength, earlyChange) {
          var _this = _super.call(this, maybeLength) || this;
          _this.stream = stream;
          _this.cachedData = 0;
          _this.bitsCached = 0;
          var maxLzwDictionarySize = 4096;
          var lzwState = {
            earlyChange,
            codeLength: 9,
            nextCode: 258,
            dictionaryValues: new Uint8Array(maxLzwDictionarySize),
            dictionaryLengths: new Uint16Array(maxLzwDictionarySize),
            dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),
            currentSequence: new Uint8Array(maxLzwDictionarySize),
            currentSequenceLength: 0
          };
          for (var i = 0; i < 256; ++i) {
            lzwState.dictionaryValues[i] = i;
            lzwState.dictionaryLengths[i] = 1;
          }
          _this.lzwState = lzwState;
          return _this;
        }
        LZWStream2.prototype.readBlock = function() {
          var blockSize = 512;
          var estimatedDecodedSize = blockSize * 2;
          var decodedSizeDelta = blockSize;
          var i;
          var j;
          var q;
          var lzwState = this.lzwState;
          if (!lzwState) {
            return;
          }
          var earlyChange = lzwState.earlyChange;
          var nextCode = lzwState.nextCode;
          var dictionaryValues = lzwState.dictionaryValues;
          var dictionaryLengths = lzwState.dictionaryLengths;
          var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;
          var codeLength = lzwState.codeLength;
          var prevCode = lzwState.prevCode;
          var currentSequence = lzwState.currentSequence;
          var currentSequenceLength = lzwState.currentSequenceLength;
          var decodedLength = 0;
          var currentBufferLength = this.bufferLength;
          var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);
          for (i = 0; i < blockSize; i++) {
            var code = this.readBits(codeLength);
            var hasPrev = currentSequenceLength > 0;
            if (!code || code < 256) {
              currentSequence[0] = code;
              currentSequenceLength = 1;
            } else if (code >= 258) {
              if (code < nextCode) {
                currentSequenceLength = dictionaryLengths[code];
                for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {
                  currentSequence[j] = dictionaryValues[q];
                  q = dictionaryPrevCodes[q];
                }
              } else {
                currentSequence[currentSequenceLength++] = currentSequence[0];
              }
            } else if (code === 256) {
              codeLength = 9;
              nextCode = 258;
              currentSequenceLength = 0;
              continue;
            } else {
              this.eof = true;
              delete this.lzwState;
              break;
            }
            if (hasPrev) {
              dictionaryPrevCodes[nextCode] = prevCode;
              dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;
              dictionaryValues[nextCode] = currentSequence[0];
              nextCode++;
              codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;
            }
            prevCode = code;
            decodedLength += currentSequenceLength;
            if (estimatedDecodedSize < decodedLength) {
              do {
                estimatedDecodedSize += decodedSizeDelta;
              } while (estimatedDecodedSize < decodedLength);
              buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);
            }
            for (j = 0; j < currentSequenceLength; j++) {
              buffer[currentBufferLength++] = currentSequence[j];
            }
          }
          lzwState.nextCode = nextCode;
          lzwState.codeLength = codeLength;
          lzwState.prevCode = prevCode;
          lzwState.currentSequenceLength = currentSequenceLength;
          this.bufferLength = currentBufferLength;
        };
        LZWStream2.prototype.readBits = function(n) {
          var bitsCached = this.bitsCached;
          var cachedData = this.cachedData;
          while (bitsCached < n) {
            var c = this.stream.getByte();
            if (c === -1) {
              this.eof = true;
              return null;
            }
            cachedData = cachedData << 8 | c;
            bitsCached += 8;
          }
          this.bitsCached = bitsCached -= n;
          this.cachedData = cachedData;
          return cachedData >>> bitsCached & (1 << n) - 1;
        };
        return LZWStream2;
      }(DecodeStream_1.default)
    );
    exports.default = LZWStream;
  }
});

// node_modules/pdf-lib/cjs/core/streams/RunLengthStream.js
var require_RunLengthStream = __commonJS({
  "node_modules/pdf-lib/cjs/core/streams/RunLengthStream.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var DecodeStream_1 = tslib_1.__importDefault(require_DecodeStream());
    var RunLengthStream = (
      /** @class */
      function(_super) {
        tslib_1.__extends(RunLengthStream2, _super);
        function RunLengthStream2(stream, maybeLength) {
          var _this = _super.call(this, maybeLength) || this;
          _this.stream = stream;
          return _this;
        }
        RunLengthStream2.prototype.readBlock = function() {
          var repeatHeader = this.stream.getBytes(2);
          if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {
            this.eof = true;
            return;
          }
          var buffer;
          var bufferLength = this.bufferLength;
          var n = repeatHeader[0];
          if (n < 128) {
            buffer = this.ensureBuffer(bufferLength + n + 1);
            buffer[bufferLength++] = repeatHeader[1];
            if (n > 0) {
              var source = this.stream.getBytes(n);
              buffer.set(source, bufferLength);
              bufferLength += n;
            }
          } else {
            n = 257 - n;
            var b = repeatHeader[1];
            buffer = this.ensureBuffer(bufferLength + n + 1);
            for (var i = 0; i < n; i++) {
              buffer[bufferLength++] = b;
            }
          }
          this.bufferLength = bufferLength;
        };
        return RunLengthStream2;
      }(DecodeStream_1.default)
    );
    exports.default = RunLengthStream;
  }
});

// node_modules/pdf-lib/cjs/core/streams/decode.js
var require_decode = __commonJS({
  "node_modules/pdf-lib/cjs/core/streams/decode.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.decodePDFRawStream = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var errors_1 = require_errors2();
    var PDFArray_1 = tslib_1.__importDefault(require_PDFArray());
    var PDFDict_1 = tslib_1.__importDefault(require_PDFDict());
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFNumber_1 = tslib_1.__importDefault(require_PDFNumber());
    var Ascii85Stream_1 = tslib_1.__importDefault(require_Ascii85Stream());
    var AsciiHexStream_1 = tslib_1.__importDefault(require_AsciiHexStream());
    var FlateStream_1 = tslib_1.__importDefault(require_FlateStream());
    var LZWStream_1 = tslib_1.__importDefault(require_LZWStream());
    var RunLengthStream_1 = tslib_1.__importDefault(require_RunLengthStream());
    var Stream_1 = tslib_1.__importDefault(require_Stream());
    var decodeStream = function(stream, encoding, params) {
      if (encoding === PDFName_1.default.of("FlateDecode")) {
        return new FlateStream_1.default(stream);
      }
      if (encoding === PDFName_1.default.of("LZWDecode")) {
        var earlyChange = 1;
        if (params instanceof PDFDict_1.default) {
          var EarlyChange = params.lookup(PDFName_1.default.of("EarlyChange"));
          if (EarlyChange instanceof PDFNumber_1.default) {
            earlyChange = EarlyChange.asNumber();
          }
        }
        return new LZWStream_1.default(stream, void 0, earlyChange);
      }
      if (encoding === PDFName_1.default.of("ASCII85Decode")) {
        return new Ascii85Stream_1.default(stream);
      }
      if (encoding === PDFName_1.default.of("ASCIIHexDecode")) {
        return new AsciiHexStream_1.default(stream);
      }
      if (encoding === PDFName_1.default.of("RunLengthDecode")) {
        return new RunLengthStream_1.default(stream);
      }
      throw new errors_1.UnsupportedEncodingError(encoding.asString());
    };
    exports.decodePDFRawStream = function(_a) {
      var dict = _a.dict, contents = _a.contents;
      var stream = new Stream_1.default(contents);
      var Filter = dict.lookup(PDFName_1.default.of("Filter"));
      var DecodeParms = dict.lookup(PDFName_1.default.of("DecodeParms"));
      if (Filter instanceof PDFName_1.default) {
        stream = decodeStream(stream, Filter, DecodeParms);
      } else if (Filter instanceof PDFArray_1.default) {
        for (var idx = 0, len = Filter.size(); idx < len; idx++) {
          stream = decodeStream(stream, Filter.lookup(idx, PDFName_1.default), DecodeParms && DecodeParms.lookupMaybe(idx, PDFDict_1.default));
        }
      } else if (!!Filter) {
        throw new errors_1.UnexpectedObjectTypeError([PDFName_1.default, PDFArray_1.default], Filter);
      }
      return stream;
    };
  }
});

// node_modules/pdf-lib/cjs/core/embedders/PDFPageEmbedder.js
var require_PDFPageEmbedder = __commonJS({
  "node_modules/pdf-lib/cjs/core/embedders/PDFPageEmbedder.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var errors_1 = require_errors2();
    var PDFNumber_1 = tslib_1.__importDefault(require_PDFNumber());
    var PDFRawStream_1 = tslib_1.__importDefault(require_PDFRawStream());
    var PDFStream_1 = tslib_1.__importDefault(require_PDFStream());
    var decode_1 = require_decode();
    var PDFContentStream_1 = tslib_1.__importDefault(require_PDFContentStream());
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var utils_1 = require_utils2();
    var fullPageBoundingBox = function(page) {
      var mediaBox = page.MediaBox();
      var width = mediaBox.lookup(2, PDFNumber_1.default).asNumber() - mediaBox.lookup(0, PDFNumber_1.default).asNumber();
      var height = mediaBox.lookup(3, PDFNumber_1.default).asNumber() - mediaBox.lookup(1, PDFNumber_1.default).asNumber();
      return { left: 0, bottom: 0, right: width, top: height };
    };
    var boundingBoxAdjustedMatrix = function(bb) {
      return [1, 0, 0, 1, -bb.left, -bb.bottom];
    };
    var PDFPageEmbedder = (
      /** @class */
      function() {
        function PDFPageEmbedder2(page, boundingBox, transformationMatrix) {
          this.page = page;
          var bb = boundingBox !== null && boundingBox !== void 0 ? boundingBox : fullPageBoundingBox(page);
          this.width = bb.right - bb.left;
          this.height = bb.top - bb.bottom;
          this.boundingBox = bb;
          this.transformationMatrix = transformationMatrix !== null && transformationMatrix !== void 0 ? transformationMatrix : boundingBoxAdjustedMatrix(bb);
        }
        PDFPageEmbedder2.for = function(page, boundingBox, transformationMatrix) {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            return tslib_1.__generator(this, function(_a) {
              return [2, new PDFPageEmbedder2(page, boundingBox, transformationMatrix)];
            });
          });
        };
        PDFPageEmbedder2.prototype.embedIntoContext = function(context, ref) {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var _a, Contents, Resources, decodedContents, _b, left, bottom, right, top, xObject;
            return tslib_1.__generator(this, function(_c) {
              _a = this.page.normalizedEntries(), Contents = _a.Contents, Resources = _a.Resources;
              if (!Contents)
                throw new errors_1.MissingPageContentsEmbeddingError();
              decodedContents = this.decodeContents(Contents);
              _b = this.boundingBox, left = _b.left, bottom = _b.bottom, right = _b.right, top = _b.top;
              xObject = context.flateStream(decodedContents, {
                Type: "XObject",
                Subtype: "Form",
                FormType: 1,
                BBox: [left, bottom, right, top],
                Matrix: this.transformationMatrix,
                Resources
              });
              if (ref) {
                context.assign(ref, xObject);
                return [2, ref];
              } else {
                return [2, context.register(xObject)];
              }
              return [
                2
                /*return*/
              ];
            });
          });
        };
        PDFPageEmbedder2.prototype.decodeContents = function(contents) {
          var newline = Uint8Array.of(CharCodes_1.default.Newline);
          var decodedContents = [];
          for (var idx = 0, len = contents.size(); idx < len; idx++) {
            var stream = contents.lookup(idx, PDFStream_1.default);
            var content = void 0;
            if (stream instanceof PDFRawStream_1.default) {
              content = decode_1.decodePDFRawStream(stream).decode();
            } else if (stream instanceof PDFContentStream_1.default) {
              content = stream.getUnencodedContents();
            } else {
              throw new errors_1.UnrecognizedStreamTypeError(stream);
            }
            decodedContents.push(content, newline);
          }
          return utils_1.mergeIntoTypedArray.apply(void 0, decodedContents);
        };
        return PDFPageEmbedder2;
      }()
    );
    exports.default = PDFPageEmbedder;
  }
});

// node_modules/pdf-lib/cjs/core/interactive/ViewerPreferences.js
var require_ViewerPreferences = __commonJS({
  "node_modules/pdf-lib/cjs/core/interactive/ViewerPreferences.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Duplex = exports.PrintScaling = exports.ReadingDirection = exports.NonFullScreenPageMode = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFArray_1 = tslib_1.__importDefault(require_PDFArray());
    var PDFBool_1 = tslib_1.__importDefault(require_PDFBool());
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFNumber_1 = tslib_1.__importDefault(require_PDFNumber());
    var utils_1 = require_utils2();
    var asEnum = function(rawValue, enumType) {
      if (rawValue === void 0)
        return void 0;
      return enumType[rawValue];
    };
    var NonFullScreenPageMode;
    (function(NonFullScreenPageMode2) {
      NonFullScreenPageMode2["UseNone"] = "UseNone";
      NonFullScreenPageMode2["UseOutlines"] = "UseOutlines";
      NonFullScreenPageMode2["UseThumbs"] = "UseThumbs";
      NonFullScreenPageMode2["UseOC"] = "UseOC";
    })(NonFullScreenPageMode = exports.NonFullScreenPageMode || (exports.NonFullScreenPageMode = {}));
    var ReadingDirection;
    (function(ReadingDirection2) {
      ReadingDirection2["L2R"] = "L2R";
      ReadingDirection2["R2L"] = "R2L";
    })(ReadingDirection = exports.ReadingDirection || (exports.ReadingDirection = {}));
    var PrintScaling;
    (function(PrintScaling2) {
      PrintScaling2["None"] = "None";
      PrintScaling2["AppDefault"] = "AppDefault";
    })(PrintScaling = exports.PrintScaling || (exports.PrintScaling = {}));
    var Duplex;
    (function(Duplex2) {
      Duplex2["Simplex"] = "Simplex";
      Duplex2["DuplexFlipShortEdge"] = "DuplexFlipShortEdge";
      Duplex2["DuplexFlipLongEdge"] = "DuplexFlipLongEdge";
    })(Duplex = exports.Duplex || (exports.Duplex = {}));
    var ViewerPreferences = (
      /** @class */
      function() {
        function ViewerPreferences2(dict) {
          this.dict = dict;
        }
        ViewerPreferences2.prototype.lookupBool = function(key) {
          var returnObj = this.dict.lookup(PDFName_1.default.of(key));
          if (returnObj instanceof PDFBool_1.default)
            return returnObj;
          return void 0;
        };
        ViewerPreferences2.prototype.lookupName = function(key) {
          var returnObj = this.dict.lookup(PDFName_1.default.of(key));
          if (returnObj instanceof PDFName_1.default)
            return returnObj;
          return void 0;
        };
        ViewerPreferences2.prototype.HideToolbar = function() {
          return this.lookupBool("HideToolbar");
        };
        ViewerPreferences2.prototype.HideMenubar = function() {
          return this.lookupBool("HideMenubar");
        };
        ViewerPreferences2.prototype.HideWindowUI = function() {
          return this.lookupBool("HideWindowUI");
        };
        ViewerPreferences2.prototype.FitWindow = function() {
          return this.lookupBool("FitWindow");
        };
        ViewerPreferences2.prototype.CenterWindow = function() {
          return this.lookupBool("CenterWindow");
        };
        ViewerPreferences2.prototype.DisplayDocTitle = function() {
          return this.lookupBool("DisplayDocTitle");
        };
        ViewerPreferences2.prototype.NonFullScreenPageMode = function() {
          return this.lookupName("NonFullScreenPageMode");
        };
        ViewerPreferences2.prototype.Direction = function() {
          return this.lookupName("Direction");
        };
        ViewerPreferences2.prototype.PrintScaling = function() {
          return this.lookupName("PrintScaling");
        };
        ViewerPreferences2.prototype.Duplex = function() {
          return this.lookupName("Duplex");
        };
        ViewerPreferences2.prototype.PickTrayByPDFSize = function() {
          return this.lookupBool("PickTrayByPDFSize");
        };
        ViewerPreferences2.prototype.PrintPageRange = function() {
          var PrintPageRange = this.dict.lookup(PDFName_1.default.of("PrintPageRange"));
          if (PrintPageRange instanceof PDFArray_1.default)
            return PrintPageRange;
          return void 0;
        };
        ViewerPreferences2.prototype.NumCopies = function() {
          var NumCopies = this.dict.lookup(PDFName_1.default.of("NumCopies"));
          if (NumCopies instanceof PDFNumber_1.default)
            return NumCopies;
          return void 0;
        };
        ViewerPreferences2.prototype.getHideToolbar = function() {
          var _a, _b;
          return (_b = (_a = this.HideToolbar()) === null || _a === void 0 ? void 0 : _a.asBoolean()) !== null && _b !== void 0 ? _b : false;
        };
        ViewerPreferences2.prototype.getHideMenubar = function() {
          var _a, _b;
          return (_b = (_a = this.HideMenubar()) === null || _a === void 0 ? void 0 : _a.asBoolean()) !== null && _b !== void 0 ? _b : false;
        };
        ViewerPreferences2.prototype.getHideWindowUI = function() {
          var _a, _b;
          return (_b = (_a = this.HideWindowUI()) === null || _a === void 0 ? void 0 : _a.asBoolean()) !== null && _b !== void 0 ? _b : false;
        };
        ViewerPreferences2.prototype.getFitWindow = function() {
          var _a, _b;
          return (_b = (_a = this.FitWindow()) === null || _a === void 0 ? void 0 : _a.asBoolean()) !== null && _b !== void 0 ? _b : false;
        };
        ViewerPreferences2.prototype.getCenterWindow = function() {
          var _a, _b;
          return (_b = (_a = this.CenterWindow()) === null || _a === void 0 ? void 0 : _a.asBoolean()) !== null && _b !== void 0 ? _b : false;
        };
        ViewerPreferences2.prototype.getDisplayDocTitle = function() {
          var _a, _b;
          return (_b = (_a = this.DisplayDocTitle()) === null || _a === void 0 ? void 0 : _a.asBoolean()) !== null && _b !== void 0 ? _b : false;
        };
        ViewerPreferences2.prototype.getNonFullScreenPageMode = function() {
          var _a, _b;
          var mode = (_a = this.NonFullScreenPageMode()) === null || _a === void 0 ? void 0 : _a.decodeText();
          return (_b = asEnum(mode, NonFullScreenPageMode)) !== null && _b !== void 0 ? _b : NonFullScreenPageMode.UseNone;
        };
        ViewerPreferences2.prototype.getReadingDirection = function() {
          var _a, _b;
          var direction = (_a = this.Direction()) === null || _a === void 0 ? void 0 : _a.decodeText();
          return (_b = asEnum(direction, ReadingDirection)) !== null && _b !== void 0 ? _b : ReadingDirection.L2R;
        };
        ViewerPreferences2.prototype.getPrintScaling = function() {
          var _a, _b;
          var scaling = (_a = this.PrintScaling()) === null || _a === void 0 ? void 0 : _a.decodeText();
          return (_b = asEnum(scaling, PrintScaling)) !== null && _b !== void 0 ? _b : PrintScaling.AppDefault;
        };
        ViewerPreferences2.prototype.getDuplex = function() {
          var _a;
          var duplex = (_a = this.Duplex()) === null || _a === void 0 ? void 0 : _a.decodeText();
          return asEnum(duplex, Duplex);
        };
        ViewerPreferences2.prototype.getPickTrayByPDFSize = function() {
          var _a;
          return (_a = this.PickTrayByPDFSize()) === null || _a === void 0 ? void 0 : _a.asBoolean();
        };
        ViewerPreferences2.prototype.getPrintPageRange = function() {
          var rng = this.PrintPageRange();
          if (!rng)
            return [];
          var pageRanges = [];
          for (var i = 0; i < rng.size(); i += 2) {
            var start = rng.lookup(i, PDFNumber_1.default).asNumber();
            var end = rng.lookup(i + 1, PDFNumber_1.default).asNumber();
            pageRanges.push({ start, end });
          }
          return pageRanges;
        };
        ViewerPreferences2.prototype.getNumCopies = function() {
          var _a, _b;
          return (_b = (_a = this.NumCopies()) === null || _a === void 0 ? void 0 : _a.asNumber()) !== null && _b !== void 0 ? _b : 1;
        };
        ViewerPreferences2.prototype.setHideToolbar = function(hideToolbar) {
          var HideToolbar = this.dict.context.obj(hideToolbar);
          this.dict.set(PDFName_1.default.of("HideToolbar"), HideToolbar);
        };
        ViewerPreferences2.prototype.setHideMenubar = function(hideMenubar) {
          var HideMenubar = this.dict.context.obj(hideMenubar);
          this.dict.set(PDFName_1.default.of("HideMenubar"), HideMenubar);
        };
        ViewerPreferences2.prototype.setHideWindowUI = function(hideWindowUI) {
          var HideWindowUI = this.dict.context.obj(hideWindowUI);
          this.dict.set(PDFName_1.default.of("HideWindowUI"), HideWindowUI);
        };
        ViewerPreferences2.prototype.setFitWindow = function(fitWindow) {
          var FitWindow = this.dict.context.obj(fitWindow);
          this.dict.set(PDFName_1.default.of("FitWindow"), FitWindow);
        };
        ViewerPreferences2.prototype.setCenterWindow = function(centerWindow) {
          var CenterWindow = this.dict.context.obj(centerWindow);
          this.dict.set(PDFName_1.default.of("CenterWindow"), CenterWindow);
        };
        ViewerPreferences2.prototype.setDisplayDocTitle = function(displayTitle) {
          var DisplayDocTitle = this.dict.context.obj(displayTitle);
          this.dict.set(PDFName_1.default.of("DisplayDocTitle"), DisplayDocTitle);
        };
        ViewerPreferences2.prototype.setNonFullScreenPageMode = function(nonFullScreenPageMode) {
          utils_1.assertIsOneOf(nonFullScreenPageMode, "nonFullScreenPageMode", NonFullScreenPageMode);
          var mode = PDFName_1.default.of(nonFullScreenPageMode);
          this.dict.set(PDFName_1.default.of("NonFullScreenPageMode"), mode);
        };
        ViewerPreferences2.prototype.setReadingDirection = function(readingDirection) {
          utils_1.assertIsOneOf(readingDirection, "readingDirection", ReadingDirection);
          var direction = PDFName_1.default.of(readingDirection);
          this.dict.set(PDFName_1.default.of("Direction"), direction);
        };
        ViewerPreferences2.prototype.setPrintScaling = function(printScaling) {
          utils_1.assertIsOneOf(printScaling, "printScaling", PrintScaling);
          var scaling = PDFName_1.default.of(printScaling);
          this.dict.set(PDFName_1.default.of("PrintScaling"), scaling);
        };
        ViewerPreferences2.prototype.setDuplex = function(duplex) {
          utils_1.assertIsOneOf(duplex, "duplex", Duplex);
          var dup = PDFName_1.default.of(duplex);
          this.dict.set(PDFName_1.default.of("Duplex"), dup);
        };
        ViewerPreferences2.prototype.setPickTrayByPDFSize = function(pickTrayByPDFSize) {
          var PickTrayByPDFSize = this.dict.context.obj(pickTrayByPDFSize);
          this.dict.set(PDFName_1.default.of("PickTrayByPDFSize"), PickTrayByPDFSize);
        };
        ViewerPreferences2.prototype.setPrintPageRange = function(printPageRange) {
          if (!Array.isArray(printPageRange))
            printPageRange = [printPageRange];
          var flatRange = [];
          for (var idx = 0, len = printPageRange.length; idx < len; idx++) {
            flatRange.push(printPageRange[idx].start);
            flatRange.push(printPageRange[idx].end);
          }
          utils_1.assertEachIs(flatRange, "printPageRange", ["number"]);
          var pageRanges = this.dict.context.obj(flatRange);
          this.dict.set(PDFName_1.default.of("PrintPageRange"), pageRanges);
        };
        ViewerPreferences2.prototype.setNumCopies = function(numCopies) {
          utils_1.assertRange(numCopies, "numCopies", 1, Number.MAX_VALUE);
          utils_1.assertInteger(numCopies, "numCopies");
          var NumCopies = this.dict.context.obj(numCopies);
          this.dict.set(PDFName_1.default.of("NumCopies"), NumCopies);
        };
        ViewerPreferences2.fromDict = function(dict) {
          return new ViewerPreferences2(dict);
        };
        ViewerPreferences2.create = function(context) {
          var dict = context.obj({});
          return new ViewerPreferences2(dict);
        };
        return ViewerPreferences2;
      }()
    );
    exports.default = ViewerPreferences;
  }
});

// node_modules/pdf-lib/cjs/core/acroform/PDFAcroField.js
var require_PDFAcroField = __commonJS({
  "node_modules/pdf-lib/cjs/core/acroform/PDFAcroField.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFDict_1 = tslib_1.__importDefault(require_PDFDict());
    var PDFString_1 = tslib_1.__importDefault(require_PDFString());
    var PDFHexString_1 = tslib_1.__importDefault(require_PDFHexString());
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFNumber_1 = tslib_1.__importDefault(require_PDFNumber());
    var PDFArray_1 = tslib_1.__importDefault(require_PDFArray());
    var PDFRef_1 = tslib_1.__importDefault(require_PDFRef());
    var utils_1 = require_utils2();
    var errors_1 = require_errors2();
    var tfRegex = /\/([^\0\t\n\f\r\ ]+)[\0\t\n\f\r\ ]*(\d*\.\d+|\d+)?[\0\t\n\f\r\ ]+Tf/;
    var PDFAcroField = (
      /** @class */
      function() {
        function PDFAcroField2(dict, ref) {
          this.dict = dict;
          this.ref = ref;
        }
        PDFAcroField2.prototype.T = function() {
          return this.dict.lookupMaybe(PDFName_1.default.of("T"), PDFString_1.default, PDFHexString_1.default);
        };
        PDFAcroField2.prototype.Ff = function() {
          var numberOrRef = this.getInheritableAttribute(PDFName_1.default.of("Ff"));
          return this.dict.context.lookupMaybe(numberOrRef, PDFNumber_1.default);
        };
        PDFAcroField2.prototype.V = function() {
          var valueOrRef = this.getInheritableAttribute(PDFName_1.default.of("V"));
          return this.dict.context.lookup(valueOrRef);
        };
        PDFAcroField2.prototype.Kids = function() {
          return this.dict.lookupMaybe(PDFName_1.default.of("Kids"), PDFArray_1.default);
        };
        PDFAcroField2.prototype.DA = function() {
          var da = this.dict.lookup(PDFName_1.default.of("DA"));
          if (da instanceof PDFString_1.default || da instanceof PDFHexString_1.default)
            return da;
          return void 0;
        };
        PDFAcroField2.prototype.setKids = function(kids) {
          this.dict.set(PDFName_1.default.of("Kids"), this.dict.context.obj(kids));
        };
        PDFAcroField2.prototype.getParent = function() {
          var parentRef = this.dict.get(PDFName_1.default.of("Parent"));
          if (parentRef instanceof PDFRef_1.default) {
            var parent_1 = this.dict.lookup(PDFName_1.default.of("Parent"), PDFDict_1.default);
            return new PDFAcroField2(parent_1, parentRef);
          }
          return void 0;
        };
        PDFAcroField2.prototype.setParent = function(parent) {
          if (!parent)
            this.dict.delete(PDFName_1.default.of("Parent"));
          else
            this.dict.set(PDFName_1.default.of("Parent"), parent);
        };
        PDFAcroField2.prototype.getFullyQualifiedName = function() {
          var parent = this.getParent();
          if (!parent)
            return this.getPartialName();
          return parent.getFullyQualifiedName() + "." + this.getPartialName();
        };
        PDFAcroField2.prototype.getPartialName = function() {
          var _a;
          return (_a = this.T()) === null || _a === void 0 ? void 0 : _a.decodeText();
        };
        PDFAcroField2.prototype.setPartialName = function(partialName) {
          if (!partialName)
            this.dict.delete(PDFName_1.default.of("T"));
          else
            this.dict.set(PDFName_1.default.of("T"), PDFHexString_1.default.fromText(partialName));
        };
        PDFAcroField2.prototype.setDefaultAppearance = function(appearance) {
          this.dict.set(PDFName_1.default.of("DA"), PDFString_1.default.of(appearance));
        };
        PDFAcroField2.prototype.getDefaultAppearance = function() {
          var DA = this.DA();
          if (DA instanceof PDFHexString_1.default) {
            return DA.decodeText();
          }
          return DA === null || DA === void 0 ? void 0 : DA.asString();
        };
        PDFAcroField2.prototype.setFontSize = function(fontSize) {
          var _a;
          var name = (_a = this.getFullyQualifiedName()) !== null && _a !== void 0 ? _a : "";
          var da = this.getDefaultAppearance();
          if (!da)
            throw new errors_1.MissingDAEntryError(name);
          var daMatch = utils_1.findLastMatch(da, tfRegex);
          if (!daMatch.match)
            throw new errors_1.MissingTfOperatorError(name);
          var daStart = da.slice(0, daMatch.pos - daMatch.match[0].length);
          var daEnd = daMatch.pos <= da.length ? da.slice(daMatch.pos) : "";
          var fontName = daMatch.match[1];
          var modifiedDa = daStart + " /" + fontName + " " + fontSize + " Tf " + daEnd;
          this.setDefaultAppearance(modifiedDa);
        };
        PDFAcroField2.prototype.getFlags = function() {
          var _a, _b;
          return (_b = (_a = this.Ff()) === null || _a === void 0 ? void 0 : _a.asNumber()) !== null && _b !== void 0 ? _b : 0;
        };
        PDFAcroField2.prototype.setFlags = function(flags) {
          this.dict.set(PDFName_1.default.of("Ff"), PDFNumber_1.default.of(flags));
        };
        PDFAcroField2.prototype.hasFlag = function(flag) {
          var flags = this.getFlags();
          return (flags & flag) !== 0;
        };
        PDFAcroField2.prototype.setFlag = function(flag) {
          var flags = this.getFlags();
          this.setFlags(flags | flag);
        };
        PDFAcroField2.prototype.clearFlag = function(flag) {
          var flags = this.getFlags();
          this.setFlags(flags & ~flag);
        };
        PDFAcroField2.prototype.setFlagTo = function(flag, enable) {
          if (enable)
            this.setFlag(flag);
          else
            this.clearFlag(flag);
        };
        PDFAcroField2.prototype.getInheritableAttribute = function(name) {
          var attribute;
          this.ascend(function(node) {
            if (!attribute)
              attribute = node.dict.get(name);
          });
          return attribute;
        };
        PDFAcroField2.prototype.ascend = function(visitor) {
          visitor(this);
          var parent = this.getParent();
          if (parent)
            parent.ascend(visitor);
        };
        return PDFAcroField2;
      }()
    );
    exports.default = PDFAcroField;
  }
});

// node_modules/pdf-lib/cjs/core/annotation/BorderStyle.js
var require_BorderStyle = __commonJS({
  "node_modules/pdf-lib/cjs/core/annotation/BorderStyle.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFNumber_1 = tslib_1.__importDefault(require_PDFNumber());
    var BorderStyle = (
      /** @class */
      function() {
        function BorderStyle2(dict) {
          this.dict = dict;
        }
        BorderStyle2.prototype.W = function() {
          var W = this.dict.lookup(PDFName_1.default.of("W"));
          if (W instanceof PDFNumber_1.default)
            return W;
          return void 0;
        };
        BorderStyle2.prototype.getWidth = function() {
          var _a, _b;
          return (_b = (_a = this.W()) === null || _a === void 0 ? void 0 : _a.asNumber()) !== null && _b !== void 0 ? _b : 1;
        };
        BorderStyle2.prototype.setWidth = function(width) {
          var W = this.dict.context.obj(width);
          this.dict.set(PDFName_1.default.of("W"), W);
        };
        BorderStyle2.fromDict = function(dict) {
          return new BorderStyle2(dict);
        };
        return BorderStyle2;
      }()
    );
    exports.default = BorderStyle;
  }
});

// node_modules/pdf-lib/cjs/core/annotation/PDFAnnotation.js
var require_PDFAnnotation = __commonJS({
  "node_modules/pdf-lib/cjs/core/annotation/PDFAnnotation.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFDict_1 = tslib_1.__importDefault(require_PDFDict());
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFStream_1 = tslib_1.__importDefault(require_PDFStream());
    var PDFArray_1 = tslib_1.__importDefault(require_PDFArray());
    var PDFRef_1 = tslib_1.__importDefault(require_PDFRef());
    var PDFNumber_1 = tslib_1.__importDefault(require_PDFNumber());
    var PDFAnnotation = (
      /** @class */
      function() {
        function PDFAnnotation2(dict) {
          this.dict = dict;
        }
        PDFAnnotation2.prototype.Rect = function() {
          return this.dict.lookup(PDFName_1.default.of("Rect"), PDFArray_1.default);
        };
        PDFAnnotation2.prototype.AP = function() {
          return this.dict.lookupMaybe(PDFName_1.default.of("AP"), PDFDict_1.default);
        };
        PDFAnnotation2.prototype.F = function() {
          var numberOrRef = this.dict.lookup(PDFName_1.default.of("F"));
          return this.dict.context.lookupMaybe(numberOrRef, PDFNumber_1.default);
        };
        PDFAnnotation2.prototype.getRectangle = function() {
          var _a;
          var Rect = this.Rect();
          return (_a = Rect === null || Rect === void 0 ? void 0 : Rect.asRectangle()) !== null && _a !== void 0 ? _a : { x: 0, y: 0, width: 0, height: 0 };
        };
        PDFAnnotation2.prototype.setRectangle = function(rect) {
          var x = rect.x, y = rect.y, width = rect.width, height = rect.height;
          var Rect = this.dict.context.obj([x, y, x + width, y + height]);
          this.dict.set(PDFName_1.default.of("Rect"), Rect);
        };
        PDFAnnotation2.prototype.getAppearanceState = function() {
          var AS = this.dict.lookup(PDFName_1.default.of("AS"));
          if (AS instanceof PDFName_1.default)
            return AS;
          return void 0;
        };
        PDFAnnotation2.prototype.setAppearanceState = function(state) {
          this.dict.set(PDFName_1.default.of("AS"), state);
        };
        PDFAnnotation2.prototype.setAppearances = function(appearances) {
          this.dict.set(PDFName_1.default.of("AP"), appearances);
        };
        PDFAnnotation2.prototype.ensureAP = function() {
          var AP = this.AP();
          if (!AP) {
            AP = this.dict.context.obj({});
            this.dict.set(PDFName_1.default.of("AP"), AP);
          }
          return AP;
        };
        PDFAnnotation2.prototype.getNormalAppearance = function() {
          var AP = this.ensureAP();
          var N = AP.get(PDFName_1.default.of("N"));
          if (N instanceof PDFRef_1.default || N instanceof PDFDict_1.default)
            return N;
          throw new Error("Unexpected N type: " + (N === null || N === void 0 ? void 0 : N.constructor.name));
        };
        PDFAnnotation2.prototype.setNormalAppearance = function(appearance) {
          var AP = this.ensureAP();
          AP.set(PDFName_1.default.of("N"), appearance);
        };
        PDFAnnotation2.prototype.setRolloverAppearance = function(appearance) {
          var AP = this.ensureAP();
          AP.set(PDFName_1.default.of("R"), appearance);
        };
        PDFAnnotation2.prototype.setDownAppearance = function(appearance) {
          var AP = this.ensureAP();
          AP.set(PDFName_1.default.of("D"), appearance);
        };
        PDFAnnotation2.prototype.removeRolloverAppearance = function() {
          var AP = this.AP();
          AP === null || AP === void 0 ? void 0 : AP.delete(PDFName_1.default.of("R"));
        };
        PDFAnnotation2.prototype.removeDownAppearance = function() {
          var AP = this.AP();
          AP === null || AP === void 0 ? void 0 : AP.delete(PDFName_1.default.of("D"));
        };
        PDFAnnotation2.prototype.getAppearances = function() {
          var AP = this.AP();
          if (!AP)
            return void 0;
          var N = AP.lookup(PDFName_1.default.of("N"), PDFDict_1.default, PDFStream_1.default);
          var R = AP.lookupMaybe(PDFName_1.default.of("R"), PDFDict_1.default, PDFStream_1.default);
          var D = AP.lookupMaybe(PDFName_1.default.of("D"), PDFDict_1.default, PDFStream_1.default);
          return { normal: N, rollover: R, down: D };
        };
        PDFAnnotation2.prototype.getFlags = function() {
          var _a, _b;
          return (_b = (_a = this.F()) === null || _a === void 0 ? void 0 : _a.asNumber()) !== null && _b !== void 0 ? _b : 0;
        };
        PDFAnnotation2.prototype.setFlags = function(flags) {
          this.dict.set(PDFName_1.default.of("F"), PDFNumber_1.default.of(flags));
        };
        PDFAnnotation2.prototype.hasFlag = function(flag) {
          var flags = this.getFlags();
          return (flags & flag) !== 0;
        };
        PDFAnnotation2.prototype.setFlag = function(flag) {
          var flags = this.getFlags();
          this.setFlags(flags | flag);
        };
        PDFAnnotation2.prototype.clearFlag = function(flag) {
          var flags = this.getFlags();
          this.setFlags(flags & ~flag);
        };
        PDFAnnotation2.prototype.setFlagTo = function(flag, enable) {
          if (enable)
            this.setFlag(flag);
          else
            this.clearFlag(flag);
        };
        PDFAnnotation2.fromDict = function(dict) {
          return new PDFAnnotation2(dict);
        };
        return PDFAnnotation2;
      }()
    );
    exports.default = PDFAnnotation;
  }
});

// node_modules/pdf-lib/cjs/core/annotation/AppearanceCharacteristics.js
var require_AppearanceCharacteristics = __commonJS({
  "node_modules/pdf-lib/cjs/core/annotation/AppearanceCharacteristics.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFNumber_1 = tslib_1.__importDefault(require_PDFNumber());
    var PDFArray_1 = tslib_1.__importDefault(require_PDFArray());
    var PDFHexString_1 = tslib_1.__importDefault(require_PDFHexString());
    var PDFString_1 = tslib_1.__importDefault(require_PDFString());
    var AppearanceCharacteristics = (
      /** @class */
      function() {
        function AppearanceCharacteristics2(dict) {
          this.dict = dict;
        }
        AppearanceCharacteristics2.prototype.R = function() {
          var R = this.dict.lookup(PDFName_1.default.of("R"));
          if (R instanceof PDFNumber_1.default)
            return R;
          return void 0;
        };
        AppearanceCharacteristics2.prototype.BC = function() {
          var BC = this.dict.lookup(PDFName_1.default.of("BC"));
          if (BC instanceof PDFArray_1.default)
            return BC;
          return void 0;
        };
        AppearanceCharacteristics2.prototype.BG = function() {
          var BG = this.dict.lookup(PDFName_1.default.of("BG"));
          if (BG instanceof PDFArray_1.default)
            return BG;
          return void 0;
        };
        AppearanceCharacteristics2.prototype.CA = function() {
          var CA = this.dict.lookup(PDFName_1.default.of("CA"));
          if (CA instanceof PDFHexString_1.default || CA instanceof PDFString_1.default)
            return CA;
          return void 0;
        };
        AppearanceCharacteristics2.prototype.RC = function() {
          var RC = this.dict.lookup(PDFName_1.default.of("RC"));
          if (RC instanceof PDFHexString_1.default || RC instanceof PDFString_1.default)
            return RC;
          return void 0;
        };
        AppearanceCharacteristics2.prototype.AC = function() {
          var AC = this.dict.lookup(PDFName_1.default.of("AC"));
          if (AC instanceof PDFHexString_1.default || AC instanceof PDFString_1.default)
            return AC;
          return void 0;
        };
        AppearanceCharacteristics2.prototype.getRotation = function() {
          var _a;
          return (_a = this.R()) === null || _a === void 0 ? void 0 : _a.asNumber();
        };
        AppearanceCharacteristics2.prototype.getBorderColor = function() {
          var BC = this.BC();
          if (!BC)
            return void 0;
          var components = [];
          for (var idx = 0, len = BC === null || BC === void 0 ? void 0 : BC.size(); idx < len; idx++) {
            var component = BC.get(idx);
            if (component instanceof PDFNumber_1.default)
              components.push(component.asNumber());
          }
          return components;
        };
        AppearanceCharacteristics2.prototype.getBackgroundColor = function() {
          var BG = this.BG();
          if (!BG)
            return void 0;
          var components = [];
          for (var idx = 0, len = BG === null || BG === void 0 ? void 0 : BG.size(); idx < len; idx++) {
            var component = BG.get(idx);
            if (component instanceof PDFNumber_1.default)
              components.push(component.asNumber());
          }
          return components;
        };
        AppearanceCharacteristics2.prototype.getCaptions = function() {
          var CA = this.CA();
          var RC = this.RC();
          var AC = this.AC();
          return {
            normal: CA === null || CA === void 0 ? void 0 : CA.decodeText(),
            rollover: RC === null || RC === void 0 ? void 0 : RC.decodeText(),
            down: AC === null || AC === void 0 ? void 0 : AC.decodeText()
          };
        };
        AppearanceCharacteristics2.prototype.setRotation = function(rotation) {
          var R = this.dict.context.obj(rotation);
          this.dict.set(PDFName_1.default.of("R"), R);
        };
        AppearanceCharacteristics2.prototype.setBorderColor = function(color) {
          var BC = this.dict.context.obj(color);
          this.dict.set(PDFName_1.default.of("BC"), BC);
        };
        AppearanceCharacteristics2.prototype.setBackgroundColor = function(color) {
          var BG = this.dict.context.obj(color);
          this.dict.set(PDFName_1.default.of("BG"), BG);
        };
        AppearanceCharacteristics2.prototype.setCaptions = function(captions) {
          var CA = PDFHexString_1.default.fromText(captions.normal);
          this.dict.set(PDFName_1.default.of("CA"), CA);
          if (captions.rollover) {
            var RC = PDFHexString_1.default.fromText(captions.rollover);
            this.dict.set(PDFName_1.default.of("RC"), RC);
          } else {
            this.dict.delete(PDFName_1.default.of("RC"));
          }
          if (captions.down) {
            var AC = PDFHexString_1.default.fromText(captions.down);
            this.dict.set(PDFName_1.default.of("AC"), AC);
          } else {
            this.dict.delete(PDFName_1.default.of("AC"));
          }
        };
        AppearanceCharacteristics2.fromDict = function(dict) {
          return new AppearanceCharacteristics2(dict);
        };
        return AppearanceCharacteristics2;
      }()
    );
    exports.default = AppearanceCharacteristics;
  }
});

// node_modules/pdf-lib/cjs/core/annotation/PDFWidgetAnnotation.js
var require_PDFWidgetAnnotation = __commonJS({
  "node_modules/pdf-lib/cjs/core/annotation/PDFWidgetAnnotation.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFDict_1 = tslib_1.__importDefault(require_PDFDict());
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFRef_1 = tslib_1.__importDefault(require_PDFRef());
    var PDFString_1 = tslib_1.__importDefault(require_PDFString());
    var PDFHexString_1 = tslib_1.__importDefault(require_PDFHexString());
    var BorderStyle_1 = tslib_1.__importDefault(require_BorderStyle());
    var PDFAnnotation_1 = tslib_1.__importDefault(require_PDFAnnotation());
    var AppearanceCharacteristics_1 = tslib_1.__importDefault(require_AppearanceCharacteristics());
    var PDFWidgetAnnotation = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFWidgetAnnotation2, _super);
        function PDFWidgetAnnotation2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        PDFWidgetAnnotation2.prototype.MK = function() {
          var MK = this.dict.lookup(PDFName_1.default.of("MK"));
          if (MK instanceof PDFDict_1.default)
            return MK;
          return void 0;
        };
        PDFWidgetAnnotation2.prototype.BS = function() {
          var BS = this.dict.lookup(PDFName_1.default.of("BS"));
          if (BS instanceof PDFDict_1.default)
            return BS;
          return void 0;
        };
        PDFWidgetAnnotation2.prototype.DA = function() {
          var da = this.dict.lookup(PDFName_1.default.of("DA"));
          if (da instanceof PDFString_1.default || da instanceof PDFHexString_1.default)
            return da;
          return void 0;
        };
        PDFWidgetAnnotation2.prototype.P = function() {
          var P = this.dict.get(PDFName_1.default.of("P"));
          if (P instanceof PDFRef_1.default)
            return P;
          return void 0;
        };
        PDFWidgetAnnotation2.prototype.setP = function(page) {
          this.dict.set(PDFName_1.default.of("P"), page);
        };
        PDFWidgetAnnotation2.prototype.setDefaultAppearance = function(appearance) {
          this.dict.set(PDFName_1.default.of("DA"), PDFString_1.default.of(appearance));
        };
        PDFWidgetAnnotation2.prototype.getDefaultAppearance = function() {
          var DA = this.DA();
          if (DA instanceof PDFHexString_1.default) {
            return DA.decodeText();
          }
          return DA === null || DA === void 0 ? void 0 : DA.asString();
        };
        PDFWidgetAnnotation2.prototype.getAppearanceCharacteristics = function() {
          var MK = this.MK();
          if (MK)
            return AppearanceCharacteristics_1.default.fromDict(MK);
          return void 0;
        };
        PDFWidgetAnnotation2.prototype.getOrCreateAppearanceCharacteristics = function() {
          var MK = this.MK();
          if (MK)
            return AppearanceCharacteristics_1.default.fromDict(MK);
          var ac = AppearanceCharacteristics_1.default.fromDict(this.dict.context.obj({}));
          this.dict.set(PDFName_1.default.of("MK"), ac.dict);
          return ac;
        };
        PDFWidgetAnnotation2.prototype.getBorderStyle = function() {
          var BS = this.BS();
          if (BS)
            return BorderStyle_1.default.fromDict(BS);
          return void 0;
        };
        PDFWidgetAnnotation2.prototype.getOrCreateBorderStyle = function() {
          var BS = this.BS();
          if (BS)
            return BorderStyle_1.default.fromDict(BS);
          var bs = BorderStyle_1.default.fromDict(this.dict.context.obj({}));
          this.dict.set(PDFName_1.default.of("BS"), bs.dict);
          return bs;
        };
        PDFWidgetAnnotation2.prototype.getOnValue = function() {
          var _a;
          var normal = (_a = this.getAppearances()) === null || _a === void 0 ? void 0 : _a.normal;
          if (normal instanceof PDFDict_1.default) {
            var keys = normal.keys();
            for (var idx = 0, len = keys.length; idx < len; idx++) {
              var key = keys[idx];
              if (key !== PDFName_1.default.of("Off"))
                return key;
            }
          }
          return void 0;
        };
        PDFWidgetAnnotation2.fromDict = function(dict) {
          return new PDFWidgetAnnotation2(dict);
        };
        PDFWidgetAnnotation2.create = function(context, parent) {
          var dict = context.obj({
            Type: "Annot",
            Subtype: "Widget",
            Rect: [0, 0, 0, 0],
            Parent: parent
          });
          return new PDFWidgetAnnotation2(dict);
        };
        return PDFWidgetAnnotation2;
      }(PDFAnnotation_1.default)
    );
    exports.default = PDFWidgetAnnotation;
  }
});

// node_modules/pdf-lib/cjs/core/acroform/PDFAcroTerminal.js
var require_PDFAcroTerminal = __commonJS({
  "node_modules/pdf-lib/cjs/core/acroform/PDFAcroTerminal.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFDict_1 = tslib_1.__importDefault(require_PDFDict());
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFAcroField_1 = tslib_1.__importDefault(require_PDFAcroField());
    var PDFWidgetAnnotation_1 = tslib_1.__importDefault(require_PDFWidgetAnnotation());
    var errors_1 = require_errors2();
    var PDFAcroTerminal = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFAcroTerminal2, _super);
        function PDFAcroTerminal2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        PDFAcroTerminal2.prototype.FT = function() {
          var nameOrRef = this.getInheritableAttribute(PDFName_1.default.of("FT"));
          return this.dict.context.lookup(nameOrRef, PDFName_1.default);
        };
        PDFAcroTerminal2.prototype.getWidgets = function() {
          var kidDicts = this.Kids();
          if (!kidDicts)
            return [PDFWidgetAnnotation_1.default.fromDict(this.dict)];
          var widgets = new Array(kidDicts.size());
          for (var idx = 0, len = kidDicts.size(); idx < len; idx++) {
            var dict = kidDicts.lookup(idx, PDFDict_1.default);
            widgets[idx] = PDFWidgetAnnotation_1.default.fromDict(dict);
          }
          return widgets;
        };
        PDFAcroTerminal2.prototype.addWidget = function(ref) {
          var Kids = this.normalizedEntries().Kids;
          Kids.push(ref);
        };
        PDFAcroTerminal2.prototype.removeWidget = function(idx) {
          var kidDicts = this.Kids();
          if (!kidDicts) {
            if (idx !== 0)
              throw new errors_1.IndexOutOfBoundsError(idx, 0, 0);
            this.setKids([]);
          } else {
            if (idx < 0 || idx > kidDicts.size()) {
              throw new errors_1.IndexOutOfBoundsError(idx, 0, kidDicts.size());
            }
            kidDicts.remove(idx);
          }
        };
        PDFAcroTerminal2.prototype.normalizedEntries = function() {
          var Kids = this.Kids();
          if (!Kids) {
            Kids = this.dict.context.obj([this.ref]);
            this.dict.set(PDFName_1.default.of("Kids"), Kids);
          }
          return { Kids };
        };
        PDFAcroTerminal2.fromDict = function(dict, ref) {
          return new PDFAcroTerminal2(dict, ref);
        };
        return PDFAcroTerminal2;
      }(PDFAcroField_1.default)
    );
    exports.default = PDFAcroTerminal;
  }
});

// node_modules/pdf-lib/cjs/core/acroform/PDFAcroButton.js
var require_PDFAcroButton = __commonJS({
  "node_modules/pdf-lib/cjs/core/acroform/PDFAcroButton.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFString_1 = tslib_1.__importDefault(require_PDFString());
    var PDFHexString_1 = tslib_1.__importDefault(require_PDFHexString());
    var PDFArray_1 = tslib_1.__importDefault(require_PDFArray());
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFAcroTerminal_1 = tslib_1.__importDefault(require_PDFAcroTerminal());
    var errors_1 = require_errors2();
    var PDFAcroButton = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFAcroButton2, _super);
        function PDFAcroButton2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        PDFAcroButton2.prototype.Opt = function() {
          return this.dict.lookupMaybe(PDFName_1.default.of("Opt"), PDFString_1.default, PDFHexString_1.default, PDFArray_1.default);
        };
        PDFAcroButton2.prototype.setOpt = function(opt) {
          this.dict.set(PDFName_1.default.of("Opt"), this.dict.context.obj(opt));
        };
        PDFAcroButton2.prototype.getExportValues = function() {
          var opt = this.Opt();
          if (!opt)
            return void 0;
          if (opt instanceof PDFString_1.default || opt instanceof PDFHexString_1.default) {
            return [opt];
          }
          var values = [];
          for (var idx = 0, len = opt.size(); idx < len; idx++) {
            var value = opt.lookup(idx);
            if (value instanceof PDFString_1.default || value instanceof PDFHexString_1.default) {
              values.push(value);
            }
          }
          return values;
        };
        PDFAcroButton2.prototype.removeExportValue = function(idx) {
          var opt = this.Opt();
          if (!opt)
            return;
          if (opt instanceof PDFString_1.default || opt instanceof PDFHexString_1.default) {
            if (idx !== 0)
              throw new errors_1.IndexOutOfBoundsError(idx, 0, 0);
            this.setOpt([]);
          } else {
            if (idx < 0 || idx > opt.size()) {
              throw new errors_1.IndexOutOfBoundsError(idx, 0, opt.size());
            }
            opt.remove(idx);
          }
        };
        PDFAcroButton2.prototype.normalizeExportValues = function() {
          var _a, _b, _c, _d;
          var exportValues = (_a = this.getExportValues()) !== null && _a !== void 0 ? _a : [];
          var Opt = [];
          var widgets = this.getWidgets();
          for (var idx = 0, len = widgets.length; idx < len; idx++) {
            var widget = widgets[idx];
            var exportVal = (_b = exportValues[idx]) !== null && _b !== void 0 ? _b : PDFHexString_1.default.fromText((_d = (_c = widget.getOnValue()) === null || _c === void 0 ? void 0 : _c.decodeText()) !== null && _d !== void 0 ? _d : "");
            Opt.push(exportVal);
          }
          this.setOpt(Opt);
        };
        PDFAcroButton2.prototype.addOpt = function(opt, useExistingOptIdx) {
          var _a;
          this.normalizeExportValues();
          var optText = opt.decodeText();
          var existingIdx;
          if (useExistingOptIdx) {
            var exportValues = (_a = this.getExportValues()) !== null && _a !== void 0 ? _a : [];
            for (var idx = 0, len = exportValues.length; idx < len; idx++) {
              var exportVal = exportValues[idx];
              if (exportVal.decodeText() === optText)
                existingIdx = idx;
            }
          }
          var Opt = this.Opt();
          Opt.push(opt);
          return existingIdx !== null && existingIdx !== void 0 ? existingIdx : Opt.size() - 1;
        };
        PDFAcroButton2.prototype.addWidgetWithOpt = function(widget, opt, useExistingOptIdx) {
          var optIdx = this.addOpt(opt, useExistingOptIdx);
          var apStateValue = PDFName_1.default.of(String(optIdx));
          this.addWidget(widget);
          return apStateValue;
        };
        return PDFAcroButton2;
      }(PDFAcroTerminal_1.default)
    );
    exports.default = PDFAcroButton;
  }
});

// node_modules/pdf-lib/cjs/core/acroform/PDFAcroCheckBox.js
var require_PDFAcroCheckBox = __commonJS({
  "node_modules/pdf-lib/cjs/core/acroform/PDFAcroCheckBox.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFAcroButton_1 = tslib_1.__importDefault(require_PDFAcroButton());
    var errors_1 = require_errors2();
    var PDFAcroCheckBox = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFAcroCheckBox2, _super);
        function PDFAcroCheckBox2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        PDFAcroCheckBox2.prototype.setValue = function(value) {
          var _a;
          var onValue = (_a = this.getOnValue()) !== null && _a !== void 0 ? _a : PDFName_1.default.of("Yes");
          if (value !== onValue && value !== PDFName_1.default.of("Off")) {
            throw new errors_1.InvalidAcroFieldValueError();
          }
          this.dict.set(PDFName_1.default.of("V"), value);
          var widgets = this.getWidgets();
          for (var idx = 0, len = widgets.length; idx < len; idx++) {
            var widget = widgets[idx];
            var state = widget.getOnValue() === value ? value : PDFName_1.default.of("Off");
            widget.setAppearanceState(state);
          }
        };
        PDFAcroCheckBox2.prototype.getValue = function() {
          var v = this.V();
          if (v instanceof PDFName_1.default)
            return v;
          return PDFName_1.default.of("Off");
        };
        PDFAcroCheckBox2.prototype.getOnValue = function() {
          var widget = this.getWidgets()[0];
          return widget === null || widget === void 0 ? void 0 : widget.getOnValue();
        };
        PDFAcroCheckBox2.fromDict = function(dict, ref) {
          return new PDFAcroCheckBox2(dict, ref);
        };
        PDFAcroCheckBox2.create = function(context) {
          var dict = context.obj({
            FT: "Btn",
            Kids: []
          });
          var ref = context.register(dict);
          return new PDFAcroCheckBox2(dict, ref);
        };
        return PDFAcroCheckBox2;
      }(PDFAcroButton_1.default)
    );
    exports.default = PDFAcroCheckBox;
  }
});

// node_modules/pdf-lib/cjs/core/acroform/flags.js
var require_flags = __commonJS({
  "node_modules/pdf-lib/cjs/core/acroform/flags.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AcroChoiceFlags = exports.AcroTextFlags = exports.AcroButtonFlags = exports.AcroFieldFlags = void 0;
    var flag = function(bitIndex) {
      return 1 << bitIndex;
    };
    var AcroFieldFlags;
    (function(AcroFieldFlags2) {
      AcroFieldFlags2[AcroFieldFlags2["ReadOnly"] = flag(1 - 1)] = "ReadOnly";
      AcroFieldFlags2[AcroFieldFlags2["Required"] = flag(2 - 1)] = "Required";
      AcroFieldFlags2[AcroFieldFlags2["NoExport"] = flag(3 - 1)] = "NoExport";
    })(AcroFieldFlags = exports.AcroFieldFlags || (exports.AcroFieldFlags = {}));
    var AcroButtonFlags;
    (function(AcroButtonFlags2) {
      AcroButtonFlags2[AcroButtonFlags2["NoToggleToOff"] = flag(15 - 1)] = "NoToggleToOff";
      AcroButtonFlags2[AcroButtonFlags2["Radio"] = flag(16 - 1)] = "Radio";
      AcroButtonFlags2[AcroButtonFlags2["PushButton"] = flag(17 - 1)] = "PushButton";
      AcroButtonFlags2[AcroButtonFlags2["RadiosInUnison"] = flag(26 - 1)] = "RadiosInUnison";
    })(AcroButtonFlags = exports.AcroButtonFlags || (exports.AcroButtonFlags = {}));
    var AcroTextFlags;
    (function(AcroTextFlags2) {
      AcroTextFlags2[AcroTextFlags2["Multiline"] = flag(13 - 1)] = "Multiline";
      AcroTextFlags2[AcroTextFlags2["Password"] = flag(14 - 1)] = "Password";
      AcroTextFlags2[AcroTextFlags2["FileSelect"] = flag(21 - 1)] = "FileSelect";
      AcroTextFlags2[AcroTextFlags2["DoNotSpellCheck"] = flag(23 - 1)] = "DoNotSpellCheck";
      AcroTextFlags2[AcroTextFlags2["DoNotScroll"] = flag(24 - 1)] = "DoNotScroll";
      AcroTextFlags2[AcroTextFlags2["Comb"] = flag(25 - 1)] = "Comb";
      AcroTextFlags2[AcroTextFlags2["RichText"] = flag(26 - 1)] = "RichText";
    })(AcroTextFlags = exports.AcroTextFlags || (exports.AcroTextFlags = {}));
    var AcroChoiceFlags;
    (function(AcroChoiceFlags2) {
      AcroChoiceFlags2[AcroChoiceFlags2["Combo"] = flag(18 - 1)] = "Combo";
      AcroChoiceFlags2[AcroChoiceFlags2["Edit"] = flag(19 - 1)] = "Edit";
      AcroChoiceFlags2[AcroChoiceFlags2["Sort"] = flag(20 - 1)] = "Sort";
      AcroChoiceFlags2[AcroChoiceFlags2["MultiSelect"] = flag(22 - 1)] = "MultiSelect";
      AcroChoiceFlags2[AcroChoiceFlags2["DoNotSpellCheck"] = flag(23 - 1)] = "DoNotSpellCheck";
      AcroChoiceFlags2[AcroChoiceFlags2["CommitOnSelChange"] = flag(27 - 1)] = "CommitOnSelChange";
    })(AcroChoiceFlags = exports.AcroChoiceFlags || (exports.AcroChoiceFlags = {}));
  }
});

// node_modules/pdf-lib/cjs/core/acroform/PDFAcroChoice.js
var require_PDFAcroChoice = __commonJS({
  "node_modules/pdf-lib/cjs/core/acroform/PDFAcroChoice.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFAcroTerminal_1 = tslib_1.__importDefault(require_PDFAcroTerminal());
    var PDFHexString_1 = tslib_1.__importDefault(require_PDFHexString());
    var PDFString_1 = tslib_1.__importDefault(require_PDFString());
    var PDFArray_1 = tslib_1.__importDefault(require_PDFArray());
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var flags_1 = require_flags();
    var errors_1 = require_errors2();
    var PDFAcroChoice = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFAcroChoice2, _super);
        function PDFAcroChoice2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        PDFAcroChoice2.prototype.setValues = function(values) {
          if (this.hasFlag(flags_1.AcroChoiceFlags.Combo) && !this.hasFlag(flags_1.AcroChoiceFlags.Edit) && !this.valuesAreValid(values)) {
            throw new errors_1.InvalidAcroFieldValueError();
          }
          if (values.length === 0) {
            this.dict.delete(PDFName_1.default.of("V"));
          }
          if (values.length === 1) {
            this.dict.set(PDFName_1.default.of("V"), values[0]);
          }
          if (values.length > 1) {
            if (!this.hasFlag(flags_1.AcroChoiceFlags.MultiSelect)) {
              throw new errors_1.MultiSelectValueError();
            }
            this.dict.set(PDFName_1.default.of("V"), this.dict.context.obj(values));
          }
          this.updateSelectedIndices(values);
        };
        PDFAcroChoice2.prototype.valuesAreValid = function(values) {
          var options = this.getOptions();
          var _loop_1 = function(idx2, len2) {
            var val = values[idx2].decodeText();
            if (!options.find(function(o) {
              return val === (o.display || o.value).decodeText();
            })) {
              return { value: false };
            }
          };
          for (var idx = 0, len = values.length; idx < len; idx++) {
            var state_1 = _loop_1(idx, len);
            if (typeof state_1 === "object")
              return state_1.value;
          }
          return true;
        };
        PDFAcroChoice2.prototype.updateSelectedIndices = function(values) {
          if (values.length > 1) {
            var indices = new Array(values.length);
            var options = this.getOptions();
            var _loop_2 = function(idx2, len2) {
              var val = values[idx2].decodeText();
              indices[idx2] = options.findIndex(function(o) {
                return val === (o.display || o.value).decodeText();
              });
            };
            for (var idx = 0, len = values.length; idx < len; idx++) {
              _loop_2(idx, len);
            }
            this.dict.set(PDFName_1.default.of("I"), this.dict.context.obj(indices.sort()));
          } else {
            this.dict.delete(PDFName_1.default.of("I"));
          }
        };
        PDFAcroChoice2.prototype.getValues = function() {
          var v = this.V();
          if (v instanceof PDFString_1.default || v instanceof PDFHexString_1.default)
            return [v];
          if (v instanceof PDFArray_1.default) {
            var values = [];
            for (var idx = 0, len = v.size(); idx < len; idx++) {
              var value = v.lookup(idx);
              if (value instanceof PDFString_1.default || value instanceof PDFHexString_1.default) {
                values.push(value);
              }
            }
            return values;
          }
          return [];
        };
        PDFAcroChoice2.prototype.Opt = function() {
          return this.dict.lookupMaybe(PDFName_1.default.of("Opt"), PDFString_1.default, PDFHexString_1.default, PDFArray_1.default);
        };
        PDFAcroChoice2.prototype.setOptions = function(options) {
          var newOpt = new Array(options.length);
          for (var idx = 0, len = options.length; idx < len; idx++) {
            var _a = options[idx], value = _a.value, display = _a.display;
            newOpt[idx] = this.dict.context.obj([value, display || value]);
          }
          this.dict.set(PDFName_1.default.of("Opt"), this.dict.context.obj(newOpt));
        };
        PDFAcroChoice2.prototype.getOptions = function() {
          var Opt = this.Opt();
          if (Opt instanceof PDFString_1.default || Opt instanceof PDFHexString_1.default) {
            return [{ value: Opt, display: Opt }];
          }
          if (Opt instanceof PDFArray_1.default) {
            var res = [];
            for (var idx = 0, len = Opt.size(); idx < len; idx++) {
              var item = Opt.lookup(idx);
              if (item instanceof PDFString_1.default || item instanceof PDFHexString_1.default) {
                res.push({ value: item, display: item });
              }
              if (item instanceof PDFArray_1.default) {
                if (item.size() > 0) {
                  var first = item.lookup(0, PDFString_1.default, PDFHexString_1.default);
                  var second = item.lookupMaybe(1, PDFString_1.default, PDFHexString_1.default);
                  res.push({ value: first, display: second || first });
                }
              }
            }
            return res;
          }
          return [];
        };
        return PDFAcroChoice2;
      }(PDFAcroTerminal_1.default)
    );
    exports.default = PDFAcroChoice;
  }
});

// node_modules/pdf-lib/cjs/core/acroform/PDFAcroComboBox.js
var require_PDFAcroComboBox = __commonJS({
  "node_modules/pdf-lib/cjs/core/acroform/PDFAcroComboBox.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFAcroChoice_1 = tslib_1.__importDefault(require_PDFAcroChoice());
    var flags_1 = require_flags();
    var PDFAcroComboBox = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFAcroComboBox2, _super);
        function PDFAcroComboBox2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        PDFAcroComboBox2.fromDict = function(dict, ref) {
          return new PDFAcroComboBox2(dict, ref);
        };
        PDFAcroComboBox2.create = function(context) {
          var dict = context.obj({
            FT: "Ch",
            Ff: flags_1.AcroChoiceFlags.Combo,
            Kids: []
          });
          var ref = context.register(dict);
          return new PDFAcroComboBox2(dict, ref);
        };
        return PDFAcroComboBox2;
      }(PDFAcroChoice_1.default)
    );
    exports.default = PDFAcroComboBox;
  }
});

// node_modules/pdf-lib/cjs/core/acroform/PDFAcroNonTerminal.js
var require_PDFAcroNonTerminal = __commonJS({
  "node_modules/pdf-lib/cjs/core/acroform/PDFAcroNonTerminal.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFAcroField_1 = tslib_1.__importDefault(require_PDFAcroField());
    var PDFAcroNonTerminal = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFAcroNonTerminal2, _super);
        function PDFAcroNonTerminal2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        PDFAcroNonTerminal2.prototype.addField = function(field) {
          var Kids = this.normalizedEntries().Kids;
          Kids === null || Kids === void 0 ? void 0 : Kids.push(field);
        };
        PDFAcroNonTerminal2.prototype.normalizedEntries = function() {
          var Kids = this.Kids();
          if (!Kids) {
            Kids = this.dict.context.obj([]);
            this.dict.set(PDFName_1.default.of("Kids"), Kids);
          }
          return { Kids };
        };
        PDFAcroNonTerminal2.fromDict = function(dict, ref) {
          return new PDFAcroNonTerminal2(dict, ref);
        };
        PDFAcroNonTerminal2.create = function(context) {
          var dict = context.obj({});
          var ref = context.register(dict);
          return new PDFAcroNonTerminal2(dict, ref);
        };
        return PDFAcroNonTerminal2;
      }(PDFAcroField_1.default)
    );
    exports.default = PDFAcroNonTerminal;
  }
});

// node_modules/pdf-lib/cjs/core/acroform/PDFAcroSignature.js
var require_PDFAcroSignature = __commonJS({
  "node_modules/pdf-lib/cjs/core/acroform/PDFAcroSignature.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFAcroTerminal_1 = tslib_1.__importDefault(require_PDFAcroTerminal());
    var PDFAcroSignature = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFAcroSignature2, _super);
        function PDFAcroSignature2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        PDFAcroSignature2.fromDict = function(dict, ref) {
          return new PDFAcroSignature2(dict, ref);
        };
        return PDFAcroSignature2;
      }(PDFAcroTerminal_1.default)
    );
    exports.default = PDFAcroSignature;
  }
});

// node_modules/pdf-lib/cjs/core/acroform/PDFAcroText.js
var require_PDFAcroText = __commonJS({
  "node_modules/pdf-lib/cjs/core/acroform/PDFAcroText.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFNumber_1 = tslib_1.__importDefault(require_PDFNumber());
    var PDFString_1 = tslib_1.__importDefault(require_PDFString());
    var PDFHexString_1 = tslib_1.__importDefault(require_PDFHexString());
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFAcroTerminal_1 = tslib_1.__importDefault(require_PDFAcroTerminal());
    var PDFAcroText = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFAcroText2, _super);
        function PDFAcroText2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        PDFAcroText2.prototype.MaxLen = function() {
          var maxLen = this.dict.lookup(PDFName_1.default.of("MaxLen"));
          if (maxLen instanceof PDFNumber_1.default)
            return maxLen;
          return void 0;
        };
        PDFAcroText2.prototype.Q = function() {
          var q = this.dict.lookup(PDFName_1.default.of("Q"));
          if (q instanceof PDFNumber_1.default)
            return q;
          return void 0;
        };
        PDFAcroText2.prototype.setMaxLength = function(maxLength) {
          this.dict.set(PDFName_1.default.of("MaxLen"), PDFNumber_1.default.of(maxLength));
        };
        PDFAcroText2.prototype.removeMaxLength = function() {
          this.dict.delete(PDFName_1.default.of("MaxLen"));
        };
        PDFAcroText2.prototype.getMaxLength = function() {
          var _a;
          return (_a = this.MaxLen()) === null || _a === void 0 ? void 0 : _a.asNumber();
        };
        PDFAcroText2.prototype.setQuadding = function(quadding) {
          this.dict.set(PDFName_1.default.of("Q"), PDFNumber_1.default.of(quadding));
        };
        PDFAcroText2.prototype.getQuadding = function() {
          var _a;
          return (_a = this.Q()) === null || _a === void 0 ? void 0 : _a.asNumber();
        };
        PDFAcroText2.prototype.setValue = function(value) {
          this.dict.set(PDFName_1.default.of("V"), value);
        };
        PDFAcroText2.prototype.removeValue = function() {
          this.dict.delete(PDFName_1.default.of("V"));
        };
        PDFAcroText2.prototype.getValue = function() {
          var v = this.V();
          if (v instanceof PDFString_1.default || v instanceof PDFHexString_1.default)
            return v;
          return void 0;
        };
        PDFAcroText2.fromDict = function(dict, ref) {
          return new PDFAcroText2(dict, ref);
        };
        PDFAcroText2.create = function(context) {
          var dict = context.obj({
            FT: "Tx",
            Kids: []
          });
          var ref = context.register(dict);
          return new PDFAcroText2(dict, ref);
        };
        return PDFAcroText2;
      }(PDFAcroTerminal_1.default)
    );
    exports.default = PDFAcroText;
  }
});

// node_modules/pdf-lib/cjs/core/acroform/PDFAcroPushButton.js
var require_PDFAcroPushButton = __commonJS({
  "node_modules/pdf-lib/cjs/core/acroform/PDFAcroPushButton.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFAcroButton_1 = tslib_1.__importDefault(require_PDFAcroButton());
    var flags_1 = require_flags();
    var PDFAcroPushButton = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFAcroPushButton2, _super);
        function PDFAcroPushButton2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        PDFAcroPushButton2.fromDict = function(dict, ref) {
          return new PDFAcroPushButton2(dict, ref);
        };
        PDFAcroPushButton2.create = function(context) {
          var dict = context.obj({
            FT: "Btn",
            Ff: flags_1.AcroButtonFlags.PushButton,
            Kids: []
          });
          var ref = context.register(dict);
          return new PDFAcroPushButton2(dict, ref);
        };
        return PDFAcroPushButton2;
      }(PDFAcroButton_1.default)
    );
    exports.default = PDFAcroPushButton;
  }
});

// node_modules/pdf-lib/cjs/core/acroform/PDFAcroRadioButton.js
var require_PDFAcroRadioButton = __commonJS({
  "node_modules/pdf-lib/cjs/core/acroform/PDFAcroRadioButton.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFAcroButton_1 = tslib_1.__importDefault(require_PDFAcroButton());
    var flags_1 = require_flags();
    var errors_1 = require_errors2();
    var PDFAcroRadioButton = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFAcroRadioButton2, _super);
        function PDFAcroRadioButton2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        PDFAcroRadioButton2.prototype.setValue = function(value) {
          var onValues = this.getOnValues();
          if (!onValues.includes(value) && value !== PDFName_1.default.of("Off")) {
            throw new errors_1.InvalidAcroFieldValueError();
          }
          this.dict.set(PDFName_1.default.of("V"), value);
          var widgets = this.getWidgets();
          for (var idx = 0, len = widgets.length; idx < len; idx++) {
            var widget = widgets[idx];
            var state = widget.getOnValue() === value ? value : PDFName_1.default.of("Off");
            widget.setAppearanceState(state);
          }
        };
        PDFAcroRadioButton2.prototype.getValue = function() {
          var v = this.V();
          if (v instanceof PDFName_1.default)
            return v;
          return PDFName_1.default.of("Off");
        };
        PDFAcroRadioButton2.prototype.getOnValues = function() {
          var widgets = this.getWidgets();
          var onValues = [];
          for (var idx = 0, len = widgets.length; idx < len; idx++) {
            var onValue = widgets[idx].getOnValue();
            if (onValue)
              onValues.push(onValue);
          }
          return onValues;
        };
        PDFAcroRadioButton2.fromDict = function(dict, ref) {
          return new PDFAcroRadioButton2(dict, ref);
        };
        PDFAcroRadioButton2.create = function(context) {
          var dict = context.obj({
            FT: "Btn",
            Ff: flags_1.AcroButtonFlags.Radio,
            Kids: []
          });
          var ref = context.register(dict);
          return new PDFAcroRadioButton2(dict, ref);
        };
        return PDFAcroRadioButton2;
      }(PDFAcroButton_1.default)
    );
    exports.default = PDFAcroRadioButton;
  }
});

// node_modules/pdf-lib/cjs/core/acroform/PDFAcroListBox.js
var require_PDFAcroListBox = __commonJS({
  "node_modules/pdf-lib/cjs/core/acroform/PDFAcroListBox.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFAcroChoice_1 = tslib_1.__importDefault(require_PDFAcroChoice());
    var PDFAcroListBox = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFAcroListBox2, _super);
        function PDFAcroListBox2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        PDFAcroListBox2.fromDict = function(dict, ref) {
          return new PDFAcroListBox2(dict, ref);
        };
        PDFAcroListBox2.create = function(context) {
          var dict = context.obj({
            FT: "Ch",
            Kids: []
          });
          var ref = context.register(dict);
          return new PDFAcroListBox2(dict, ref);
        };
        return PDFAcroListBox2;
      }(PDFAcroChoice_1.default)
    );
    exports.default = PDFAcroListBox;
  }
});

// node_modules/pdf-lib/cjs/core/acroform/utils.js
var require_utils3 = __commonJS({
  "node_modules/pdf-lib/cjs/core/acroform/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createPDFAcroField = exports.createPDFAcroFields = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFNumber_1 = tslib_1.__importDefault(require_PDFNumber());
    var PDFDict_1 = tslib_1.__importDefault(require_PDFDict());
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFArray_1 = tslib_1.__importDefault(require_PDFArray());
    var PDFRef_1 = tslib_1.__importDefault(require_PDFRef());
    var PDFAcroTerminal_1 = tslib_1.__importDefault(require_PDFAcroTerminal());
    var PDFAcroNonTerminal_1 = tslib_1.__importDefault(require_PDFAcroNonTerminal());
    var PDFAcroSignature_1 = tslib_1.__importDefault(require_PDFAcroSignature());
    var PDFAcroText_1 = tslib_1.__importDefault(require_PDFAcroText());
    var PDFAcroPushButton_1 = tslib_1.__importDefault(require_PDFAcroPushButton());
    var PDFAcroRadioButton_1 = tslib_1.__importDefault(require_PDFAcroRadioButton());
    var PDFAcroCheckBox_1 = tslib_1.__importDefault(require_PDFAcroCheckBox());
    var PDFAcroComboBox_1 = tslib_1.__importDefault(require_PDFAcroComboBox());
    var PDFAcroListBox_1 = tslib_1.__importDefault(require_PDFAcroListBox());
    var flags_1 = require_flags();
    exports.createPDFAcroFields = function(kidDicts) {
      if (!kidDicts)
        return [];
      var kids = [];
      for (var idx = 0, len = kidDicts.size(); idx < len; idx++) {
        var ref = kidDicts.get(idx);
        var dict = kidDicts.lookup(idx);
        if (ref instanceof PDFRef_1.default && dict instanceof PDFDict_1.default) {
          kids.push([exports.createPDFAcroField(dict, ref), ref]);
        }
      }
      return kids;
    };
    exports.createPDFAcroField = function(dict, ref) {
      var isNonTerminal = isNonTerminalAcroField(dict);
      if (isNonTerminal)
        return PDFAcroNonTerminal_1.default.fromDict(dict, ref);
      return createPDFAcroTerminal(dict, ref);
    };
    var isNonTerminalAcroField = function(dict) {
      var kids = dict.lookup(PDFName_1.default.of("Kids"));
      if (kids instanceof PDFArray_1.default) {
        for (var idx = 0, len = kids.size(); idx < len; idx++) {
          var kid = kids.lookup(idx);
          var kidIsField = kid instanceof PDFDict_1.default && kid.has(PDFName_1.default.of("T"));
          if (kidIsField)
            return true;
        }
      }
      return false;
    };
    var createPDFAcroTerminal = function(dict, ref) {
      var ftNameOrRef = getInheritableAttribute(dict, PDFName_1.default.of("FT"));
      var type = dict.context.lookup(ftNameOrRef, PDFName_1.default);
      if (type === PDFName_1.default.of("Btn"))
        return createPDFAcroButton(dict, ref);
      if (type === PDFName_1.default.of("Ch"))
        return createPDFAcroChoice(dict, ref);
      if (type === PDFName_1.default.of("Tx"))
        return PDFAcroText_1.default.fromDict(dict, ref);
      if (type === PDFName_1.default.of("Sig"))
        return PDFAcroSignature_1.default.fromDict(dict, ref);
      return PDFAcroTerminal_1.default.fromDict(dict, ref);
    };
    var createPDFAcroButton = function(dict, ref) {
      var _a;
      var ffNumberOrRef = getInheritableAttribute(dict, PDFName_1.default.of("Ff"));
      var ffNumber = dict.context.lookupMaybe(ffNumberOrRef, PDFNumber_1.default);
      var flags = (_a = ffNumber === null || ffNumber === void 0 ? void 0 : ffNumber.asNumber()) !== null && _a !== void 0 ? _a : 0;
      if (flagIsSet(flags, flags_1.AcroButtonFlags.PushButton)) {
        return PDFAcroPushButton_1.default.fromDict(dict, ref);
      } else if (flagIsSet(flags, flags_1.AcroButtonFlags.Radio)) {
        return PDFAcroRadioButton_1.default.fromDict(dict, ref);
      } else {
        return PDFAcroCheckBox_1.default.fromDict(dict, ref);
      }
    };
    var createPDFAcroChoice = function(dict, ref) {
      var _a;
      var ffNumberOrRef = getInheritableAttribute(dict, PDFName_1.default.of("Ff"));
      var ffNumber = dict.context.lookupMaybe(ffNumberOrRef, PDFNumber_1.default);
      var flags = (_a = ffNumber === null || ffNumber === void 0 ? void 0 : ffNumber.asNumber()) !== null && _a !== void 0 ? _a : 0;
      if (flagIsSet(flags, flags_1.AcroChoiceFlags.Combo)) {
        return PDFAcroComboBox_1.default.fromDict(dict, ref);
      } else {
        return PDFAcroListBox_1.default.fromDict(dict, ref);
      }
    };
    var flagIsSet = function(flags, flag) {
      return (flags & flag) !== 0;
    };
    var getInheritableAttribute = function(startNode, name) {
      var attribute;
      ascend(startNode, function(node) {
        if (!attribute)
          attribute = node.get(name);
      });
      return attribute;
    };
    var ascend = function(startNode, visitor) {
      visitor(startNode);
      var Parent = startNode.lookupMaybe(PDFName_1.default.of("Parent"), PDFDict_1.default);
      if (Parent)
        ascend(Parent, visitor);
    };
  }
});

// node_modules/pdf-lib/cjs/core/acroform/PDFAcroForm.js
var require_PDFAcroForm = __commonJS({
  "node_modules/pdf-lib/cjs/core/acroform/PDFAcroForm.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFDict_1 = tslib_1.__importDefault(require_PDFDict());
    var PDFArray_1 = tslib_1.__importDefault(require_PDFArray());
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFAcroNonTerminal_1 = tslib_1.__importDefault(require_PDFAcroNonTerminal());
    var utils_1 = require_utils3();
    var PDFAcroForm = (
      /** @class */
      function() {
        function PDFAcroForm2(dict) {
          this.dict = dict;
        }
        PDFAcroForm2.prototype.Fields = function() {
          var fields = this.dict.lookup(PDFName_1.default.of("Fields"));
          if (fields instanceof PDFArray_1.default)
            return fields;
          return void 0;
        };
        PDFAcroForm2.prototype.getFields = function() {
          var Fields = this.normalizedEntries().Fields;
          var fields = new Array(Fields.size());
          for (var idx = 0, len = Fields.size(); idx < len; idx++) {
            var ref = Fields.get(idx);
            var dict = Fields.lookup(idx, PDFDict_1.default);
            fields[idx] = [utils_1.createPDFAcroField(dict, ref), ref];
          }
          return fields;
        };
        PDFAcroForm2.prototype.getAllFields = function() {
          var allFields = [];
          var pushFields = function(fields) {
            if (!fields)
              return;
            for (var idx = 0, len = fields.length; idx < len; idx++) {
              var field = fields[idx];
              allFields.push(field);
              var fieldModel = field[0];
              if (fieldModel instanceof PDFAcroNonTerminal_1.default) {
                pushFields(utils_1.createPDFAcroFields(fieldModel.Kids()));
              }
            }
          };
          pushFields(this.getFields());
          return allFields;
        };
        PDFAcroForm2.prototype.addField = function(field) {
          var Fields = this.normalizedEntries().Fields;
          Fields === null || Fields === void 0 ? void 0 : Fields.push(field);
        };
        PDFAcroForm2.prototype.removeField = function(field) {
          var parent = field.getParent();
          var fields = parent === void 0 ? this.normalizedEntries().Fields : parent.Kids();
          var index = fields === null || fields === void 0 ? void 0 : fields.indexOf(field.ref);
          if (fields === void 0 || index === void 0) {
            throw new Error("Tried to remove inexistent field " + field.getFullyQualifiedName());
          }
          fields.remove(index);
          if (parent !== void 0 && fields.size() === 0) {
            this.removeField(parent);
          }
        };
        PDFAcroForm2.prototype.normalizedEntries = function() {
          var Fields = this.Fields();
          if (!Fields) {
            Fields = this.dict.context.obj([]);
            this.dict.set(PDFName_1.default.of("Fields"), Fields);
          }
          return { Fields };
        };
        PDFAcroForm2.fromDict = function(dict) {
          return new PDFAcroForm2(dict);
        };
        PDFAcroForm2.create = function(context) {
          var dict = context.obj({ Fields: [] });
          return new PDFAcroForm2(dict);
        };
        return PDFAcroForm2;
      }()
    );
    exports.default = PDFAcroForm;
  }
});

// node_modules/pdf-lib/cjs/core/acroform/index.js
var require_acroform = __commonJS({
  "node_modules/pdf-lib/cjs/core/acroform/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFAcroButton_1 = require_PDFAcroButton();
    Object.defineProperty(exports, "PDFAcroButton", { enumerable: true, get: function() {
      return PDFAcroButton_1.default;
    } });
    var PDFAcroCheckBox_1 = require_PDFAcroCheckBox();
    Object.defineProperty(exports, "PDFAcroCheckBox", { enumerable: true, get: function() {
      return PDFAcroCheckBox_1.default;
    } });
    var PDFAcroChoice_1 = require_PDFAcroChoice();
    Object.defineProperty(exports, "PDFAcroChoice", { enumerable: true, get: function() {
      return PDFAcroChoice_1.default;
    } });
    var PDFAcroComboBox_1 = require_PDFAcroComboBox();
    Object.defineProperty(exports, "PDFAcroComboBox", { enumerable: true, get: function() {
      return PDFAcroComboBox_1.default;
    } });
    var PDFAcroField_1 = require_PDFAcroField();
    Object.defineProperty(exports, "PDFAcroField", { enumerable: true, get: function() {
      return PDFAcroField_1.default;
    } });
    var PDFAcroForm_1 = require_PDFAcroForm();
    Object.defineProperty(exports, "PDFAcroForm", { enumerable: true, get: function() {
      return PDFAcroForm_1.default;
    } });
    var PDFAcroListBox_1 = require_PDFAcroListBox();
    Object.defineProperty(exports, "PDFAcroListBox", { enumerable: true, get: function() {
      return PDFAcroListBox_1.default;
    } });
    var PDFAcroNonTerminal_1 = require_PDFAcroNonTerminal();
    Object.defineProperty(exports, "PDFAcroNonTerminal", { enumerable: true, get: function() {
      return PDFAcroNonTerminal_1.default;
    } });
    var PDFAcroPushButton_1 = require_PDFAcroPushButton();
    Object.defineProperty(exports, "PDFAcroPushButton", { enumerable: true, get: function() {
      return PDFAcroPushButton_1.default;
    } });
    var PDFAcroRadioButton_1 = require_PDFAcroRadioButton();
    Object.defineProperty(exports, "PDFAcroRadioButton", { enumerable: true, get: function() {
      return PDFAcroRadioButton_1.default;
    } });
    var PDFAcroSignature_1 = require_PDFAcroSignature();
    Object.defineProperty(exports, "PDFAcroSignature", { enumerable: true, get: function() {
      return PDFAcroSignature_1.default;
    } });
    var PDFAcroTerminal_1 = require_PDFAcroTerminal();
    Object.defineProperty(exports, "PDFAcroTerminal", { enumerable: true, get: function() {
      return PDFAcroTerminal_1.default;
    } });
    var PDFAcroText_1 = require_PDFAcroText();
    Object.defineProperty(exports, "PDFAcroText", { enumerable: true, get: function() {
      return PDFAcroText_1.default;
    } });
    tslib_1.__exportStar(require_flags(), exports);
    tslib_1.__exportStar(require_utils3(), exports);
  }
});

// node_modules/pdf-lib/cjs/core/structures/PDFCatalog.js
var require_PDFCatalog = __commonJS({
  "node_modules/pdf-lib/cjs/core/structures/PDFCatalog.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFDict_1 = tslib_1.__importDefault(require_PDFDict());
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var acroform_1 = require_acroform();
    var ViewerPreferences_1 = tslib_1.__importDefault(require_ViewerPreferences());
    var PDFCatalog = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFCatalog2, _super);
        function PDFCatalog2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        PDFCatalog2.prototype.Pages = function() {
          return this.lookup(PDFName_1.default.of("Pages"), PDFDict_1.default);
        };
        PDFCatalog2.prototype.AcroForm = function() {
          return this.lookupMaybe(PDFName_1.default.of("AcroForm"), PDFDict_1.default);
        };
        PDFCatalog2.prototype.getAcroForm = function() {
          var dict = this.AcroForm();
          if (!dict)
            return void 0;
          return acroform_1.PDFAcroForm.fromDict(dict);
        };
        PDFCatalog2.prototype.getOrCreateAcroForm = function() {
          var acroForm = this.getAcroForm();
          if (!acroForm) {
            acroForm = acroform_1.PDFAcroForm.create(this.context);
            var acroFormRef = this.context.register(acroForm.dict);
            this.set(PDFName_1.default.of("AcroForm"), acroFormRef);
          }
          return acroForm;
        };
        PDFCatalog2.prototype.ViewerPreferences = function() {
          return this.lookupMaybe(PDFName_1.default.of("ViewerPreferences"), PDFDict_1.default);
        };
        PDFCatalog2.prototype.getViewerPreferences = function() {
          var dict = this.ViewerPreferences();
          if (!dict)
            return void 0;
          return ViewerPreferences_1.default.fromDict(dict);
        };
        PDFCatalog2.prototype.getOrCreateViewerPreferences = function() {
          var viewerPrefs = this.getViewerPreferences();
          if (!viewerPrefs) {
            viewerPrefs = ViewerPreferences_1.default.create(this.context);
            var viewerPrefsRef = this.context.register(viewerPrefs.dict);
            this.set(PDFName_1.default.of("ViewerPreferences"), viewerPrefsRef);
          }
          return viewerPrefs;
        };
        PDFCatalog2.prototype.insertLeafNode = function(leafRef, index) {
          var pagesRef = this.get(PDFName_1.default.of("Pages"));
          var maybeParentRef = this.Pages().insertLeafNode(leafRef, index);
          return maybeParentRef || pagesRef;
        };
        PDFCatalog2.prototype.removeLeafNode = function(index) {
          this.Pages().removeLeafNode(index);
        };
        PDFCatalog2.withContextAndPages = function(context, pages) {
          var dict = /* @__PURE__ */ new Map();
          dict.set(PDFName_1.default.of("Type"), PDFName_1.default.of("Catalog"));
          dict.set(PDFName_1.default.of("Pages"), pages);
          return new PDFCatalog2(dict, context);
        };
        PDFCatalog2.fromMapWithContext = function(map, context) {
          return new PDFCatalog2(map, context);
        };
        return PDFCatalog2;
      }(PDFDict_1.default)
    );
    exports.default = PDFCatalog;
  }
});

// node_modules/pdf-lib/cjs/core/structures/PDFPageTree.js
var require_PDFPageTree = __commonJS({
  "node_modules/pdf-lib/cjs/core/structures/PDFPageTree.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFArray_1 = tslib_1.__importDefault(require_PDFArray());
    var PDFDict_1 = tslib_1.__importDefault(require_PDFDict());
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFNumber_1 = tslib_1.__importDefault(require_PDFNumber());
    var PDFPageLeaf_1 = tslib_1.__importDefault(require_PDFPageLeaf());
    var errors_1 = require_errors2();
    var PDFPageTree = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFPageTree2, _super);
        function PDFPageTree2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        PDFPageTree2.prototype.Parent = function() {
          return this.lookup(PDFName_1.default.of("Parent"));
        };
        PDFPageTree2.prototype.Kids = function() {
          return this.lookup(PDFName_1.default.of("Kids"), PDFArray_1.default);
        };
        PDFPageTree2.prototype.Count = function() {
          return this.lookup(PDFName_1.default.of("Count"), PDFNumber_1.default);
        };
        PDFPageTree2.prototype.pushTreeNode = function(treeRef) {
          var Kids = this.Kids();
          Kids.push(treeRef);
        };
        PDFPageTree2.prototype.pushLeafNode = function(leafRef) {
          var Kids = this.Kids();
          this.insertLeafKid(Kids.size(), leafRef);
        };
        PDFPageTree2.prototype.insertLeafNode = function(leafRef, targetIndex) {
          var Kids = this.Kids();
          var Count = this.Count().asNumber();
          if (targetIndex > Count) {
            throw new errors_1.InvalidTargetIndexError(targetIndex, Count);
          }
          var leafsRemainingUntilTarget = targetIndex;
          for (var idx = 0, len = Kids.size(); idx < len; idx++) {
            if (leafsRemainingUntilTarget === 0) {
              this.insertLeafKid(idx, leafRef);
              return void 0;
            }
            var kidRef = Kids.get(idx);
            var kid = this.context.lookup(kidRef);
            if (kid instanceof PDFPageTree2) {
              if (kid.Count().asNumber() > leafsRemainingUntilTarget) {
                return kid.insertLeafNode(leafRef, leafsRemainingUntilTarget) || kidRef;
              } else {
                leafsRemainingUntilTarget -= kid.Count().asNumber();
              }
            }
            if (kid instanceof PDFPageLeaf_1.default) {
              leafsRemainingUntilTarget -= 1;
            }
          }
          if (leafsRemainingUntilTarget === 0) {
            this.insertLeafKid(Kids.size(), leafRef);
            return void 0;
          }
          throw new errors_1.CorruptPageTreeError(targetIndex, "insertLeafNode");
        };
        PDFPageTree2.prototype.removeLeafNode = function(targetIndex, prune) {
          if (prune === void 0) {
            prune = true;
          }
          var Kids = this.Kids();
          var Count = this.Count().asNumber();
          if (targetIndex >= Count) {
            throw new errors_1.InvalidTargetIndexError(targetIndex, Count);
          }
          var leafsRemainingUntilTarget = targetIndex;
          for (var idx = 0, len = Kids.size(); idx < len; idx++) {
            var kidRef = Kids.get(idx);
            var kid = this.context.lookup(kidRef);
            if (kid instanceof PDFPageTree2) {
              if (kid.Count().asNumber() > leafsRemainingUntilTarget) {
                kid.removeLeafNode(leafsRemainingUntilTarget, prune);
                if (prune && kid.Kids().size() === 0)
                  Kids.remove(idx);
                return;
              } else {
                leafsRemainingUntilTarget -= kid.Count().asNumber();
              }
            }
            if (kid instanceof PDFPageLeaf_1.default) {
              if (leafsRemainingUntilTarget === 0) {
                this.removeKid(idx);
                return;
              } else {
                leafsRemainingUntilTarget -= 1;
              }
            }
          }
          throw new errors_1.CorruptPageTreeError(targetIndex, "removeLeafNode");
        };
        PDFPageTree2.prototype.ascend = function(visitor) {
          visitor(this);
          var Parent = this.Parent();
          if (Parent)
            Parent.ascend(visitor);
        };
        PDFPageTree2.prototype.traverse = function(visitor) {
          var Kids = this.Kids();
          for (var idx = 0, len = Kids.size(); idx < len; idx++) {
            var kidRef = Kids.get(idx);
            var kid = this.context.lookup(kidRef);
            if (kid instanceof PDFPageTree2)
              kid.traverse(visitor);
            visitor(kid, kidRef);
          }
        };
        PDFPageTree2.prototype.insertLeafKid = function(kidIdx, leafRef) {
          var Kids = this.Kids();
          this.ascend(function(node) {
            var newCount = node.Count().asNumber() + 1;
            node.set(PDFName_1.default.of("Count"), PDFNumber_1.default.of(newCount));
          });
          Kids.insert(kidIdx, leafRef);
        };
        PDFPageTree2.prototype.removeKid = function(kidIdx) {
          var Kids = this.Kids();
          var kid = Kids.lookup(kidIdx);
          if (kid instanceof PDFPageLeaf_1.default) {
            this.ascend(function(node) {
              var newCount = node.Count().asNumber() - 1;
              node.set(PDFName_1.default.of("Count"), PDFNumber_1.default.of(newCount));
            });
          }
          Kids.remove(kidIdx);
        };
        PDFPageTree2.withContext = function(context, parent) {
          var dict = /* @__PURE__ */ new Map();
          dict.set(PDFName_1.default.of("Type"), PDFName_1.default.of("Pages"));
          dict.set(PDFName_1.default.of("Kids"), context.obj([]));
          dict.set(PDFName_1.default.of("Count"), context.obj(0));
          if (parent)
            dict.set(PDFName_1.default.of("Parent"), parent);
          return new PDFPageTree2(dict, context);
        };
        PDFPageTree2.fromMapWithContext = function(map, context) {
          return new PDFPageTree2(map, context);
        };
        return PDFPageTree2;
      }(PDFDict_1.default)
    );
    exports.default = PDFPageTree;
  }
});

// node_modules/pdf-lib/cjs/core/syntax/Numeric.js
var require_Numeric = __commonJS({
  "node_modules/pdf-lib/cjs/core/syntax/Numeric.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IsNumeric = exports.IsNumericPrefix = exports.IsDigit = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    exports.IsDigit = new Uint8Array(256);
    exports.IsDigit[CharCodes_1.default.Zero] = 1;
    exports.IsDigit[CharCodes_1.default.One] = 1;
    exports.IsDigit[CharCodes_1.default.Two] = 1;
    exports.IsDigit[CharCodes_1.default.Three] = 1;
    exports.IsDigit[CharCodes_1.default.Four] = 1;
    exports.IsDigit[CharCodes_1.default.Five] = 1;
    exports.IsDigit[CharCodes_1.default.Six] = 1;
    exports.IsDigit[CharCodes_1.default.Seven] = 1;
    exports.IsDigit[CharCodes_1.default.Eight] = 1;
    exports.IsDigit[CharCodes_1.default.Nine] = 1;
    exports.IsNumericPrefix = new Uint8Array(256);
    exports.IsNumericPrefix[CharCodes_1.default.Period] = 1;
    exports.IsNumericPrefix[CharCodes_1.default.Plus] = 1;
    exports.IsNumericPrefix[CharCodes_1.default.Minus] = 1;
    exports.IsNumeric = new Uint8Array(256);
    for (idx = 0, len = 256; idx < len; idx++) {
      exports.IsNumeric[idx] = exports.IsDigit[idx] || exports.IsNumericPrefix[idx] ? 1 : 0;
    }
    var idx;
    var len;
  }
});

// node_modules/pdf-lib/cjs/core/parser/BaseParser.js
var require_BaseParser = __commonJS({
  "node_modules/pdf-lib/cjs/core/parser/BaseParser.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var errors_1 = require_errors2();
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var Numeric_1 = require_Numeric();
    var Whitespace_1 = require_Whitespace();
    var utils_1 = require_utils2();
    var Newline = CharCodes_1.default.Newline;
    var CarriageReturn = CharCodes_1.default.CarriageReturn;
    var BaseParser = (
      /** @class */
      function() {
        function BaseParser2(bytes, capNumbers) {
          if (capNumbers === void 0) {
            capNumbers = false;
          }
          this.bytes = bytes;
          this.capNumbers = capNumbers;
        }
        BaseParser2.prototype.parseRawInt = function() {
          var value = "";
          while (!this.bytes.done()) {
            var byte = this.bytes.peek();
            if (!Numeric_1.IsDigit[byte])
              break;
            value += utils_1.charFromCode(this.bytes.next());
          }
          var numberValue = Number(value);
          if (!value || !isFinite(numberValue)) {
            throw new errors_1.NumberParsingError(this.bytes.position(), value);
          }
          return numberValue;
        };
        BaseParser2.prototype.parseRawNumber = function() {
          var value = "";
          while (!this.bytes.done()) {
            var byte = this.bytes.peek();
            if (!Numeric_1.IsNumeric[byte])
              break;
            value += utils_1.charFromCode(this.bytes.next());
            if (byte === CharCodes_1.default.Period)
              break;
          }
          while (!this.bytes.done()) {
            var byte = this.bytes.peek();
            if (!Numeric_1.IsDigit[byte])
              break;
            value += utils_1.charFromCode(this.bytes.next());
          }
          var numberValue = Number(value);
          if (!value || !isFinite(numberValue)) {
            throw new errors_1.NumberParsingError(this.bytes.position(), value);
          }
          if (numberValue > Number.MAX_SAFE_INTEGER) {
            if (this.capNumbers) {
              var msg = "Parsed number that is too large for some PDF readers: " + value + ", using Number.MAX_SAFE_INTEGER instead.";
              console.warn(msg);
              return Number.MAX_SAFE_INTEGER;
            } else {
              var msg = "Parsed number that is too large for some PDF readers: " + value + ", not capping.";
              console.warn(msg);
            }
          }
          return numberValue;
        };
        BaseParser2.prototype.skipWhitespace = function() {
          while (!this.bytes.done() && Whitespace_1.IsWhitespace[this.bytes.peek()]) {
            this.bytes.next();
          }
        };
        BaseParser2.prototype.skipLine = function() {
          while (!this.bytes.done()) {
            var byte = this.bytes.peek();
            if (byte === Newline || byte === CarriageReturn)
              return;
            this.bytes.next();
          }
        };
        BaseParser2.prototype.skipComment = function() {
          if (this.bytes.peek() !== CharCodes_1.default.Percent)
            return false;
          while (!this.bytes.done()) {
            var byte = this.bytes.peek();
            if (byte === Newline || byte === CarriageReturn)
              return true;
            this.bytes.next();
          }
          return true;
        };
        BaseParser2.prototype.skipWhitespaceAndComments = function() {
          this.skipWhitespace();
          while (this.skipComment())
            this.skipWhitespace();
        };
        BaseParser2.prototype.matchKeyword = function(keyword) {
          var initialOffset = this.bytes.offset();
          for (var idx = 0, len = keyword.length; idx < len; idx++) {
            if (this.bytes.done() || this.bytes.next() !== keyword[idx]) {
              this.bytes.moveTo(initialOffset);
              return false;
            }
          }
          return true;
        };
        return BaseParser2;
      }()
    );
    exports.default = BaseParser;
  }
});

// node_modules/pdf-lib/cjs/core/parser/ByteStream.js
var require_ByteStream = __commonJS({
  "node_modules/pdf-lib/cjs/core/parser/ByteStream.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var errors_1 = require_errors2();
    var decode_1 = require_decode();
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var ByteStream = (
      /** @class */
      function() {
        function ByteStream2(bytes) {
          this.idx = 0;
          this.line = 0;
          this.column = 0;
          this.bytes = bytes;
          this.length = this.bytes.length;
        }
        ByteStream2.prototype.moveTo = function(offset) {
          this.idx = offset;
        };
        ByteStream2.prototype.next = function() {
          var byte = this.bytes[this.idx++];
          if (byte === CharCodes_1.default.Newline) {
            this.line += 1;
            this.column = 0;
          } else {
            this.column += 1;
          }
          return byte;
        };
        ByteStream2.prototype.assertNext = function(expected) {
          if (this.peek() !== expected) {
            throw new errors_1.NextByteAssertionError(this.position(), expected, this.peek());
          }
          return this.next();
        };
        ByteStream2.prototype.peek = function() {
          return this.bytes[this.idx];
        };
        ByteStream2.prototype.peekAhead = function(steps) {
          return this.bytes[this.idx + steps];
        };
        ByteStream2.prototype.peekAt = function(offset) {
          return this.bytes[offset];
        };
        ByteStream2.prototype.done = function() {
          return this.idx >= this.length;
        };
        ByteStream2.prototype.offset = function() {
          return this.idx;
        };
        ByteStream2.prototype.slice = function(start, end) {
          return this.bytes.slice(start, end);
        };
        ByteStream2.prototype.position = function() {
          return { line: this.line, column: this.column, offset: this.idx };
        };
        ByteStream2.of = function(bytes) {
          return new ByteStream2(bytes);
        };
        ByteStream2.fromPDFRawStream = function(rawStream) {
          return ByteStream2.of(decode_1.decodePDFRawStream(rawStream).decode());
        };
        return ByteStream2;
      }()
    );
    exports.default = ByteStream;
  }
});

// node_modules/pdf-lib/cjs/core/syntax/Keywords.js
var require_Keywords = __commonJS({
  "node_modules/pdf-lib/cjs/core/syntax/Keywords.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Keywords = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var Space = CharCodes_1.default.Space;
    var CarriageReturn = CharCodes_1.default.CarriageReturn;
    var Newline = CharCodes_1.default.Newline;
    var stream = [
      CharCodes_1.default.s,
      CharCodes_1.default.t,
      CharCodes_1.default.r,
      CharCodes_1.default.e,
      CharCodes_1.default.a,
      CharCodes_1.default.m
    ];
    var endstream = [
      CharCodes_1.default.e,
      CharCodes_1.default.n,
      CharCodes_1.default.d,
      CharCodes_1.default.s,
      CharCodes_1.default.t,
      CharCodes_1.default.r,
      CharCodes_1.default.e,
      CharCodes_1.default.a,
      CharCodes_1.default.m
    ];
    exports.Keywords = {
      header: [
        CharCodes_1.default.Percent,
        CharCodes_1.default.P,
        CharCodes_1.default.D,
        CharCodes_1.default.F,
        CharCodes_1.default.Dash
      ],
      eof: [
        CharCodes_1.default.Percent,
        CharCodes_1.default.Percent,
        CharCodes_1.default.E,
        CharCodes_1.default.O,
        CharCodes_1.default.F
      ],
      obj: [CharCodes_1.default.o, CharCodes_1.default.b, CharCodes_1.default.j],
      endobj: [
        CharCodes_1.default.e,
        CharCodes_1.default.n,
        CharCodes_1.default.d,
        CharCodes_1.default.o,
        CharCodes_1.default.b,
        CharCodes_1.default.j
      ],
      xref: [CharCodes_1.default.x, CharCodes_1.default.r, CharCodes_1.default.e, CharCodes_1.default.f],
      trailer: [
        CharCodes_1.default.t,
        CharCodes_1.default.r,
        CharCodes_1.default.a,
        CharCodes_1.default.i,
        CharCodes_1.default.l,
        CharCodes_1.default.e,
        CharCodes_1.default.r
      ],
      startxref: [
        CharCodes_1.default.s,
        CharCodes_1.default.t,
        CharCodes_1.default.a,
        CharCodes_1.default.r,
        CharCodes_1.default.t,
        CharCodes_1.default.x,
        CharCodes_1.default.r,
        CharCodes_1.default.e,
        CharCodes_1.default.f
      ],
      true: [CharCodes_1.default.t, CharCodes_1.default.r, CharCodes_1.default.u, CharCodes_1.default.e],
      false: [CharCodes_1.default.f, CharCodes_1.default.a, CharCodes_1.default.l, CharCodes_1.default.s, CharCodes_1.default.e],
      null: [CharCodes_1.default.n, CharCodes_1.default.u, CharCodes_1.default.l, CharCodes_1.default.l],
      stream,
      streamEOF1: tslib_1.__spreadArrays(stream, [Space, CarriageReturn, Newline]),
      streamEOF2: tslib_1.__spreadArrays(stream, [CarriageReturn, Newline]),
      streamEOF3: tslib_1.__spreadArrays(stream, [CarriageReturn]),
      streamEOF4: tslib_1.__spreadArrays(stream, [Newline]),
      endstream,
      EOF1endstream: tslib_1.__spreadArrays([CarriageReturn, Newline], endstream),
      EOF2endstream: tslib_1.__spreadArrays([CarriageReturn], endstream),
      EOF3endstream: tslib_1.__spreadArrays([Newline], endstream)
    };
  }
});

// node_modules/pdf-lib/cjs/core/parser/PDFObjectParser.js
var require_PDFObjectParser = __commonJS({
  "node_modules/pdf-lib/cjs/core/parser/PDFObjectParser.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var errors_1 = require_errors2();
    var PDFArray_1 = tslib_1.__importDefault(require_PDFArray());
    var PDFBool_1 = tslib_1.__importDefault(require_PDFBool());
    var PDFDict_1 = tslib_1.__importDefault(require_PDFDict());
    var PDFHexString_1 = tslib_1.__importDefault(require_PDFHexString());
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFNull_1 = tslib_1.__importDefault(require_PDFNull());
    var PDFNumber_1 = tslib_1.__importDefault(require_PDFNumber());
    var PDFRawStream_1 = tslib_1.__importDefault(require_PDFRawStream());
    var PDFRef_1 = tslib_1.__importDefault(require_PDFRef());
    var PDFString_1 = tslib_1.__importDefault(require_PDFString());
    var BaseParser_1 = tslib_1.__importDefault(require_BaseParser());
    var ByteStream_1 = tslib_1.__importDefault(require_ByteStream());
    var PDFCatalog_1 = tslib_1.__importDefault(require_PDFCatalog());
    var PDFPageLeaf_1 = tslib_1.__importDefault(require_PDFPageLeaf());
    var PDFPageTree_1 = tslib_1.__importDefault(require_PDFPageTree());
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var Delimiters_1 = require_Delimiters();
    var Keywords_1 = require_Keywords();
    var Numeric_1 = require_Numeric();
    var Whitespace_1 = require_Whitespace();
    var utils_1 = require_utils2();
    var PDFObjectParser = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFObjectParser2, _super);
        function PDFObjectParser2(byteStream, context, capNumbers) {
          if (capNumbers === void 0) {
            capNumbers = false;
          }
          var _this = _super.call(this, byteStream, capNumbers) || this;
          _this.context = context;
          return _this;
        }
        PDFObjectParser2.prototype.parseObject = function() {
          this.skipWhitespaceAndComments();
          if (this.matchKeyword(Keywords_1.Keywords.true))
            return PDFBool_1.default.True;
          if (this.matchKeyword(Keywords_1.Keywords.false))
            return PDFBool_1.default.False;
          if (this.matchKeyword(Keywords_1.Keywords.null))
            return PDFNull_1.default;
          var byte = this.bytes.peek();
          if (byte === CharCodes_1.default.LessThan && this.bytes.peekAhead(1) === CharCodes_1.default.LessThan) {
            return this.parseDictOrStream();
          }
          if (byte === CharCodes_1.default.LessThan)
            return this.parseHexString();
          if (byte === CharCodes_1.default.LeftParen)
            return this.parseString();
          if (byte === CharCodes_1.default.ForwardSlash)
            return this.parseName();
          if (byte === CharCodes_1.default.LeftSquareBracket)
            return this.parseArray();
          if (Numeric_1.IsNumeric[byte])
            return this.parseNumberOrRef();
          throw new errors_1.PDFObjectParsingError(this.bytes.position(), byte);
        };
        PDFObjectParser2.prototype.parseNumberOrRef = function() {
          var firstNum = this.parseRawNumber();
          this.skipWhitespaceAndComments();
          var lookaheadStart = this.bytes.offset();
          if (Numeric_1.IsDigit[this.bytes.peek()]) {
            var secondNum = this.parseRawNumber();
            this.skipWhitespaceAndComments();
            if (this.bytes.peek() === CharCodes_1.default.R) {
              this.bytes.assertNext(CharCodes_1.default.R);
              return PDFRef_1.default.of(firstNum, secondNum);
            }
          }
          this.bytes.moveTo(lookaheadStart);
          return PDFNumber_1.default.of(firstNum);
        };
        PDFObjectParser2.prototype.parseHexString = function() {
          var value = "";
          this.bytes.assertNext(CharCodes_1.default.LessThan);
          while (!this.bytes.done() && this.bytes.peek() !== CharCodes_1.default.GreaterThan) {
            value += utils_1.charFromCode(this.bytes.next());
          }
          this.bytes.assertNext(CharCodes_1.default.GreaterThan);
          return PDFHexString_1.default.of(value);
        };
        PDFObjectParser2.prototype.parseString = function() {
          var nestingLvl = 0;
          var isEscaped = false;
          var value = "";
          while (!this.bytes.done()) {
            var byte = this.bytes.next();
            value += utils_1.charFromCode(byte);
            if (!isEscaped) {
              if (byte === CharCodes_1.default.LeftParen)
                nestingLvl += 1;
              if (byte === CharCodes_1.default.RightParen)
                nestingLvl -= 1;
            }
            if (byte === CharCodes_1.default.BackSlash) {
              isEscaped = !isEscaped;
            } else if (isEscaped) {
              isEscaped = false;
            }
            if (nestingLvl === 0) {
              return PDFString_1.default.of(value.substring(1, value.length - 1));
            }
          }
          throw new errors_1.UnbalancedParenthesisError(this.bytes.position());
        };
        PDFObjectParser2.prototype.parseName = function() {
          this.bytes.assertNext(CharCodes_1.default.ForwardSlash);
          var name = "";
          while (!this.bytes.done()) {
            var byte = this.bytes.peek();
            if (Whitespace_1.IsWhitespace[byte] || Delimiters_1.IsDelimiter[byte])
              break;
            name += utils_1.charFromCode(byte);
            this.bytes.next();
          }
          return PDFName_1.default.of(name);
        };
        PDFObjectParser2.prototype.parseArray = function() {
          this.bytes.assertNext(CharCodes_1.default.LeftSquareBracket);
          this.skipWhitespaceAndComments();
          var pdfArray = PDFArray_1.default.withContext(this.context);
          while (this.bytes.peek() !== CharCodes_1.default.RightSquareBracket) {
            var element = this.parseObject();
            pdfArray.push(element);
            this.skipWhitespaceAndComments();
          }
          this.bytes.assertNext(CharCodes_1.default.RightSquareBracket);
          return pdfArray;
        };
        PDFObjectParser2.prototype.parseDict = function() {
          this.bytes.assertNext(CharCodes_1.default.LessThan);
          this.bytes.assertNext(CharCodes_1.default.LessThan);
          this.skipWhitespaceAndComments();
          var dict = /* @__PURE__ */ new Map();
          while (!this.bytes.done() && this.bytes.peek() !== CharCodes_1.default.GreaterThan && this.bytes.peekAhead(1) !== CharCodes_1.default.GreaterThan) {
            var key = this.parseName();
            var value = this.parseObject();
            dict.set(key, value);
            this.skipWhitespaceAndComments();
          }
          this.skipWhitespaceAndComments();
          this.bytes.assertNext(CharCodes_1.default.GreaterThan);
          this.bytes.assertNext(CharCodes_1.default.GreaterThan);
          var Type = dict.get(PDFName_1.default.of("Type"));
          if (Type === PDFName_1.default.of("Catalog")) {
            return PDFCatalog_1.default.fromMapWithContext(dict, this.context);
          } else if (Type === PDFName_1.default.of("Pages")) {
            return PDFPageTree_1.default.fromMapWithContext(dict, this.context);
          } else if (Type === PDFName_1.default.of("Page")) {
            return PDFPageLeaf_1.default.fromMapWithContext(dict, this.context);
          } else {
            return PDFDict_1.default.fromMapWithContext(dict, this.context);
          }
        };
        PDFObjectParser2.prototype.parseDictOrStream = function() {
          var startPos = this.bytes.position();
          var dict = this.parseDict();
          this.skipWhitespaceAndComments();
          if (!this.matchKeyword(Keywords_1.Keywords.streamEOF1) && !this.matchKeyword(Keywords_1.Keywords.streamEOF2) && !this.matchKeyword(Keywords_1.Keywords.streamEOF3) && !this.matchKeyword(Keywords_1.Keywords.streamEOF4) && !this.matchKeyword(Keywords_1.Keywords.stream)) {
            return dict;
          }
          var start = this.bytes.offset();
          var end;
          var Length = dict.get(PDFName_1.default.of("Length"));
          if (Length instanceof PDFNumber_1.default) {
            end = start + Length.asNumber();
            this.bytes.moveTo(end);
            this.skipWhitespaceAndComments();
            if (!this.matchKeyword(Keywords_1.Keywords.endstream)) {
              this.bytes.moveTo(start);
              end = this.findEndOfStreamFallback(startPos);
            }
          } else {
            end = this.findEndOfStreamFallback(startPos);
          }
          var contents = this.bytes.slice(start, end);
          return PDFRawStream_1.default.of(dict, contents);
        };
        PDFObjectParser2.prototype.findEndOfStreamFallback = function(startPos) {
          var nestingLvl = 1;
          var end = this.bytes.offset();
          while (!this.bytes.done()) {
            end = this.bytes.offset();
            if (this.matchKeyword(Keywords_1.Keywords.stream)) {
              nestingLvl += 1;
            } else if (this.matchKeyword(Keywords_1.Keywords.EOF1endstream) || this.matchKeyword(Keywords_1.Keywords.EOF2endstream) || this.matchKeyword(Keywords_1.Keywords.EOF3endstream) || this.matchKeyword(Keywords_1.Keywords.endstream)) {
              nestingLvl -= 1;
            } else {
              this.bytes.next();
            }
            if (nestingLvl === 0)
              break;
          }
          if (nestingLvl !== 0)
            throw new errors_1.PDFStreamParsingError(startPos);
          return end;
        };
        PDFObjectParser2.forBytes = function(bytes, context, capNumbers) {
          return new PDFObjectParser2(ByteStream_1.default.of(bytes), context, capNumbers);
        };
        PDFObjectParser2.forByteStream = function(byteStream, context, capNumbers) {
          if (capNumbers === void 0) {
            capNumbers = false;
          }
          return new PDFObjectParser2(byteStream, context, capNumbers);
        };
        return PDFObjectParser2;
      }(BaseParser_1.default)
    );
    exports.default = PDFObjectParser;
  }
});

// node_modules/pdf-lib/cjs/core/parser/PDFObjectStreamParser.js
var require_PDFObjectStreamParser = __commonJS({
  "node_modules/pdf-lib/cjs/core/parser/PDFObjectStreamParser.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var errors_1 = require_errors2();
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFNumber_1 = tslib_1.__importDefault(require_PDFNumber());
    var PDFRef_1 = tslib_1.__importDefault(require_PDFRef());
    var ByteStream_1 = tslib_1.__importDefault(require_ByteStream());
    var PDFObjectParser_1 = tslib_1.__importDefault(require_PDFObjectParser());
    var utils_1 = require_utils2();
    var PDFObjectStreamParser = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFObjectStreamParser2, _super);
        function PDFObjectStreamParser2(rawStream, shouldWaitForTick) {
          var _this = _super.call(this, ByteStream_1.default.fromPDFRawStream(rawStream), rawStream.dict.context) || this;
          var dict = rawStream.dict;
          _this.alreadyParsed = false;
          _this.shouldWaitForTick = shouldWaitForTick || function() {
            return false;
          };
          _this.firstOffset = dict.lookup(PDFName_1.default.of("First"), PDFNumber_1.default).asNumber();
          _this.objectCount = dict.lookup(PDFName_1.default.of("N"), PDFNumber_1.default).asNumber();
          return _this;
        }
        PDFObjectStreamParser2.prototype.parseIntoContext = function() {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var offsetsAndObjectNumbers, idx, len, _a, objectNumber, offset, object, ref;
            return tslib_1.__generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  if (this.alreadyParsed) {
                    throw new errors_1.ReparseError("PDFObjectStreamParser", "parseIntoContext");
                  }
                  this.alreadyParsed = true;
                  offsetsAndObjectNumbers = this.parseOffsetsAndObjectNumbers();
                  idx = 0, len = offsetsAndObjectNumbers.length;
                  _b.label = 1;
                case 1:
                  if (!(idx < len))
                    return [3, 4];
                  _a = offsetsAndObjectNumbers[idx], objectNumber = _a.objectNumber, offset = _a.offset;
                  this.bytes.moveTo(this.firstOffset + offset);
                  object = this.parseObject();
                  ref = PDFRef_1.default.of(objectNumber, 0);
                  this.context.assign(ref, object);
                  if (!this.shouldWaitForTick())
                    return [3, 3];
                  return [4, utils_1.waitForTick()];
                case 2:
                  _b.sent();
                  _b.label = 3;
                case 3:
                  idx++;
                  return [3, 1];
                case 4:
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        };
        PDFObjectStreamParser2.prototype.parseOffsetsAndObjectNumbers = function() {
          var offsetsAndObjectNumbers = [];
          for (var idx = 0, len = this.objectCount; idx < len; idx++) {
            this.skipWhitespaceAndComments();
            var objectNumber = this.parseRawInt();
            this.skipWhitespaceAndComments();
            var offset = this.parseRawInt();
            offsetsAndObjectNumbers.push({ objectNumber, offset });
          }
          return offsetsAndObjectNumbers;
        };
        PDFObjectStreamParser2.forStream = function(rawStream, shouldWaitForTick) {
          return new PDFObjectStreamParser2(rawStream, shouldWaitForTick);
        };
        return PDFObjectStreamParser2;
      }(PDFObjectParser_1.default)
    );
    exports.default = PDFObjectStreamParser;
  }
});

// node_modules/pdf-lib/cjs/core/parser/PDFXRefStreamParser.js
var require_PDFXRefStreamParser = __commonJS({
  "node_modules/pdf-lib/cjs/core/parser/PDFXRefStreamParser.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var errors_1 = require_errors2();
    var PDFArray_1 = tslib_1.__importDefault(require_PDFArray());
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFNumber_1 = tslib_1.__importDefault(require_PDFNumber());
    var PDFRef_1 = tslib_1.__importDefault(require_PDFRef());
    var ByteStream_1 = tslib_1.__importDefault(require_ByteStream());
    var PDFXRefStreamParser = (
      /** @class */
      function() {
        function PDFXRefStreamParser2(rawStream) {
          this.alreadyParsed = false;
          this.dict = rawStream.dict;
          this.bytes = ByteStream_1.default.fromPDFRawStream(rawStream);
          this.context = this.dict.context;
          var Size = this.dict.lookup(PDFName_1.default.of("Size"), PDFNumber_1.default);
          var Index = this.dict.lookup(PDFName_1.default.of("Index"));
          if (Index instanceof PDFArray_1.default) {
            this.subsections = [];
            for (var idx = 0, len = Index.size(); idx < len; idx += 2) {
              var firstObjectNumber = Index.lookup(idx + 0, PDFNumber_1.default).asNumber();
              var length_1 = Index.lookup(idx + 1, PDFNumber_1.default).asNumber();
              this.subsections.push({ firstObjectNumber, length: length_1 });
            }
          } else {
            this.subsections = [{ firstObjectNumber: 0, length: Size.asNumber() }];
          }
          var W = this.dict.lookup(PDFName_1.default.of("W"), PDFArray_1.default);
          this.byteWidths = [-1, -1, -1];
          for (var idx = 0, len = W.size(); idx < len; idx++) {
            this.byteWidths[idx] = W.lookup(idx, PDFNumber_1.default).asNumber();
          }
        }
        PDFXRefStreamParser2.prototype.parseIntoContext = function() {
          if (this.alreadyParsed) {
            throw new errors_1.ReparseError("PDFXRefStreamParser", "parseIntoContext");
          }
          this.alreadyParsed = true;
          this.context.trailerInfo = {
            Root: this.dict.get(PDFName_1.default.of("Root")),
            Encrypt: this.dict.get(PDFName_1.default.of("Encrypt")),
            Info: this.dict.get(PDFName_1.default.of("Info")),
            ID: this.dict.get(PDFName_1.default.of("ID"))
          };
          var entries = this.parseEntries();
          return entries;
        };
        PDFXRefStreamParser2.prototype.parseEntries = function() {
          var entries = [];
          var _a = this.byteWidths, typeFieldWidth = _a[0], offsetFieldWidth = _a[1], genFieldWidth = _a[2];
          for (var subsectionIdx = 0, subsectionLen = this.subsections.length; subsectionIdx < subsectionLen; subsectionIdx++) {
            var _b = this.subsections[subsectionIdx], firstObjectNumber = _b.firstObjectNumber, length_2 = _b.length;
            for (var objIdx = 0; objIdx < length_2; objIdx++) {
              var type = 0;
              for (var idx = 0, len = typeFieldWidth; idx < len; idx++) {
                type = type << 8 | this.bytes.next();
              }
              var offset = 0;
              for (var idx = 0, len = offsetFieldWidth; idx < len; idx++) {
                offset = offset << 8 | this.bytes.next();
              }
              var generationNumber = 0;
              for (var idx = 0, len = genFieldWidth; idx < len; idx++) {
                generationNumber = generationNumber << 8 | this.bytes.next();
              }
              if (typeFieldWidth === 0)
                type = 1;
              var objectNumber = firstObjectNumber + objIdx;
              var entry = {
                ref: PDFRef_1.default.of(objectNumber, generationNumber),
                offset,
                deleted: type === 0,
                inObjectStream: type === 2
              };
              entries.push(entry);
            }
          }
          return entries;
        };
        PDFXRefStreamParser2.forStream = function(rawStream) {
          return new PDFXRefStreamParser2(rawStream);
        };
        return PDFXRefStreamParser2;
      }()
    );
    exports.default = PDFXRefStreamParser;
  }
});

// node_modules/pdf-lib/cjs/core/parser/PDFParser.js
var require_PDFParser = __commonJS({
  "node_modules/pdf-lib/cjs/core/parser/PDFParser.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFCrossRefSection_1 = tslib_1.__importDefault(require_PDFCrossRefSection());
    var PDFHeader_1 = tslib_1.__importDefault(require_PDFHeader());
    var PDFTrailer_1 = tslib_1.__importDefault(require_PDFTrailer());
    var errors_1 = require_errors2();
    var PDFDict_1 = tslib_1.__importDefault(require_PDFDict());
    var PDFInvalidObject_1 = tslib_1.__importDefault(require_PDFInvalidObject());
    var PDFName_1 = tslib_1.__importDefault(require_PDFName());
    var PDFRawStream_1 = tslib_1.__importDefault(require_PDFRawStream());
    var PDFRef_1 = tslib_1.__importDefault(require_PDFRef());
    var ByteStream_1 = tslib_1.__importDefault(require_ByteStream());
    var PDFObjectParser_1 = tslib_1.__importDefault(require_PDFObjectParser());
    var PDFObjectStreamParser_1 = tslib_1.__importDefault(require_PDFObjectStreamParser());
    var PDFXRefStreamParser_1 = tslib_1.__importDefault(require_PDFXRefStreamParser());
    var PDFContext_1 = tslib_1.__importDefault(require_PDFContext());
    var CharCodes_1 = tslib_1.__importDefault(require_CharCodes());
    var Keywords_1 = require_Keywords();
    var Numeric_1 = require_Numeric();
    var utils_1 = require_utils2();
    var PDFParser = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFParser2, _super);
        function PDFParser2(pdfBytes, objectsPerTick, throwOnInvalidObject, capNumbers) {
          if (objectsPerTick === void 0) {
            objectsPerTick = Infinity;
          }
          if (throwOnInvalidObject === void 0) {
            throwOnInvalidObject = false;
          }
          if (capNumbers === void 0) {
            capNumbers = false;
          }
          var _this = _super.call(this, ByteStream_1.default.of(pdfBytes), PDFContext_1.default.create(), capNumbers) || this;
          _this.alreadyParsed = false;
          _this.parsedObjects = 0;
          _this.shouldWaitForTick = function() {
            _this.parsedObjects += 1;
            return _this.parsedObjects % _this.objectsPerTick === 0;
          };
          _this.objectsPerTick = objectsPerTick;
          _this.throwOnInvalidObject = throwOnInvalidObject;
          return _this;
        }
        PDFParser2.prototype.parseDocument = function() {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var prevOffset, offset;
            return tslib_1.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  if (this.alreadyParsed) {
                    throw new errors_1.ReparseError("PDFParser", "parseDocument");
                  }
                  this.alreadyParsed = true;
                  this.context.header = this.parseHeader();
                  _a.label = 1;
                case 1:
                  if (!!this.bytes.done())
                    return [3, 3];
                  return [4, this.parseDocumentSection()];
                case 2:
                  _a.sent();
                  offset = this.bytes.offset();
                  if (offset === prevOffset) {
                    throw new errors_1.StalledParserError(this.bytes.position());
                  }
                  prevOffset = offset;
                  return [3, 1];
                case 3:
                  this.maybeRecoverRoot();
                  if (this.context.lookup(PDFRef_1.default.of(0))) {
                    console.warn("Removing parsed object: 0 0 R");
                    this.context.delete(PDFRef_1.default.of(0));
                  }
                  return [2, this.context];
              }
            });
          });
        };
        PDFParser2.prototype.maybeRecoverRoot = function() {
          var isValidCatalog = function(obj) {
            return obj instanceof PDFDict_1.default && obj.lookup(PDFName_1.default.of("Type")) === PDFName_1.default.of("Catalog");
          };
          var catalog = this.context.lookup(this.context.trailerInfo.Root);
          if (!isValidCatalog(catalog)) {
            var indirectObjects = this.context.enumerateIndirectObjects();
            for (var idx = 0, len = indirectObjects.length; idx < len; idx++) {
              var _a = indirectObjects[idx], ref = _a[0], object = _a[1];
              if (isValidCatalog(object)) {
                this.context.trailerInfo.Root = ref;
              }
            }
          }
        };
        PDFParser2.prototype.parseHeader = function() {
          while (!this.bytes.done()) {
            if (this.matchKeyword(Keywords_1.Keywords.header)) {
              var major = this.parseRawInt();
              this.bytes.assertNext(CharCodes_1.default.Period);
              var minor = this.parseRawInt();
              var header = PDFHeader_1.default.forVersion(major, minor);
              this.skipBinaryHeaderComment();
              return header;
            }
            this.bytes.next();
          }
          throw new errors_1.MissingPDFHeaderError(this.bytes.position());
        };
        PDFParser2.prototype.parseIndirectObjectHeader = function() {
          this.skipWhitespaceAndComments();
          var objectNumber = this.parseRawInt();
          this.skipWhitespaceAndComments();
          var generationNumber = this.parseRawInt();
          this.skipWhitespaceAndComments();
          if (!this.matchKeyword(Keywords_1.Keywords.obj)) {
            throw new errors_1.MissingKeywordError(this.bytes.position(), Keywords_1.Keywords.obj);
          }
          return PDFRef_1.default.of(objectNumber, generationNumber);
        };
        PDFParser2.prototype.matchIndirectObjectHeader = function() {
          var initialOffset = this.bytes.offset();
          try {
            this.parseIndirectObjectHeader();
            return true;
          } catch (e) {
            this.bytes.moveTo(initialOffset);
            return false;
          }
        };
        PDFParser2.prototype.parseIndirectObject = function() {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var ref, object;
            return tslib_1.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  ref = this.parseIndirectObjectHeader();
                  this.skipWhitespaceAndComments();
                  object = this.parseObject();
                  this.skipWhitespaceAndComments();
                  this.matchKeyword(Keywords_1.Keywords.endobj);
                  if (!(object instanceof PDFRawStream_1.default && object.dict.lookup(PDFName_1.default.of("Type")) === PDFName_1.default.of("ObjStm")))
                    return [3, 2];
                  return [4, PDFObjectStreamParser_1.default.forStream(object, this.shouldWaitForTick).parseIntoContext()];
                case 1:
                  _a.sent();
                  return [3, 3];
                case 2:
                  if (object instanceof PDFRawStream_1.default && object.dict.lookup(PDFName_1.default.of("Type")) === PDFName_1.default.of("XRef")) {
                    PDFXRefStreamParser_1.default.forStream(object).parseIntoContext();
                  } else {
                    this.context.assign(ref, object);
                  }
                  _a.label = 3;
                case 3:
                  return [2, ref];
              }
            });
          });
        };
        PDFParser2.prototype.tryToParseInvalidIndirectObject = function() {
          var startPos = this.bytes.position();
          var msg = "Trying to parse invalid object: " + JSON.stringify(startPos) + ")";
          if (this.throwOnInvalidObject)
            throw new Error(msg);
          console.warn(msg);
          var ref = this.parseIndirectObjectHeader();
          console.warn("Invalid object ref: " + ref);
          this.skipWhitespaceAndComments();
          var start = this.bytes.offset();
          var failed = true;
          while (!this.bytes.done()) {
            if (this.matchKeyword(Keywords_1.Keywords.endobj)) {
              failed = false;
            }
            if (!failed)
              break;
            this.bytes.next();
          }
          if (failed)
            throw new errors_1.PDFInvalidObjectParsingError(startPos);
          var end = this.bytes.offset() - Keywords_1.Keywords.endobj.length;
          var object = PDFInvalidObject_1.default.of(this.bytes.slice(start, end));
          this.context.assign(ref, object);
          return ref;
        };
        PDFParser2.prototype.parseIndirectObjects = function() {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var initialOffset, e_1;
            return tslib_1.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  this.skipWhitespaceAndComments();
                  _a.label = 1;
                case 1:
                  if (!(!this.bytes.done() && Numeric_1.IsDigit[this.bytes.peek()]))
                    return [3, 8];
                  initialOffset = this.bytes.offset();
                  _a.label = 2;
                case 2:
                  _a.trys.push([2, 4, , 5]);
                  return [4, this.parseIndirectObject()];
                case 3:
                  _a.sent();
                  return [3, 5];
                case 4:
                  e_1 = _a.sent();
                  this.bytes.moveTo(initialOffset);
                  this.tryToParseInvalidIndirectObject();
                  return [3, 5];
                case 5:
                  this.skipWhitespaceAndComments();
                  this.skipJibberish();
                  if (!this.shouldWaitForTick())
                    return [3, 7];
                  return [4, utils_1.waitForTick()];
                case 6:
                  _a.sent();
                  _a.label = 7;
                case 7:
                  return [3, 1];
                case 8:
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        };
        PDFParser2.prototype.maybeParseCrossRefSection = function() {
          this.skipWhitespaceAndComments();
          if (!this.matchKeyword(Keywords_1.Keywords.xref))
            return;
          this.skipWhitespaceAndComments();
          var objectNumber = -1;
          var xref = PDFCrossRefSection_1.default.createEmpty();
          while (!this.bytes.done() && Numeric_1.IsDigit[this.bytes.peek()]) {
            var firstInt = this.parseRawInt();
            this.skipWhitespaceAndComments();
            var secondInt = this.parseRawInt();
            this.skipWhitespaceAndComments();
            var byte = this.bytes.peek();
            if (byte === CharCodes_1.default.n || byte === CharCodes_1.default.f) {
              var ref = PDFRef_1.default.of(objectNumber, secondInt);
              if (this.bytes.next() === CharCodes_1.default.n) {
                xref.addEntry(ref, firstInt);
              } else {
                xref.addDeletedEntry(ref, firstInt);
              }
              objectNumber += 1;
            } else {
              objectNumber = firstInt;
            }
            this.skipWhitespaceAndComments();
          }
          return xref;
        };
        PDFParser2.prototype.maybeParseTrailerDict = function() {
          this.skipWhitespaceAndComments();
          if (!this.matchKeyword(Keywords_1.Keywords.trailer))
            return;
          this.skipWhitespaceAndComments();
          var dict = this.parseDict();
          var context = this.context;
          context.trailerInfo = {
            Root: dict.get(PDFName_1.default.of("Root")) || context.trailerInfo.Root,
            Encrypt: dict.get(PDFName_1.default.of("Encrypt")) || context.trailerInfo.Encrypt,
            Info: dict.get(PDFName_1.default.of("Info")) || context.trailerInfo.Info,
            ID: dict.get(PDFName_1.default.of("ID")) || context.trailerInfo.ID
          };
        };
        PDFParser2.prototype.maybeParseTrailer = function() {
          this.skipWhitespaceAndComments();
          if (!this.matchKeyword(Keywords_1.Keywords.startxref))
            return;
          this.skipWhitespaceAndComments();
          var offset = this.parseRawInt();
          this.skipWhitespace();
          this.matchKeyword(Keywords_1.Keywords.eof);
          this.skipWhitespaceAndComments();
          this.matchKeyword(Keywords_1.Keywords.eof);
          this.skipWhitespaceAndComments();
          return PDFTrailer_1.default.forLastCrossRefSectionOffset(offset);
        };
        PDFParser2.prototype.parseDocumentSection = function() {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            return tslib_1.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.parseIndirectObjects()];
                case 1:
                  _a.sent();
                  this.maybeParseCrossRefSection();
                  this.maybeParseTrailerDict();
                  this.maybeParseTrailer();
                  this.skipJibberish();
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        };
        PDFParser2.prototype.skipJibberish = function() {
          this.skipWhitespaceAndComments();
          while (!this.bytes.done()) {
            var initialOffset = this.bytes.offset();
            var byte = this.bytes.peek();
            var isAlphaNumeric = byte >= CharCodes_1.default.Space && byte <= CharCodes_1.default.Tilde;
            if (isAlphaNumeric) {
              if (this.matchKeyword(Keywords_1.Keywords.xref) || this.matchKeyword(Keywords_1.Keywords.trailer) || this.matchKeyword(Keywords_1.Keywords.startxref) || this.matchIndirectObjectHeader()) {
                this.bytes.moveTo(initialOffset);
                break;
              }
            }
            this.bytes.next();
          }
        };
        PDFParser2.prototype.skipBinaryHeaderComment = function() {
          this.skipWhitespaceAndComments();
          try {
            var initialOffset = this.bytes.offset();
            this.parseIndirectObjectHeader();
            this.bytes.moveTo(initialOffset);
          } catch (e) {
            this.bytes.next();
            this.skipWhitespaceAndComments();
          }
        };
        PDFParser2.forBytesWithOptions = function(pdfBytes, objectsPerTick, throwOnInvalidObject, capNumbers) {
          return new PDFParser2(pdfBytes, objectsPerTick, throwOnInvalidObject, capNumbers);
        };
        return PDFParser2;
      }(PDFObjectParser_1.default)
    );
    exports.default = PDFParser;
  }
});

// node_modules/pdf-lib/cjs/core/annotation/flags.js
var require_flags2 = __commonJS({
  "node_modules/pdf-lib/cjs/core/annotation/flags.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AnnotationFlags = void 0;
    var flag = function(bitIndex) {
      return 1 << bitIndex;
    };
    var AnnotationFlags;
    (function(AnnotationFlags2) {
      AnnotationFlags2[AnnotationFlags2["Invisible"] = flag(1 - 1)] = "Invisible";
      AnnotationFlags2[AnnotationFlags2["Hidden"] = flag(2 - 1)] = "Hidden";
      AnnotationFlags2[AnnotationFlags2["Print"] = flag(3 - 1)] = "Print";
      AnnotationFlags2[AnnotationFlags2["NoZoom"] = flag(4 - 1)] = "NoZoom";
      AnnotationFlags2[AnnotationFlags2["NoRotate"] = flag(5 - 1)] = "NoRotate";
      AnnotationFlags2[AnnotationFlags2["NoView"] = flag(6 - 1)] = "NoView";
      AnnotationFlags2[AnnotationFlags2["ReadOnly"] = flag(7 - 1)] = "ReadOnly";
      AnnotationFlags2[AnnotationFlags2["Locked"] = flag(8 - 1)] = "Locked";
      AnnotationFlags2[AnnotationFlags2["ToggleNoView"] = flag(9 - 1)] = "ToggleNoView";
      AnnotationFlags2[AnnotationFlags2["LockedContents"] = flag(10 - 1)] = "LockedContents";
    })(AnnotationFlags = exports.AnnotationFlags || (exports.AnnotationFlags = {}));
  }
});

// node_modules/pdf-lib/cjs/core/annotation/index.js
var require_annotation = __commonJS({
  "node_modules/pdf-lib/cjs/core/annotation/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFAnnotation_1 = require_PDFAnnotation();
    Object.defineProperty(exports, "PDFAnnotation", { enumerable: true, get: function() {
      return PDFAnnotation_1.default;
    } });
    var PDFWidgetAnnotation_1 = require_PDFWidgetAnnotation();
    Object.defineProperty(exports, "PDFWidgetAnnotation", { enumerable: true, get: function() {
      return PDFWidgetAnnotation_1.default;
    } });
    var AppearanceCharacteristics_1 = require_AppearanceCharacteristics();
    Object.defineProperty(exports, "AppearanceCharacteristics", { enumerable: true, get: function() {
      return AppearanceCharacteristics_1.default;
    } });
    tslib_1.__exportStar(require_flags2(), exports);
  }
});

// node_modules/pdf-lib/cjs/core/index.js
var require_core = __commonJS({
  "node_modules/pdf-lib/cjs/core/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_errors2(), exports);
    var CharCodes_1 = require_CharCodes();
    Object.defineProperty(exports, "CharCodes", { enumerable: true, get: function() {
      return CharCodes_1.default;
    } });
    var PDFContext_1 = require_PDFContext();
    Object.defineProperty(exports, "PDFContext", { enumerable: true, get: function() {
      return PDFContext_1.default;
    } });
    var PDFObjectCopier_1 = require_PDFObjectCopier();
    Object.defineProperty(exports, "PDFObjectCopier", { enumerable: true, get: function() {
      return PDFObjectCopier_1.default;
    } });
    var PDFWriter_1 = require_PDFWriter();
    Object.defineProperty(exports, "PDFWriter", { enumerable: true, get: function() {
      return PDFWriter_1.default;
    } });
    var PDFStreamWriter_1 = require_PDFStreamWriter();
    Object.defineProperty(exports, "PDFStreamWriter", { enumerable: true, get: function() {
      return PDFStreamWriter_1.default;
    } });
    var PDFHeader_1 = require_PDFHeader();
    Object.defineProperty(exports, "PDFHeader", { enumerable: true, get: function() {
      return PDFHeader_1.default;
    } });
    var PDFTrailer_1 = require_PDFTrailer();
    Object.defineProperty(exports, "PDFTrailer", { enumerable: true, get: function() {
      return PDFTrailer_1.default;
    } });
    var PDFTrailerDict_1 = require_PDFTrailerDict();
    Object.defineProperty(exports, "PDFTrailerDict", { enumerable: true, get: function() {
      return PDFTrailerDict_1.default;
    } });
    var PDFCrossRefSection_1 = require_PDFCrossRefSection();
    Object.defineProperty(exports, "PDFCrossRefSection", { enumerable: true, get: function() {
      return PDFCrossRefSection_1.default;
    } });
    var StandardFontEmbedder_1 = require_StandardFontEmbedder();
    Object.defineProperty(exports, "StandardFontEmbedder", { enumerable: true, get: function() {
      return StandardFontEmbedder_1.default;
    } });
    var CustomFontEmbedder_1 = require_CustomFontEmbedder();
    Object.defineProperty(exports, "CustomFontEmbedder", { enumerable: true, get: function() {
      return CustomFontEmbedder_1.default;
    } });
    var CustomFontSubsetEmbedder_1 = require_CustomFontSubsetEmbedder();
    Object.defineProperty(exports, "CustomFontSubsetEmbedder", { enumerable: true, get: function() {
      return CustomFontSubsetEmbedder_1.default;
    } });
    var FileEmbedder_1 = require_FileEmbedder();
    Object.defineProperty(exports, "FileEmbedder", { enumerable: true, get: function() {
      return FileEmbedder_1.default;
    } });
    Object.defineProperty(exports, "AFRelationship", { enumerable: true, get: function() {
      return FileEmbedder_1.AFRelationship;
    } });
    var JpegEmbedder_1 = require_JpegEmbedder();
    Object.defineProperty(exports, "JpegEmbedder", { enumerable: true, get: function() {
      return JpegEmbedder_1.default;
    } });
    var PngEmbedder_1 = require_PngEmbedder();
    Object.defineProperty(exports, "PngEmbedder", { enumerable: true, get: function() {
      return PngEmbedder_1.default;
    } });
    var PDFPageEmbedder_1 = require_PDFPageEmbedder();
    Object.defineProperty(exports, "PDFPageEmbedder", { enumerable: true, get: function() {
      return PDFPageEmbedder_1.default;
    } });
    var ViewerPreferences_1 = require_ViewerPreferences();
    Object.defineProperty(exports, "ViewerPreferences", { enumerable: true, get: function() {
      return ViewerPreferences_1.default;
    } });
    Object.defineProperty(exports, "NonFullScreenPageMode", { enumerable: true, get: function() {
      return ViewerPreferences_1.NonFullScreenPageMode;
    } });
    Object.defineProperty(exports, "ReadingDirection", { enumerable: true, get: function() {
      return ViewerPreferences_1.ReadingDirection;
    } });
    Object.defineProperty(exports, "PrintScaling", { enumerable: true, get: function() {
      return ViewerPreferences_1.PrintScaling;
    } });
    Object.defineProperty(exports, "Duplex", { enumerable: true, get: function() {
      return ViewerPreferences_1.Duplex;
    } });
    var PDFObject_1 = require_PDFObject();
    Object.defineProperty(exports, "PDFObject", { enumerable: true, get: function() {
      return PDFObject_1.default;
    } });
    var PDFBool_1 = require_PDFBool();
    Object.defineProperty(exports, "PDFBool", { enumerable: true, get: function() {
      return PDFBool_1.default;
    } });
    var PDFNumber_1 = require_PDFNumber();
    Object.defineProperty(exports, "PDFNumber", { enumerable: true, get: function() {
      return PDFNumber_1.default;
    } });
    var PDFString_1 = require_PDFString();
    Object.defineProperty(exports, "PDFString", { enumerable: true, get: function() {
      return PDFString_1.default;
    } });
    var PDFHexString_1 = require_PDFHexString();
    Object.defineProperty(exports, "PDFHexString", { enumerable: true, get: function() {
      return PDFHexString_1.default;
    } });
    var PDFName_1 = require_PDFName();
    Object.defineProperty(exports, "PDFName", { enumerable: true, get: function() {
      return PDFName_1.default;
    } });
    var PDFNull_1 = require_PDFNull();
    Object.defineProperty(exports, "PDFNull", { enumerable: true, get: function() {
      return PDFNull_1.default;
    } });
    var PDFArray_1 = require_PDFArray();
    Object.defineProperty(exports, "PDFArray", { enumerable: true, get: function() {
      return PDFArray_1.default;
    } });
    var PDFDict_1 = require_PDFDict();
    Object.defineProperty(exports, "PDFDict", { enumerable: true, get: function() {
      return PDFDict_1.default;
    } });
    var PDFRef_1 = require_PDFRef();
    Object.defineProperty(exports, "PDFRef", { enumerable: true, get: function() {
      return PDFRef_1.default;
    } });
    var PDFInvalidObject_1 = require_PDFInvalidObject();
    Object.defineProperty(exports, "PDFInvalidObject", { enumerable: true, get: function() {
      return PDFInvalidObject_1.default;
    } });
    var PDFStream_1 = require_PDFStream();
    Object.defineProperty(exports, "PDFStream", { enumerable: true, get: function() {
      return PDFStream_1.default;
    } });
    var PDFRawStream_1 = require_PDFRawStream();
    Object.defineProperty(exports, "PDFRawStream", { enumerable: true, get: function() {
      return PDFRawStream_1.default;
    } });
    var PDFCatalog_1 = require_PDFCatalog();
    Object.defineProperty(exports, "PDFCatalog", { enumerable: true, get: function() {
      return PDFCatalog_1.default;
    } });
    var PDFContentStream_1 = require_PDFContentStream();
    Object.defineProperty(exports, "PDFContentStream", { enumerable: true, get: function() {
      return PDFContentStream_1.default;
    } });
    var PDFCrossRefStream_1 = require_PDFCrossRefStream();
    Object.defineProperty(exports, "PDFCrossRefStream", { enumerable: true, get: function() {
      return PDFCrossRefStream_1.default;
    } });
    var PDFObjectStream_1 = require_PDFObjectStream();
    Object.defineProperty(exports, "PDFObjectStream", { enumerable: true, get: function() {
      return PDFObjectStream_1.default;
    } });
    var PDFPageTree_1 = require_PDFPageTree();
    Object.defineProperty(exports, "PDFPageTree", { enumerable: true, get: function() {
      return PDFPageTree_1.default;
    } });
    var PDFPageLeaf_1 = require_PDFPageLeaf();
    Object.defineProperty(exports, "PDFPageLeaf", { enumerable: true, get: function() {
      return PDFPageLeaf_1.default;
    } });
    var PDFFlateStream_1 = require_PDFFlateStream();
    Object.defineProperty(exports, "PDFFlateStream", { enumerable: true, get: function() {
      return PDFFlateStream_1.default;
    } });
    var PDFOperator_1 = require_PDFOperator();
    Object.defineProperty(exports, "PDFOperator", { enumerable: true, get: function() {
      return PDFOperator_1.default;
    } });
    var PDFOperatorNames_1 = require_PDFOperatorNames();
    Object.defineProperty(exports, "PDFOperatorNames", { enumerable: true, get: function() {
      return PDFOperatorNames_1.default;
    } });
    var PDFObjectParser_1 = require_PDFObjectParser();
    Object.defineProperty(exports, "PDFObjectParser", { enumerable: true, get: function() {
      return PDFObjectParser_1.default;
    } });
    var PDFObjectStreamParser_1 = require_PDFObjectStreamParser();
    Object.defineProperty(exports, "PDFObjectStreamParser", { enumerable: true, get: function() {
      return PDFObjectStreamParser_1.default;
    } });
    var PDFParser_1 = require_PDFParser();
    Object.defineProperty(exports, "PDFParser", { enumerable: true, get: function() {
      return PDFParser_1.default;
    } });
    var PDFXRefStreamParser_1 = require_PDFXRefStreamParser();
    Object.defineProperty(exports, "PDFXRefStreamParser", { enumerable: true, get: function() {
      return PDFXRefStreamParser_1.default;
    } });
    var decode_1 = require_decode();
    Object.defineProperty(exports, "decodePDFRawStream", { enumerable: true, get: function() {
      return decode_1.decodePDFRawStream;
    } });
    tslib_1.__exportStar(require_annotation(), exports);
    tslib_1.__exportStar(require_acroform(), exports);
  }
});

// node_modules/pdf-lib/cjs/api/objects.js
var require_objects2 = __commonJS({
  "node_modules/pdf-lib/cjs/api/objects.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.asNumber = exports.asPDFNumber = exports.asPDFName = void 0;
    var core_1 = require_core();
    exports.asPDFName = function(name) {
      return name instanceof core_1.PDFName ? name : core_1.PDFName.of(name);
    };
    exports.asPDFNumber = function(num) {
      return num instanceof core_1.PDFNumber ? num : core_1.PDFNumber.of(num);
    };
    exports.asNumber = function(num) {
      return num instanceof core_1.PDFNumber ? num.asNumber() : num;
    };
  }
});

// node_modules/pdf-lib/cjs/api/rotations.js
var require_rotations = __commonJS({
  "node_modules/pdf-lib/cjs/api/rotations.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.rotateRectangle = exports.adjustDimsForRotation = exports.reduceRotation = exports.toDegrees = exports.toRadians = exports.radiansToDegrees = exports.degreesToRadians = exports.degrees = exports.radians = exports.RotationTypes = void 0;
    var utils_1 = require_utils2();
    var RotationTypes;
    (function(RotationTypes2) {
      RotationTypes2["Degrees"] = "degrees";
      RotationTypes2["Radians"] = "radians";
    })(RotationTypes = exports.RotationTypes || (exports.RotationTypes = {}));
    exports.radians = function(radianAngle) {
      utils_1.assertIs(radianAngle, "radianAngle", ["number"]);
      return { type: RotationTypes.Radians, angle: radianAngle };
    };
    exports.degrees = function(degreeAngle) {
      utils_1.assertIs(degreeAngle, "degreeAngle", ["number"]);
      return { type: RotationTypes.Degrees, angle: degreeAngle };
    };
    var Radians = RotationTypes.Radians;
    var Degrees = RotationTypes.Degrees;
    exports.degreesToRadians = function(degree) {
      return degree * Math.PI / 180;
    };
    exports.radiansToDegrees = function(radian) {
      return radian * 180 / Math.PI;
    };
    exports.toRadians = function(rotation) {
      return rotation.type === Radians ? rotation.angle : rotation.type === Degrees ? exports.degreesToRadians(rotation.angle) : utils_1.error("Invalid rotation: " + JSON.stringify(rotation));
    };
    exports.toDegrees = function(rotation) {
      return rotation.type === Radians ? exports.radiansToDegrees(rotation.angle) : rotation.type === Degrees ? rotation.angle : utils_1.error("Invalid rotation: " + JSON.stringify(rotation));
    };
    exports.reduceRotation = function(degreeAngle) {
      if (degreeAngle === void 0) {
        degreeAngle = 0;
      }
      var quadrants = degreeAngle / 90 % 4;
      if (quadrants === 0)
        return 0;
      if (quadrants === 1)
        return 90;
      if (quadrants === 2)
        return 180;
      if (quadrants === 3)
        return 270;
      return 0;
    };
    exports.adjustDimsForRotation = function(dims, degreeAngle) {
      if (degreeAngle === void 0) {
        degreeAngle = 0;
      }
      var rotation = exports.reduceRotation(degreeAngle);
      return rotation === 90 || rotation === 270 ? { width: dims.height, height: dims.width } : { width: dims.width, height: dims.height };
    };
    exports.rotateRectangle = function(rectangle, borderWidth, degreeAngle) {
      if (borderWidth === void 0) {
        borderWidth = 0;
      }
      if (degreeAngle === void 0) {
        degreeAngle = 0;
      }
      var x = rectangle.x, y = rectangle.y, w = rectangle.width, h = rectangle.height;
      var r = exports.reduceRotation(degreeAngle);
      var b = borderWidth / 2;
      if (r === 0)
        return { x: x - b, y: y - b, width: w, height: h };
      else if (r === 90)
        return { x: x - h + b, y: y - b, width: h, height: w };
      else if (r === 180)
        return { x: x - w + b, y: y - h + b, width: w, height: h };
      else if (r === 270)
        return { x: x - b, y: y - w + b, width: h, height: w };
      else
        return { x: x - b, y: y - b, width: w, height: h };
    };
  }
});

// node_modules/pdf-lib/cjs/api/operators.js
var require_operators = __commonJS({
  "node_modules/pdf-lib/cjs/api/operators.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.endMarkedContent = exports.beginMarkedContent = exports.setStrokingCmykColor = exports.setFillingCmykColor = exports.setStrokingRgbColor = exports.setFillingRgbColor = exports.setStrokingGrayscaleColor = exports.setFillingGrayscaleColor = exports.drawObject = exports.rotateAndSkewTextDegreesAndTranslate = exports.rotateAndSkewTextRadiansAndTranslate = exports.setTextMatrix = exports.setTextRenderingMode = exports.TextRenderingMode = exports.setTextRise = exports.setLineHeight = exports.setCharacterSqueeze = exports.setWordSpacing = exports.setCharacterSpacing = exports.setFontAndSize = exports.endText = exports.beginText = exports.showText = exports.moveText = exports.nextLine = exports.endPath = exports.fillAndStroke = exports.fill = exports.stroke = exports.square = exports.rectangle = exports.lineTo = exports.moveTo = exports.closePath = exports.appendQuadraticCurve = exports.appendBezierCurve = exports.setLineWidth = exports.popGraphicsState = exports.pushGraphicsState = exports.setGraphicsState = exports.setLineJoin = exports.LineJoinStyle = exports.setLineCap = exports.LineCapStyle = exports.restoreDashPattern = exports.setDashPattern = exports.skewDegrees = exports.skewRadians = exports.rotateDegrees = exports.rotateRadians = exports.scale = exports.translate = exports.concatTransformationMatrix = exports.clipEvenOdd = exports.clip = void 0;
    var objects_1 = require_objects2();
    var rotations_1 = require_rotations();
    var core_1 = require_core();
    exports.clip = function() {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.ClipNonZero);
    };
    exports.clipEvenOdd = function() {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.ClipEvenOdd);
    };
    var cos = Math.cos;
    var sin = Math.sin;
    var tan = Math.tan;
    exports.concatTransformationMatrix = function(a, b, c, d, e, f) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.ConcatTransformationMatrix, [
        objects_1.asPDFNumber(a),
        objects_1.asPDFNumber(b),
        objects_1.asPDFNumber(c),
        objects_1.asPDFNumber(d),
        objects_1.asPDFNumber(e),
        objects_1.asPDFNumber(f)
      ]);
    };
    exports.translate = function(xPos, yPos) {
      return exports.concatTransformationMatrix(1, 0, 0, 1, xPos, yPos);
    };
    exports.scale = function(xPos, yPos) {
      return exports.concatTransformationMatrix(xPos, 0, 0, yPos, 0, 0);
    };
    exports.rotateRadians = function(angle) {
      return exports.concatTransformationMatrix(cos(objects_1.asNumber(angle)), sin(objects_1.asNumber(angle)), -sin(objects_1.asNumber(angle)), cos(objects_1.asNumber(angle)), 0, 0);
    };
    exports.rotateDegrees = function(angle) {
      return exports.rotateRadians(rotations_1.degreesToRadians(objects_1.asNumber(angle)));
    };
    exports.skewRadians = function(xSkewAngle, ySkewAngle) {
      return exports.concatTransformationMatrix(1, tan(objects_1.asNumber(xSkewAngle)), tan(objects_1.asNumber(ySkewAngle)), 1, 0, 0);
    };
    exports.skewDegrees = function(xSkewAngle, ySkewAngle) {
      return exports.skewRadians(rotations_1.degreesToRadians(objects_1.asNumber(xSkewAngle)), rotations_1.degreesToRadians(objects_1.asNumber(ySkewAngle)));
    };
    exports.setDashPattern = function(dashArray, dashPhase) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetLineDashPattern, [
        "[" + dashArray.map(objects_1.asPDFNumber).join(" ") + "]",
        objects_1.asPDFNumber(dashPhase)
      ]);
    };
    exports.restoreDashPattern = function() {
      return exports.setDashPattern([], 0);
    };
    var LineCapStyle;
    (function(LineCapStyle2) {
      LineCapStyle2[LineCapStyle2["Butt"] = 0] = "Butt";
      LineCapStyle2[LineCapStyle2["Round"] = 1] = "Round";
      LineCapStyle2[LineCapStyle2["Projecting"] = 2] = "Projecting";
    })(LineCapStyle = exports.LineCapStyle || (exports.LineCapStyle = {}));
    exports.setLineCap = function(style) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetLineCapStyle, [objects_1.asPDFNumber(style)]);
    };
    var LineJoinStyle;
    (function(LineJoinStyle2) {
      LineJoinStyle2[LineJoinStyle2["Miter"] = 0] = "Miter";
      LineJoinStyle2[LineJoinStyle2["Round"] = 1] = "Round";
      LineJoinStyle2[LineJoinStyle2["Bevel"] = 2] = "Bevel";
    })(LineJoinStyle = exports.LineJoinStyle || (exports.LineJoinStyle = {}));
    exports.setLineJoin = function(style) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetLineJoinStyle, [objects_1.asPDFNumber(style)]);
    };
    exports.setGraphicsState = function(state) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetGraphicsStateParams, [objects_1.asPDFName(state)]);
    };
    exports.pushGraphicsState = function() {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.PushGraphicsState);
    };
    exports.popGraphicsState = function() {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.PopGraphicsState);
    };
    exports.setLineWidth = function(width) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetLineWidth, [objects_1.asPDFNumber(width)]);
    };
    exports.appendBezierCurve = function(x1, y1, x2, y2, x3, y3) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.AppendBezierCurve, [
        objects_1.asPDFNumber(x1),
        objects_1.asPDFNumber(y1),
        objects_1.asPDFNumber(x2),
        objects_1.asPDFNumber(y2),
        objects_1.asPDFNumber(x3),
        objects_1.asPDFNumber(y3)
      ]);
    };
    exports.appendQuadraticCurve = function(x1, y1, x2, y2) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.CurveToReplicateInitialPoint, [
        objects_1.asPDFNumber(x1),
        objects_1.asPDFNumber(y1),
        objects_1.asPDFNumber(x2),
        objects_1.asPDFNumber(y2)
      ]);
    };
    exports.closePath = function() {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.ClosePath);
    };
    exports.moveTo = function(xPos, yPos) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.MoveTo, [objects_1.asPDFNumber(xPos), objects_1.asPDFNumber(yPos)]);
    };
    exports.lineTo = function(xPos, yPos) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.LineTo, [objects_1.asPDFNumber(xPos), objects_1.asPDFNumber(yPos)]);
    };
    exports.rectangle = function(xPos, yPos, width, height) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.AppendRectangle, [
        objects_1.asPDFNumber(xPos),
        objects_1.asPDFNumber(yPos),
        objects_1.asPDFNumber(width),
        objects_1.asPDFNumber(height)
      ]);
    };
    exports.square = function(xPos, yPos, size) {
      return exports.rectangle(xPos, yPos, size, size);
    };
    exports.stroke = function() {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.StrokePath);
    };
    exports.fill = function() {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.FillNonZero);
    };
    exports.fillAndStroke = function() {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.FillNonZeroAndStroke);
    };
    exports.endPath = function() {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.EndPath);
    };
    exports.nextLine = function() {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.NextLine);
    };
    exports.moveText = function(x, y) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.MoveText, [objects_1.asPDFNumber(x), objects_1.asPDFNumber(y)]);
    };
    exports.showText = function(text) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.ShowText, [text]);
    };
    exports.beginText = function() {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.BeginText);
    };
    exports.endText = function() {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.EndText);
    };
    exports.setFontAndSize = function(name, size) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetFontAndSize, [objects_1.asPDFName(name), objects_1.asPDFNumber(size)]);
    };
    exports.setCharacterSpacing = function(spacing) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetCharacterSpacing, [objects_1.asPDFNumber(spacing)]);
    };
    exports.setWordSpacing = function(spacing) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetWordSpacing, [objects_1.asPDFNumber(spacing)]);
    };
    exports.setCharacterSqueeze = function(squeeze) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetTextHorizontalScaling, [objects_1.asPDFNumber(squeeze)]);
    };
    exports.setLineHeight = function(lineHeight) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetTextLineHeight, [objects_1.asPDFNumber(lineHeight)]);
    };
    exports.setTextRise = function(rise) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetTextRise, [objects_1.asPDFNumber(rise)]);
    };
    var TextRenderingMode;
    (function(TextRenderingMode2) {
      TextRenderingMode2[TextRenderingMode2["Fill"] = 0] = "Fill";
      TextRenderingMode2[TextRenderingMode2["Outline"] = 1] = "Outline";
      TextRenderingMode2[TextRenderingMode2["FillAndOutline"] = 2] = "FillAndOutline";
      TextRenderingMode2[TextRenderingMode2["Invisible"] = 3] = "Invisible";
      TextRenderingMode2[TextRenderingMode2["FillAndClip"] = 4] = "FillAndClip";
      TextRenderingMode2[TextRenderingMode2["OutlineAndClip"] = 5] = "OutlineAndClip";
      TextRenderingMode2[TextRenderingMode2["FillAndOutlineAndClip"] = 6] = "FillAndOutlineAndClip";
      TextRenderingMode2[TextRenderingMode2["Clip"] = 7] = "Clip";
    })(TextRenderingMode = exports.TextRenderingMode || (exports.TextRenderingMode = {}));
    exports.setTextRenderingMode = function(mode) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetTextRenderingMode, [objects_1.asPDFNumber(mode)]);
    };
    exports.setTextMatrix = function(a, b, c, d, e, f) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetTextMatrix, [
        objects_1.asPDFNumber(a),
        objects_1.asPDFNumber(b),
        objects_1.asPDFNumber(c),
        objects_1.asPDFNumber(d),
        objects_1.asPDFNumber(e),
        objects_1.asPDFNumber(f)
      ]);
    };
    exports.rotateAndSkewTextRadiansAndTranslate = function(rotationAngle, xSkewAngle, ySkewAngle, x, y) {
      return exports.setTextMatrix(cos(objects_1.asNumber(rotationAngle)), sin(objects_1.asNumber(rotationAngle)) + tan(objects_1.asNumber(xSkewAngle)), -sin(objects_1.asNumber(rotationAngle)) + tan(objects_1.asNumber(ySkewAngle)), cos(objects_1.asNumber(rotationAngle)), x, y);
    };
    exports.rotateAndSkewTextDegreesAndTranslate = function(rotationAngle, xSkewAngle, ySkewAngle, x, y) {
      return exports.rotateAndSkewTextRadiansAndTranslate(rotations_1.degreesToRadians(objects_1.asNumber(rotationAngle)), rotations_1.degreesToRadians(objects_1.asNumber(xSkewAngle)), rotations_1.degreesToRadians(objects_1.asNumber(ySkewAngle)), x, y);
    };
    exports.drawObject = function(name) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.DrawObject, [objects_1.asPDFName(name)]);
    };
    exports.setFillingGrayscaleColor = function(gray) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.NonStrokingColorGray, [objects_1.asPDFNumber(gray)]);
    };
    exports.setStrokingGrayscaleColor = function(gray) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.StrokingColorGray, [objects_1.asPDFNumber(gray)]);
    };
    exports.setFillingRgbColor = function(red, green, blue) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.NonStrokingColorRgb, [
        objects_1.asPDFNumber(red),
        objects_1.asPDFNumber(green),
        objects_1.asPDFNumber(blue)
      ]);
    };
    exports.setStrokingRgbColor = function(red, green, blue) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.StrokingColorRgb, [
        objects_1.asPDFNumber(red),
        objects_1.asPDFNumber(green),
        objects_1.asPDFNumber(blue)
      ]);
    };
    exports.setFillingCmykColor = function(cyan, magenta, yellow, key) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.NonStrokingColorCmyk, [
        objects_1.asPDFNumber(cyan),
        objects_1.asPDFNumber(magenta),
        objects_1.asPDFNumber(yellow),
        objects_1.asPDFNumber(key)
      ]);
    };
    exports.setStrokingCmykColor = function(cyan, magenta, yellow, key) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.StrokingColorCmyk, [
        objects_1.asPDFNumber(cyan),
        objects_1.asPDFNumber(magenta),
        objects_1.asPDFNumber(yellow),
        objects_1.asPDFNumber(key)
      ]);
    };
    exports.beginMarkedContent = function(tag) {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.BeginMarkedContent, [objects_1.asPDFName(tag)]);
    };
    exports.endMarkedContent = function() {
      return core_1.PDFOperator.of(core_1.PDFOperatorNames.EndMarkedContent);
    };
  }
});

// node_modules/pdf-lib/cjs/api/colors.js
var require_colors = __commonJS({
  "node_modules/pdf-lib/cjs/api/colors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.colorToComponents = exports.componentsToColor = exports.setStrokingColor = exports.setFillingColor = exports.cmyk = exports.rgb = exports.grayscale = exports.ColorTypes = void 0;
    var operators_1 = require_operators();
    var utils_1 = require_utils2();
    var ColorTypes;
    (function(ColorTypes2) {
      ColorTypes2["Grayscale"] = "Grayscale";
      ColorTypes2["RGB"] = "RGB";
      ColorTypes2["CMYK"] = "CMYK";
    })(ColorTypes = exports.ColorTypes || (exports.ColorTypes = {}));
    exports.grayscale = function(gray) {
      utils_1.assertRange(gray, "gray", 0, 1);
      return { type: ColorTypes.Grayscale, gray };
    };
    exports.rgb = function(red, green, blue) {
      utils_1.assertRange(red, "red", 0, 1);
      utils_1.assertRange(green, "green", 0, 1);
      utils_1.assertRange(blue, "blue", 0, 1);
      return { type: ColorTypes.RGB, red, green, blue };
    };
    exports.cmyk = function(cyan, magenta, yellow, key) {
      utils_1.assertRange(cyan, "cyan", 0, 1);
      utils_1.assertRange(magenta, "magenta", 0, 1);
      utils_1.assertRange(yellow, "yellow", 0, 1);
      utils_1.assertRange(key, "key", 0, 1);
      return { type: ColorTypes.CMYK, cyan, magenta, yellow, key };
    };
    var Grayscale = ColorTypes.Grayscale;
    var RGB = ColorTypes.RGB;
    var CMYK = ColorTypes.CMYK;
    exports.setFillingColor = function(color) {
      return color.type === Grayscale ? operators_1.setFillingGrayscaleColor(color.gray) : color.type === RGB ? operators_1.setFillingRgbColor(color.red, color.green, color.blue) : color.type === CMYK ? operators_1.setFillingCmykColor(color.cyan, color.magenta, color.yellow, color.key) : utils_1.error("Invalid color: " + JSON.stringify(color));
    };
    exports.setStrokingColor = function(color) {
      return color.type === Grayscale ? operators_1.setStrokingGrayscaleColor(color.gray) : color.type === RGB ? operators_1.setStrokingRgbColor(color.red, color.green, color.blue) : color.type === CMYK ? operators_1.setStrokingCmykColor(color.cyan, color.magenta, color.yellow, color.key) : utils_1.error("Invalid color: " + JSON.stringify(color));
    };
    exports.componentsToColor = function(comps, scale) {
      if (scale === void 0) {
        scale = 1;
      }
      return (comps === null || comps === void 0 ? void 0 : comps.length) === 1 ? exports.grayscale(comps[0] * scale) : (comps === null || comps === void 0 ? void 0 : comps.length) === 3 ? exports.rgb(comps[0] * scale, comps[1] * scale, comps[2] * scale) : (comps === null || comps === void 0 ? void 0 : comps.length) === 4 ? exports.cmyk(comps[0] * scale, comps[1] * scale, comps[2] * scale, comps[3] * scale) : void 0;
    };
    exports.colorToComponents = function(color) {
      return color.type === Grayscale ? [color.gray] : color.type === RGB ? [color.red, color.green, color.blue] : color.type === CMYK ? [color.cyan, color.magenta, color.yellow, color.key] : utils_1.error("Invalid color: " + JSON.stringify(color));
    };
  }
});

// node_modules/pdf-lib/cjs/api/svgPath.js
var require_svgPath = __commonJS({
  "node_modules/pdf-lib/cjs/api/svgPath.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.svgPathToOperators = void 0;
    var operators_1 = require_operators();
    var cx = 0;
    var cy = 0;
    var px = 0;
    var py = 0;
    var sx = 0;
    var sy = 0;
    var parameters = /* @__PURE__ */ new Map([
      ["A", 7],
      ["a", 7],
      ["C", 6],
      ["c", 6],
      ["H", 1],
      ["h", 1],
      ["L", 2],
      ["l", 2],
      ["M", 2],
      ["m", 2],
      ["Q", 4],
      ["q", 4],
      ["S", 4],
      ["s", 4],
      ["T", 2],
      ["t", 2],
      ["V", 1],
      ["v", 1],
      ["Z", 0],
      ["z", 0]
    ]);
    var parse = function(path2) {
      var cmd;
      var ret = [];
      var args = [];
      var curArg = "";
      var foundDecimal = false;
      var params = 0;
      for (var _i = 0, path_1 = path2; _i < path_1.length; _i++) {
        var c = path_1[_i];
        if (parameters.has(c)) {
          params = parameters.get(c);
          if (cmd) {
            if (curArg.length > 0) {
              args[args.length] = +curArg;
            }
            ret[ret.length] = { cmd, args };
            args = [];
            curArg = "";
            foundDecimal = false;
          }
          cmd = c;
        } else if ([" ", ","].includes(c) || c === "-" && curArg.length > 0 && curArg[curArg.length - 1] !== "e" || c === "." && foundDecimal) {
          if (curArg.length === 0) {
            continue;
          }
          if (args.length === params) {
            ret[ret.length] = { cmd, args };
            args = [+curArg];
            if (cmd === "M") {
              cmd = "L";
            }
            if (cmd === "m") {
              cmd = "l";
            }
          } else {
            args[args.length] = +curArg;
          }
          foundDecimal = c === ".";
          curArg = ["-", "."].includes(c) ? c : "";
        } else {
          curArg += c;
          if (c === ".") {
            foundDecimal = true;
          }
        }
      }
      if (curArg.length > 0) {
        if (args.length === params) {
          ret[ret.length] = { cmd, args };
          args = [+curArg];
          if (cmd === "M") {
            cmd = "L";
          }
          if (cmd === "m") {
            cmd = "l";
          }
        } else {
          args[args.length] = +curArg;
        }
      }
      ret[ret.length] = { cmd, args };
      return ret;
    };
    var apply = function(commands) {
      cx = cy = px = py = sx = sy = 0;
      var cmds = [];
      for (var i = 0; i < commands.length; i++) {
        var c = commands[i];
        if (c.cmd && typeof runners[c.cmd] === "function") {
          var cmd = runners[c.cmd](c.args);
          if (Array.isArray(cmd)) {
            cmds = cmds.concat(cmd);
          } else {
            cmds.push(cmd);
          }
        }
      }
      return cmds;
    };
    var runners = {
      M: function(a) {
        cx = a[0];
        cy = a[1];
        px = py = null;
        sx = cx;
        sy = cy;
        return operators_1.moveTo(cx, cy);
      },
      m: function(a) {
        cx += a[0];
        cy += a[1];
        px = py = null;
        sx = cx;
        sy = cy;
        return operators_1.moveTo(cx, cy);
      },
      C: function(a) {
        cx = a[4];
        cy = a[5];
        px = a[2];
        py = a[3];
        return operators_1.appendBezierCurve(a[0], a[1], a[2], a[3], a[4], a[5]);
      },
      c: function(a) {
        var cmd = operators_1.appendBezierCurve(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy, a[4] + cx, a[5] + cy);
        px = cx + a[2];
        py = cy + a[3];
        cx += a[4];
        cy += a[5];
        return cmd;
      },
      S: function(a) {
        if (px === null || py === null) {
          px = cx;
          py = cy;
        }
        var cmd = operators_1.appendBezierCurve(cx - (px - cx), cy - (py - cy), a[0], a[1], a[2], a[3]);
        px = a[0];
        py = a[1];
        cx = a[2];
        cy = a[3];
        return cmd;
      },
      s: function(a) {
        if (px === null || py === null) {
          px = cx;
          py = cy;
        }
        var cmd = operators_1.appendBezierCurve(cx - (px - cx), cy - (py - cy), cx + a[0], cy + a[1], cx + a[2], cy + a[3]);
        px = cx + a[0];
        py = cy + a[1];
        cx += a[2];
        cy += a[3];
        return cmd;
      },
      Q: function(a) {
        px = a[0];
        py = a[1];
        cx = a[2];
        cy = a[3];
        return operators_1.appendQuadraticCurve(a[0], a[1], cx, cy);
      },
      q: function(a) {
        var cmd = operators_1.appendQuadraticCurve(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy);
        px = cx + a[0];
        py = cy + a[1];
        cx += a[2];
        cy += a[3];
        return cmd;
      },
      T: function(a) {
        if (px === null || py === null) {
          px = cx;
          py = cy;
        } else {
          px = cx - (px - cx);
          py = cy - (py - cy);
        }
        var cmd = operators_1.appendQuadraticCurve(px, py, a[0], a[1]);
        px = cx - (px - cx);
        py = cy - (py - cy);
        cx = a[0];
        cy = a[1];
        return cmd;
      },
      t: function(a) {
        if (px === null || py === null) {
          px = cx;
          py = cy;
        } else {
          px = cx - (px - cx);
          py = cy - (py - cy);
        }
        var cmd = operators_1.appendQuadraticCurve(px, py, cx + a[0], cy + a[1]);
        cx += a[0];
        cy += a[1];
        return cmd;
      },
      A: function(a) {
        var cmds = solveArc(cx, cy, a);
        cx = a[5];
        cy = a[6];
        return cmds;
      },
      a: function(a) {
        a[5] += cx;
        a[6] += cy;
        var cmds = solveArc(cx, cy, a);
        cx = a[5];
        cy = a[6];
        return cmds;
      },
      L: function(a) {
        cx = a[0];
        cy = a[1];
        px = py = null;
        return operators_1.lineTo(cx, cy);
      },
      l: function(a) {
        cx += a[0];
        cy += a[1];
        px = py = null;
        return operators_1.lineTo(cx, cy);
      },
      H: function(a) {
        cx = a[0];
        px = py = null;
        return operators_1.lineTo(cx, cy);
      },
      h: function(a) {
        cx += a[0];
        px = py = null;
        return operators_1.lineTo(cx, cy);
      },
      V: function(a) {
        cy = a[0];
        px = py = null;
        return operators_1.lineTo(cx, cy);
      },
      v: function(a) {
        cy += a[0];
        px = py = null;
        return operators_1.lineTo(cx, cy);
      },
      Z: function() {
        var cmd = operators_1.closePath();
        cx = sx;
        cy = sy;
        return cmd;
      },
      z: function() {
        var cmd = operators_1.closePath();
        cx = sx;
        cy = sy;
        return cmd;
      }
    };
    var solveArc = function(x, y, coords) {
      var rx = coords[0], ry = coords[1], rot = coords[2], large = coords[3], sweep = coords[4], ex = coords[5], ey = coords[6];
      var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);
      var cmds = [];
      for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {
        var seg = segs_1[_i];
        var bez = segmentToBezier.apply(void 0, seg);
        cmds.push(operators_1.appendBezierCurve.apply(void 0, bez));
      }
      return cmds;
    };
    var arcToSegments = function(x, y, rx, ry, large, sweep, rotateX, ox, oy) {
      var th = rotateX * (Math.PI / 180);
      var sinTh = Math.sin(th);
      var cosTh = Math.cos(th);
      rx = Math.abs(rx);
      ry = Math.abs(ry);
      px = cosTh * (ox - x) * 0.5 + sinTh * (oy - y) * 0.5;
      py = cosTh * (oy - y) * 0.5 - sinTh * (ox - x) * 0.5;
      var pl = px * px / (rx * rx) + py * py / (ry * ry);
      if (pl > 1) {
        pl = Math.sqrt(pl);
        rx *= pl;
        ry *= pl;
      }
      var a00 = cosTh / rx;
      var a01 = sinTh / rx;
      var a10 = -sinTh / ry;
      var a11 = cosTh / ry;
      var x0 = a00 * ox + a01 * oy;
      var y0 = a10 * ox + a11 * oy;
      var x1 = a00 * x + a01 * y;
      var y1 = a10 * x + a11 * y;
      var d = (x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0);
      var sfactorSq = 1 / d - 0.25;
      if (sfactorSq < 0) {
        sfactorSq = 0;
      }
      var sfactor = Math.sqrt(sfactorSq);
      if (sweep === large) {
        sfactor = -sfactor;
      }
      var xc = 0.5 * (x0 + x1) - sfactor * (y1 - y0);
      var yc = 0.5 * (y0 + y1) + sfactor * (x1 - x0);
      var th0 = Math.atan2(y0 - yc, x0 - xc);
      var th1 = Math.atan2(y1 - yc, x1 - xc);
      var thArc = th1 - th0;
      if (thArc < 0 && sweep === 1) {
        thArc += 2 * Math.PI;
      } else if (thArc > 0 && sweep === 0) {
        thArc -= 2 * Math.PI;
      }
      var segments = Math.ceil(Math.abs(thArc / (Math.PI * 0.5 + 1e-3)));
      var result = [];
      for (var i = 0; i < segments; i++) {
        var th2 = th0 + i * thArc / segments;
        var th3 = th0 + (i + 1) * thArc / segments;
        result[i] = [xc, yc, th2, th3, rx, ry, sinTh, cosTh];
      }
      return result;
    };
    var segmentToBezier = function(cx1, cy1, th0, th1, rx, ry, sinTh, cosTh) {
      var a00 = cosTh * rx;
      var a01 = -sinTh * ry;
      var a10 = sinTh * rx;
      var a11 = cosTh * ry;
      var thHalf = 0.5 * (th1 - th0);
      var t = 8 / 3 * Math.sin(thHalf * 0.5) * Math.sin(thHalf * 0.5) / Math.sin(thHalf);
      var x1 = cx1 + Math.cos(th0) - t * Math.sin(th0);
      var y1 = cy1 + Math.sin(th0) + t * Math.cos(th0);
      var x3 = cx1 + Math.cos(th1);
      var y3 = cy1 + Math.sin(th1);
      var x2 = x3 + t * Math.sin(th1);
      var y2 = y3 - t * Math.cos(th1);
      var result = [
        a00 * x1 + a01 * y1,
        a10 * x1 + a11 * y1,
        a00 * x2 + a01 * y2,
        a10 * x2 + a11 * y2,
        a00 * x3 + a01 * y3,
        a10 * x3 + a11 * y3
      ];
      return result;
    };
    exports.svgPathToOperators = function(path2) {
      return apply(parse(path2));
    };
  }
});

// node_modules/pdf-lib/cjs/api/operations.js
var require_operations = __commonJS({
  "node_modules/pdf-lib/cjs/api/operations.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.drawOptionList = exports.drawTextField = exports.drawTextLines = exports.drawButton = exports.drawRadioButton = exports.drawCheckBox = exports.rotateInPlace = exports.drawCheckMark = exports.drawSvgPath = exports.drawEllipse = exports.drawEllipsePath = exports.drawRectangle = exports.drawLine = exports.drawPage = exports.drawImage = exports.drawLinesOfText = exports.drawText = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var colors_1 = require_colors();
    var operators_1 = require_operators();
    var rotations_1 = require_rotations();
    var svgPath_1 = require_svgPath();
    var objects_1 = require_objects2();
    exports.drawText = function(line, options) {
      return [
        operators_1.pushGraphicsState(),
        options.graphicsState && operators_1.setGraphicsState(options.graphicsState),
        operators_1.beginText(),
        colors_1.setFillingColor(options.color),
        operators_1.setFontAndSize(options.font, options.size),
        operators_1.rotateAndSkewTextRadiansAndTranslate(rotations_1.toRadians(options.rotate), rotations_1.toRadians(options.xSkew), rotations_1.toRadians(options.ySkew), options.x, options.y),
        operators_1.showText(line),
        operators_1.endText(),
        operators_1.popGraphicsState()
      ].filter(Boolean);
    };
    exports.drawLinesOfText = function(lines, options) {
      var operators = [
        operators_1.pushGraphicsState(),
        options.graphicsState && operators_1.setGraphicsState(options.graphicsState),
        operators_1.beginText(),
        colors_1.setFillingColor(options.color),
        operators_1.setFontAndSize(options.font, options.size),
        operators_1.setLineHeight(options.lineHeight),
        operators_1.rotateAndSkewTextRadiansAndTranslate(rotations_1.toRadians(options.rotate), rotations_1.toRadians(options.xSkew), rotations_1.toRadians(options.ySkew), options.x, options.y)
      ].filter(Boolean);
      for (var idx = 0, len = lines.length; idx < len; idx++) {
        operators.push(operators_1.showText(lines[idx]), operators_1.nextLine());
      }
      operators.push(operators_1.endText(), operators_1.popGraphicsState());
      return operators;
    };
    exports.drawImage = function(name, options) {
      return [
        operators_1.pushGraphicsState(),
        options.graphicsState && operators_1.setGraphicsState(options.graphicsState),
        operators_1.translate(options.x, options.y),
        operators_1.rotateRadians(rotations_1.toRadians(options.rotate)),
        operators_1.scale(options.width, options.height),
        operators_1.skewRadians(rotations_1.toRadians(options.xSkew), rotations_1.toRadians(options.ySkew)),
        operators_1.drawObject(name),
        operators_1.popGraphicsState()
      ].filter(Boolean);
    };
    exports.drawPage = function(name, options) {
      return [
        operators_1.pushGraphicsState(),
        options.graphicsState && operators_1.setGraphicsState(options.graphicsState),
        operators_1.translate(options.x, options.y),
        operators_1.rotateRadians(rotations_1.toRadians(options.rotate)),
        operators_1.scale(options.xScale, options.yScale),
        operators_1.skewRadians(rotations_1.toRadians(options.xSkew), rotations_1.toRadians(options.ySkew)),
        operators_1.drawObject(name),
        operators_1.popGraphicsState()
      ].filter(Boolean);
    };
    exports.drawLine = function(options) {
      var _a, _b;
      return [
        operators_1.pushGraphicsState(),
        options.graphicsState && operators_1.setGraphicsState(options.graphicsState),
        options.color && colors_1.setStrokingColor(options.color),
        operators_1.setLineWidth(options.thickness),
        operators_1.setDashPattern((_a = options.dashArray) !== null && _a !== void 0 ? _a : [], (_b = options.dashPhase) !== null && _b !== void 0 ? _b : 0),
        operators_1.moveTo(options.start.x, options.start.y),
        options.lineCap && operators_1.setLineCap(options.lineCap),
        operators_1.moveTo(options.start.x, options.start.y),
        operators_1.lineTo(options.end.x, options.end.y),
        operators_1.stroke(),
        operators_1.popGraphicsState()
      ].filter(Boolean);
    };
    exports.drawRectangle = function(options) {
      var _a, _b;
      return [
        operators_1.pushGraphicsState(),
        options.graphicsState && operators_1.setGraphicsState(options.graphicsState),
        options.color && colors_1.setFillingColor(options.color),
        options.borderColor && colors_1.setStrokingColor(options.borderColor),
        operators_1.setLineWidth(options.borderWidth),
        options.borderLineCap && operators_1.setLineCap(options.borderLineCap),
        operators_1.setDashPattern((_a = options.borderDashArray) !== null && _a !== void 0 ? _a : [], (_b = options.borderDashPhase) !== null && _b !== void 0 ? _b : 0),
        operators_1.translate(options.x, options.y),
        operators_1.rotateRadians(rotations_1.toRadians(options.rotate)),
        operators_1.skewRadians(rotations_1.toRadians(options.xSkew), rotations_1.toRadians(options.ySkew)),
        operators_1.moveTo(0, 0),
        operators_1.lineTo(0, options.height),
        operators_1.lineTo(options.width, options.height),
        operators_1.lineTo(options.width, 0),
        operators_1.closePath(),
        // prettier-ignore
        options.color && options.borderWidth ? operators_1.fillAndStroke() : options.color ? operators_1.fill() : options.borderColor ? operators_1.stroke() : operators_1.closePath(),
        operators_1.popGraphicsState()
      ].filter(Boolean);
    };
    var KAPPA = 4 * ((Math.sqrt(2) - 1) / 3);
    exports.drawEllipsePath = function(config) {
      var x = objects_1.asNumber(config.x);
      var y = objects_1.asNumber(config.y);
      var xScale = objects_1.asNumber(config.xScale);
      var yScale = objects_1.asNumber(config.yScale);
      x -= xScale;
      y -= yScale;
      var ox = xScale * KAPPA;
      var oy = yScale * KAPPA;
      var xe = x + xScale * 2;
      var ye = y + yScale * 2;
      var xm = x + xScale;
      var ym = y + yScale;
      return [
        operators_1.pushGraphicsState(),
        operators_1.moveTo(x, ym),
        operators_1.appendBezierCurve(x, ym - oy, xm - ox, y, xm, y),
        operators_1.appendBezierCurve(xm + ox, y, xe, ym - oy, xe, ym),
        operators_1.appendBezierCurve(xe, ym + oy, xm + ox, ye, xm, ye),
        operators_1.appendBezierCurve(xm - ox, ye, x, ym + oy, x, ym),
        operators_1.popGraphicsState()
      ];
    };
    var drawEllipseCurves = function(config) {
      var centerX = objects_1.asNumber(config.x);
      var centerY = objects_1.asNumber(config.y);
      var xScale = objects_1.asNumber(config.xScale);
      var yScale = objects_1.asNumber(config.yScale);
      var x = -xScale;
      var y = -yScale;
      var ox = xScale * KAPPA;
      var oy = yScale * KAPPA;
      var xe = x + xScale * 2;
      var ye = y + yScale * 2;
      var xm = x + xScale;
      var ym = y + yScale;
      return [
        operators_1.translate(centerX, centerY),
        operators_1.rotateRadians(rotations_1.toRadians(config.rotate)),
        operators_1.moveTo(x, ym),
        operators_1.appendBezierCurve(x, ym - oy, xm - ox, y, xm, y),
        operators_1.appendBezierCurve(xm + ox, y, xe, ym - oy, xe, ym),
        operators_1.appendBezierCurve(xe, ym + oy, xm + ox, ye, xm, ye),
        operators_1.appendBezierCurve(xm - ox, ye, x, ym + oy, x, ym)
      ];
    };
    exports.drawEllipse = function(options) {
      var _a, _b, _c;
      return tslib_1.__spreadArrays([
        operators_1.pushGraphicsState(),
        options.graphicsState && operators_1.setGraphicsState(options.graphicsState),
        options.color && colors_1.setFillingColor(options.color),
        options.borderColor && colors_1.setStrokingColor(options.borderColor),
        operators_1.setLineWidth(options.borderWidth),
        options.borderLineCap && operators_1.setLineCap(options.borderLineCap),
        operators_1.setDashPattern((_a = options.borderDashArray) !== null && _a !== void 0 ? _a : [], (_b = options.borderDashPhase) !== null && _b !== void 0 ? _b : 0)
      ], options.rotate === void 0 ? exports.drawEllipsePath({
        x: options.x,
        y: options.y,
        xScale: options.xScale,
        yScale: options.yScale
      }) : drawEllipseCurves({
        x: options.x,
        y: options.y,
        xScale: options.xScale,
        yScale: options.yScale,
        rotate: (_c = options.rotate) !== null && _c !== void 0 ? _c : rotations_1.degrees(0)
      }), [
        // prettier-ignore
        options.color && options.borderWidth ? operators_1.fillAndStroke() : options.color ? operators_1.fill() : options.borderColor ? operators_1.stroke() : operators_1.closePath(),
        operators_1.popGraphicsState()
      ]).filter(Boolean);
    };
    exports.drawSvgPath = function(path2, options) {
      var _a, _b, _c;
      return tslib_1.__spreadArrays([
        operators_1.pushGraphicsState(),
        options.graphicsState && operators_1.setGraphicsState(options.graphicsState),
        operators_1.translate(options.x, options.y),
        operators_1.rotateRadians(rotations_1.toRadians((_a = options.rotate) !== null && _a !== void 0 ? _a : rotations_1.degrees(0))),
        // SVG path Y axis is opposite pdf-lib's
        options.scale ? operators_1.scale(options.scale, -options.scale) : operators_1.scale(1, -1),
        options.color && colors_1.setFillingColor(options.color),
        options.borderColor && colors_1.setStrokingColor(options.borderColor),
        options.borderWidth && operators_1.setLineWidth(options.borderWidth),
        options.borderLineCap && operators_1.setLineCap(options.borderLineCap),
        operators_1.setDashPattern((_b = options.borderDashArray) !== null && _b !== void 0 ? _b : [], (_c = options.borderDashPhase) !== null && _c !== void 0 ? _c : 0)
      ], svgPath_1.svgPathToOperators(path2), [
        // prettier-ignore
        options.color && options.borderWidth ? operators_1.fillAndStroke() : options.color ? operators_1.fill() : options.borderColor ? operators_1.stroke() : operators_1.closePath(),
        operators_1.popGraphicsState()
      ]).filter(Boolean);
    };
    exports.drawCheckMark = function(options) {
      var size = objects_1.asNumber(options.size);
      var p2x = -1 + 0.75;
      var p2y = -1 + 0.51;
      var p3y = 1 - 0.525;
      var p3x = 1 - 0.31;
      var p1x = -1 + 0.325;
      var p1y = -((p1x - p2x) * (p3x - p2x)) / (p3y - p2y) + p2y;
      return [
        operators_1.pushGraphicsState(),
        options.color && colors_1.setStrokingColor(options.color),
        operators_1.setLineWidth(options.thickness),
        operators_1.translate(options.x, options.y),
        operators_1.moveTo(p1x * size, p1y * size),
        operators_1.lineTo(p2x * size, p2y * size),
        operators_1.lineTo(p3x * size, p3y * size),
        operators_1.stroke(),
        operators_1.popGraphicsState()
      ].filter(Boolean);
    };
    exports.rotateInPlace = function(options) {
      return options.rotation === 0 ? [
        operators_1.translate(0, 0),
        operators_1.rotateDegrees(0)
      ] : options.rotation === 90 ? [
        operators_1.translate(options.width, 0),
        operators_1.rotateDegrees(90)
      ] : options.rotation === 180 ? [
        operators_1.translate(options.width, options.height),
        operators_1.rotateDegrees(180)
      ] : options.rotation === 270 ? [
        operators_1.translate(0, options.height),
        operators_1.rotateDegrees(270)
      ] : [];
    };
    exports.drawCheckBox = function(options) {
      var outline = exports.drawRectangle({
        x: options.x,
        y: options.y,
        width: options.width,
        height: options.height,
        borderWidth: options.borderWidth,
        color: options.color,
        borderColor: options.borderColor,
        rotate: rotations_1.degrees(0),
        xSkew: rotations_1.degrees(0),
        ySkew: rotations_1.degrees(0)
      });
      if (!options.filled)
        return outline;
      var width = objects_1.asNumber(options.width);
      var height = objects_1.asNumber(options.height);
      var checkMarkSize = Math.min(width, height) / 2;
      var checkMark = exports.drawCheckMark({
        x: width / 2,
        y: height / 2,
        size: checkMarkSize,
        thickness: options.thickness,
        color: options.markColor
      });
      return tslib_1.__spreadArrays([operators_1.pushGraphicsState()], outline, checkMark, [operators_1.popGraphicsState()]);
    };
    exports.drawRadioButton = function(options) {
      var width = objects_1.asNumber(options.width);
      var height = objects_1.asNumber(options.height);
      var outlineScale = Math.min(width, height) / 2;
      var outline = exports.drawEllipse({
        x: options.x,
        y: options.y,
        xScale: outlineScale,
        yScale: outlineScale,
        color: options.color,
        borderColor: options.borderColor,
        borderWidth: options.borderWidth
      });
      if (!options.filled)
        return outline;
      var dot = exports.drawEllipse({
        x: options.x,
        y: options.y,
        xScale: outlineScale * 0.45,
        yScale: outlineScale * 0.45,
        color: options.dotColor,
        borderColor: void 0,
        borderWidth: 0
      });
      return tslib_1.__spreadArrays([operators_1.pushGraphicsState()], outline, dot, [operators_1.popGraphicsState()]);
    };
    exports.drawButton = function(options) {
      var x = objects_1.asNumber(options.x);
      var y = objects_1.asNumber(options.y);
      var width = objects_1.asNumber(options.width);
      var height = objects_1.asNumber(options.height);
      var background = exports.drawRectangle({
        x,
        y,
        width,
        height,
        borderWidth: options.borderWidth,
        color: options.color,
        borderColor: options.borderColor,
        rotate: rotations_1.degrees(0),
        xSkew: rotations_1.degrees(0),
        ySkew: rotations_1.degrees(0)
      });
      var lines = exports.drawTextLines(options.textLines, {
        color: options.textColor,
        font: options.font,
        size: options.fontSize,
        rotate: rotations_1.degrees(0),
        xSkew: rotations_1.degrees(0),
        ySkew: rotations_1.degrees(0)
      });
      return tslib_1.__spreadArrays([operators_1.pushGraphicsState()], background, lines, [operators_1.popGraphicsState()]);
    };
    exports.drawTextLines = function(lines, options) {
      var operators = [
        operators_1.beginText(),
        colors_1.setFillingColor(options.color),
        operators_1.setFontAndSize(options.font, options.size)
      ];
      for (var idx = 0, len = lines.length; idx < len; idx++) {
        var _a = lines[idx], encoded = _a.encoded, x = _a.x, y = _a.y;
        operators.push(operators_1.rotateAndSkewTextRadiansAndTranslate(rotations_1.toRadians(options.rotate), rotations_1.toRadians(options.xSkew), rotations_1.toRadians(options.ySkew), x, y), operators_1.showText(encoded));
      }
      operators.push(operators_1.endText());
      return operators;
    };
    exports.drawTextField = function(options) {
      var x = objects_1.asNumber(options.x);
      var y = objects_1.asNumber(options.y);
      var width = objects_1.asNumber(options.width);
      var height = objects_1.asNumber(options.height);
      var borderWidth = objects_1.asNumber(options.borderWidth);
      var padding = objects_1.asNumber(options.padding);
      var clipX = x + borderWidth / 2 + padding;
      var clipY = y + borderWidth / 2 + padding;
      var clipWidth = width - (borderWidth / 2 + padding) * 2;
      var clipHeight = height - (borderWidth / 2 + padding) * 2;
      var clippingArea = [
        operators_1.moveTo(clipX, clipY),
        operators_1.lineTo(clipX, clipY + clipHeight),
        operators_1.lineTo(clipX + clipWidth, clipY + clipHeight),
        operators_1.lineTo(clipX + clipWidth, clipY),
        operators_1.closePath(),
        operators_1.clip(),
        operators_1.endPath()
      ];
      var background = exports.drawRectangle({
        x,
        y,
        width,
        height,
        borderWidth: options.borderWidth,
        color: options.color,
        borderColor: options.borderColor,
        rotate: rotations_1.degrees(0),
        xSkew: rotations_1.degrees(0),
        ySkew: rotations_1.degrees(0)
      });
      var lines = exports.drawTextLines(options.textLines, {
        color: options.textColor,
        font: options.font,
        size: options.fontSize,
        rotate: rotations_1.degrees(0),
        xSkew: rotations_1.degrees(0),
        ySkew: rotations_1.degrees(0)
      });
      var markedContent = tslib_1.__spreadArrays([
        operators_1.beginMarkedContent("Tx"),
        operators_1.pushGraphicsState()
      ], lines, [
        operators_1.popGraphicsState(),
        operators_1.endMarkedContent()
      ]);
      return tslib_1.__spreadArrays([
        operators_1.pushGraphicsState()
      ], background, clippingArea, markedContent, [
        operators_1.popGraphicsState()
      ]);
    };
    exports.drawOptionList = function(options) {
      var x = objects_1.asNumber(options.x);
      var y = objects_1.asNumber(options.y);
      var width = objects_1.asNumber(options.width);
      var height = objects_1.asNumber(options.height);
      var lineHeight = objects_1.asNumber(options.lineHeight);
      var borderWidth = objects_1.asNumber(options.borderWidth);
      var padding = objects_1.asNumber(options.padding);
      var clipX = x + borderWidth / 2 + padding;
      var clipY = y + borderWidth / 2 + padding;
      var clipWidth = width - (borderWidth / 2 + padding) * 2;
      var clipHeight = height - (borderWidth / 2 + padding) * 2;
      var clippingArea = [
        operators_1.moveTo(clipX, clipY),
        operators_1.lineTo(clipX, clipY + clipHeight),
        operators_1.lineTo(clipX + clipWidth, clipY + clipHeight),
        operators_1.lineTo(clipX + clipWidth, clipY),
        operators_1.closePath(),
        operators_1.clip(),
        operators_1.endPath()
      ];
      var background = exports.drawRectangle({
        x,
        y,
        width,
        height,
        borderWidth: options.borderWidth,
        color: options.color,
        borderColor: options.borderColor,
        rotate: rotations_1.degrees(0),
        xSkew: rotations_1.degrees(0),
        ySkew: rotations_1.degrees(0)
      });
      var highlights = [];
      for (var idx = 0, len = options.selectedLines.length; idx < len; idx++) {
        var line = options.textLines[options.selectedLines[idx]];
        highlights.push.apply(highlights, exports.drawRectangle({
          x: line.x - padding,
          y: line.y - (lineHeight - line.height) / 2,
          width: width - borderWidth,
          height: line.height + (lineHeight - line.height) / 2,
          borderWidth: 0,
          color: options.selectedColor,
          borderColor: void 0,
          rotate: rotations_1.degrees(0),
          xSkew: rotations_1.degrees(0),
          ySkew: rotations_1.degrees(0)
        }));
      }
      var lines = exports.drawTextLines(options.textLines, {
        color: options.textColor,
        font: options.font,
        size: options.fontSize,
        rotate: rotations_1.degrees(0),
        xSkew: rotations_1.degrees(0),
        ySkew: rotations_1.degrees(0)
      });
      var markedContent = tslib_1.__spreadArrays([
        operators_1.beginMarkedContent("Tx"),
        operators_1.pushGraphicsState()
      ], lines, [
        operators_1.popGraphicsState(),
        operators_1.endMarkedContent()
      ]);
      return tslib_1.__spreadArrays([
        operators_1.pushGraphicsState()
      ], background, highlights, clippingArea, markedContent, [
        operators_1.popGraphicsState()
      ]);
    };
  }
});

// node_modules/pdf-lib/cjs/api/errors.js
var require_errors3 = __commonJS({
  "node_modules/pdf-lib/cjs/api/errors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.InvalidMaxLengthError = exports.ExceededMaxLengthError = exports.CombedTextLayoutError = exports.RichTextFieldReadError = exports.FieldExistsAsNonTerminalError = exports.InvalidFieldNamePartError = exports.FieldAlreadyExistsError = exports.MissingOnValueCheckError = exports.UnexpectedFieldTypeError = exports.NoSuchFieldError = exports.RemovePageFromEmptyDocumentError = exports.ForeignPageError = exports.FontkitNotRegisteredError = exports.EncryptedPDFError = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var EncryptedPDFError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(EncryptedPDFError2, _super);
        function EncryptedPDFError2() {
          var _this = this;
          var msg = "Input document to `PDFDocument.load` is encrypted. You can use `PDFDocument.load(..., { ignoreEncryption: true })` if you wish to load the document anyways.";
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return EncryptedPDFError2;
      }(Error)
    );
    exports.EncryptedPDFError = EncryptedPDFError;
    var FontkitNotRegisteredError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(FontkitNotRegisteredError2, _super);
        function FontkitNotRegisteredError2() {
          var _this = this;
          var msg = "Input to `PDFDocument.embedFont` was a custom font, but no `fontkit` instance was found. You must register a `fontkit` instance with `PDFDocument.registerFontkit(...)` before embedding custom fonts.";
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return FontkitNotRegisteredError2;
      }(Error)
    );
    exports.FontkitNotRegisteredError = FontkitNotRegisteredError;
    var ForeignPageError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(ForeignPageError2, _super);
        function ForeignPageError2() {
          var _this = this;
          var msg = "A `page` passed to `PDFDocument.addPage` or `PDFDocument.insertPage` was from a different (foreign) PDF document. If you want to copy pages from one PDFDocument to another, you must use `PDFDocument.copyPages(...)` to copy the pages before adding or inserting them.";
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return ForeignPageError2;
      }(Error)
    );
    exports.ForeignPageError = ForeignPageError;
    var RemovePageFromEmptyDocumentError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(RemovePageFromEmptyDocumentError2, _super);
        function RemovePageFromEmptyDocumentError2() {
          var _this = this;
          var msg = "PDFDocument has no pages so `PDFDocument.removePage` cannot be called";
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return RemovePageFromEmptyDocumentError2;
      }(Error)
    );
    exports.RemovePageFromEmptyDocumentError = RemovePageFromEmptyDocumentError;
    var NoSuchFieldError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(NoSuchFieldError2, _super);
        function NoSuchFieldError2(name) {
          var _this = this;
          var msg = 'PDFDocument has no form field with the name "' + name + '"';
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return NoSuchFieldError2;
      }(Error)
    );
    exports.NoSuchFieldError = NoSuchFieldError;
    var UnexpectedFieldTypeError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(UnexpectedFieldTypeError2, _super);
        function UnexpectedFieldTypeError2(name, expected, actual) {
          var _a, _b;
          var _this = this;
          var expectedType = expected === null || expected === void 0 ? void 0 : expected.name;
          var actualType = (_b = (_a = actual === null || actual === void 0 ? void 0 : actual.constructor) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : actual;
          var msg = 'Expected field "' + name + '" to be of type ' + expectedType + ", " + ("but it is actually of type " + actualType);
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return UnexpectedFieldTypeError2;
      }(Error)
    );
    exports.UnexpectedFieldTypeError = UnexpectedFieldTypeError;
    var MissingOnValueCheckError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(MissingOnValueCheckError2, _super);
        function MissingOnValueCheckError2(onValue) {
          var _this = this;
          var msg = 'Failed to select check box due to missing onValue: "' + onValue + '"';
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return MissingOnValueCheckError2;
      }(Error)
    );
    exports.MissingOnValueCheckError = MissingOnValueCheckError;
    var FieldAlreadyExistsError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(FieldAlreadyExistsError2, _super);
        function FieldAlreadyExistsError2(name) {
          var _this = this;
          var msg = 'A field already exists with the specified name: "' + name + '"';
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return FieldAlreadyExistsError2;
      }(Error)
    );
    exports.FieldAlreadyExistsError = FieldAlreadyExistsError;
    var InvalidFieldNamePartError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(InvalidFieldNamePartError2, _super);
        function InvalidFieldNamePartError2(namePart) {
          var _this = this;
          var msg = 'Field name contains invalid component: "' + namePart + '"';
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return InvalidFieldNamePartError2;
      }(Error)
    );
    exports.InvalidFieldNamePartError = InvalidFieldNamePartError;
    var FieldExistsAsNonTerminalError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(FieldExistsAsNonTerminalError2, _super);
        function FieldExistsAsNonTerminalError2(name) {
          var _this = this;
          var msg = 'A non-terminal field already exists with the specified name: "' + name + '"';
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return FieldExistsAsNonTerminalError2;
      }(Error)
    );
    exports.FieldExistsAsNonTerminalError = FieldExistsAsNonTerminalError;
    var RichTextFieldReadError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(RichTextFieldReadError2, _super);
        function RichTextFieldReadError2(fieldName) {
          var _this = this;
          var msg = "Reading rich text fields is not supported: Attempted to read rich text field: " + fieldName;
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return RichTextFieldReadError2;
      }(Error)
    );
    exports.RichTextFieldReadError = RichTextFieldReadError;
    var CombedTextLayoutError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(CombedTextLayoutError2, _super);
        function CombedTextLayoutError2(lineLength, cellCount) {
          var _this = this;
          var msg = "Failed to layout combed text as lineLength=" + lineLength + " is greater than cellCount=" + cellCount;
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return CombedTextLayoutError2;
      }(Error)
    );
    exports.CombedTextLayoutError = CombedTextLayoutError;
    var ExceededMaxLengthError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(ExceededMaxLengthError2, _super);
        function ExceededMaxLengthError2(textLength, maxLength, name) {
          var _this = this;
          var msg = "Attempted to set text with length=" + textLength + " for TextField with maxLength=" + maxLength + " and name=" + name;
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return ExceededMaxLengthError2;
      }(Error)
    );
    exports.ExceededMaxLengthError = ExceededMaxLengthError;
    var InvalidMaxLengthError = (
      /** @class */
      function(_super) {
        tslib_1.__extends(InvalidMaxLengthError2, _super);
        function InvalidMaxLengthError2(textLength, maxLength, name) {
          var _this = this;
          var msg = "Attempted to set maxLength=" + maxLength + ", which is less than " + textLength + ", the length of this field's current value (name=" + name + ")";
          _this = _super.call(this, msg) || this;
          return _this;
        }
        return InvalidMaxLengthError2;
      }(Error)
    );
    exports.InvalidMaxLengthError = InvalidMaxLengthError;
  }
});

// node_modules/pdf-lib/cjs/api/text/alignment.js
var require_alignment = __commonJS({
  "node_modules/pdf-lib/cjs/api/text/alignment.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TextAlignment = void 0;
    var TextAlignment;
    (function(TextAlignment2) {
      TextAlignment2[TextAlignment2["Left"] = 0] = "Left";
      TextAlignment2[TextAlignment2["Center"] = 1] = "Center";
      TextAlignment2[TextAlignment2["Right"] = 2] = "Right";
    })(TextAlignment = exports.TextAlignment || (exports.TextAlignment = {}));
  }
});

// node_modules/pdf-lib/cjs/api/text/layout.js
var require_layout = __commonJS({
  "node_modules/pdf-lib/cjs/api/text/layout.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.layoutSinglelineText = exports.layoutCombedText = exports.layoutMultilineText = void 0;
    var errors_1 = require_errors3();
    var alignment_1 = require_alignment();
    var utils_1 = require_utils2();
    var MIN_FONT_SIZE = 4;
    var MAX_FONT_SIZE = 500;
    var computeFontSize = function(lines, font, bounds, multiline) {
      if (multiline === void 0) {
        multiline = false;
      }
      var fontSize = MIN_FONT_SIZE;
      while (fontSize < MAX_FONT_SIZE) {
        var linesUsed = 0;
        for (var lineIdx = 0, lineLen = lines.length; lineIdx < lineLen; lineIdx++) {
          linesUsed += 1;
          var line = lines[lineIdx];
          var words = line.split(" ");
          var spaceInLineRemaining = bounds.width;
          for (var idx = 0, len = words.length; idx < len; idx++) {
            var isLastWord = idx === len - 1;
            var word = isLastWord ? words[idx] : words[idx] + " ";
            var widthOfWord = font.widthOfTextAtSize(word, fontSize);
            spaceInLineRemaining -= widthOfWord;
            if (spaceInLineRemaining <= 0) {
              linesUsed += 1;
              spaceInLineRemaining = bounds.width - widthOfWord;
            }
          }
        }
        if (!multiline && linesUsed > lines.length)
          return fontSize - 1;
        var height = font.heightAtSize(fontSize);
        var lineHeight = height + height * 0.2;
        var totalHeight = lineHeight * linesUsed;
        if (totalHeight > Math.abs(bounds.height))
          return fontSize - 1;
        fontSize += 1;
      }
      return fontSize;
    };
    var computeCombedFontSize = function(line, font, bounds, cellCount) {
      var cellWidth = bounds.width / cellCount;
      var cellHeight = bounds.height;
      var fontSize = MIN_FONT_SIZE;
      var chars = utils_1.charSplit(line);
      while (fontSize < MAX_FONT_SIZE) {
        for (var idx = 0, len = chars.length; idx < len; idx++) {
          var c = chars[idx];
          var tooLong = font.widthOfTextAtSize(c, fontSize) > cellWidth * 0.75;
          if (tooLong)
            return fontSize - 1;
        }
        var height = font.heightAtSize(fontSize, { descender: false });
        if (height > cellHeight)
          return fontSize - 1;
        fontSize += 1;
      }
      return fontSize;
    };
    var lastIndexOfWhitespace = function(line) {
      for (var idx = line.length; idx > 0; idx--) {
        if (/\s/.test(line[idx]))
          return idx;
      }
      return void 0;
    };
    var splitOutLines = function(input, maxWidth, font, fontSize) {
      var _a;
      var lastWhitespaceIdx = input.length;
      while (lastWhitespaceIdx > 0) {
        var line = input.substring(0, lastWhitespaceIdx);
        var encoded = font.encodeText(line);
        var width = font.widthOfTextAtSize(line, fontSize);
        if (width < maxWidth) {
          var remainder = input.substring(lastWhitespaceIdx) || void 0;
          return { line, encoded, width, remainder };
        }
        lastWhitespaceIdx = (_a = lastIndexOfWhitespace(line)) !== null && _a !== void 0 ? _a : 0;
      }
      return {
        line: input,
        encoded: font.encodeText(input),
        width: font.widthOfTextAtSize(input, fontSize),
        remainder: void 0
      };
    };
    exports.layoutMultilineText = function(text, _a) {
      var alignment = _a.alignment, fontSize = _a.fontSize, font = _a.font, bounds = _a.bounds;
      var lines = utils_1.lineSplit(utils_1.cleanText(text));
      if (fontSize === void 0 || fontSize === 0) {
        fontSize = computeFontSize(lines, font, bounds, true);
      }
      var height = font.heightAtSize(fontSize);
      var lineHeight = height + height * 0.2;
      var textLines = [];
      var minX = bounds.x;
      var minY = bounds.y;
      var maxX = bounds.x + bounds.width;
      var maxY = bounds.y + bounds.height;
      var y = bounds.y + bounds.height;
      for (var idx = 0, len = lines.length; idx < len; idx++) {
        var prevRemainder = lines[idx];
        while (prevRemainder !== void 0) {
          var _b = splitOutLines(prevRemainder, bounds.width, font, fontSize), line = _b.line, encoded = _b.encoded, width = _b.width, remainder = _b.remainder;
          var x = alignment === alignment_1.TextAlignment.Left ? bounds.x : alignment === alignment_1.TextAlignment.Center ? bounds.x + bounds.width / 2 - width / 2 : alignment === alignment_1.TextAlignment.Right ? bounds.x + bounds.width - width : bounds.x;
          y -= lineHeight;
          if (x < minX)
            minX = x;
          if (y < minY)
            minY = y;
          if (x + width > maxX)
            maxX = x + width;
          if (y + height > maxY)
            maxY = y + height;
          textLines.push({ text: line, encoded, width, height, x, y });
          prevRemainder = remainder === null || remainder === void 0 ? void 0 : remainder.trim();
        }
      }
      return {
        fontSize,
        lineHeight,
        lines: textLines,
        bounds: {
          x: minX,
          y: minY,
          width: maxX - minX,
          height: maxY - minY
        }
      };
    };
    exports.layoutCombedText = function(text, _a) {
      var fontSize = _a.fontSize, font = _a.font, bounds = _a.bounds, cellCount = _a.cellCount;
      var line = utils_1.mergeLines(utils_1.cleanText(text));
      if (line.length > cellCount) {
        throw new errors_1.CombedTextLayoutError(line.length, cellCount);
      }
      if (fontSize === void 0 || fontSize === 0) {
        fontSize = computeCombedFontSize(line, font, bounds, cellCount);
      }
      var cellWidth = bounds.width / cellCount;
      var height = font.heightAtSize(fontSize, { descender: false });
      var y = bounds.y + (bounds.height / 2 - height / 2);
      var cells = [];
      var minX = bounds.x;
      var minY = bounds.y;
      var maxX = bounds.x + bounds.width;
      var maxY = bounds.y + bounds.height;
      var cellOffset = 0;
      var charOffset = 0;
      while (cellOffset < cellCount) {
        var _b = utils_1.charAtIndex(line, charOffset), char = _b[0], charLength = _b[1];
        var encoded = font.encodeText(char);
        var width = font.widthOfTextAtSize(char, fontSize);
        var cellCenter = bounds.x + (cellWidth * cellOffset + cellWidth / 2);
        var x = cellCenter - width / 2;
        if (x < minX)
          minX = x;
        if (y < minY)
          minY = y;
        if (x + width > maxX)
          maxX = x + width;
        if (y + height > maxY)
          maxY = y + height;
        cells.push({ text: line, encoded, width, height, x, y });
        cellOffset += 1;
        charOffset += charLength;
      }
      return {
        fontSize,
        cells,
        bounds: {
          x: minX,
          y: minY,
          width: maxX - minX,
          height: maxY - minY
        }
      };
    };
    exports.layoutSinglelineText = function(text, _a) {
      var alignment = _a.alignment, fontSize = _a.fontSize, font = _a.font, bounds = _a.bounds;
      var line = utils_1.mergeLines(utils_1.cleanText(text));
      if (fontSize === void 0 || fontSize === 0) {
        fontSize = computeFontSize([line], font, bounds);
      }
      var encoded = font.encodeText(line);
      var width = font.widthOfTextAtSize(line, fontSize);
      var height = font.heightAtSize(fontSize, { descender: false });
      var x = alignment === alignment_1.TextAlignment.Left ? bounds.x : alignment === alignment_1.TextAlignment.Center ? bounds.x + bounds.width / 2 - width / 2 : alignment === alignment_1.TextAlignment.Right ? bounds.x + bounds.width - width : bounds.x;
      var y = bounds.y + (bounds.height / 2 - height / 2);
      return {
        fontSize,
        line: { text: line, encoded, width, height, x, y },
        bounds: { x, y, width, height }
      };
    };
  }
});

// node_modules/pdf-lib/cjs/api/form/appearances.js
var require_appearances = __commonJS({
  "node_modules/pdf-lib/cjs/api/form/appearances.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.defaultOptionListAppearanceProvider = exports.defaultDropdownAppearanceProvider = exports.defaultTextFieldAppearanceProvider = exports.defaultButtonAppearanceProvider = exports.defaultRadioGroupAppearanceProvider = exports.defaultCheckBoxAppearanceProvider = exports.normalizeAppearance = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var operations_1 = require_operations();
    var colors_1 = require_colors();
    var rotations_1 = require_rotations();
    var layout_1 = require_layout();
    var alignment_1 = require_alignment();
    var operators_1 = require_operators();
    var utils_1 = require_utils2();
    exports.normalizeAppearance = function(appearance) {
      if ("normal" in appearance)
        return appearance;
      return { normal: appearance };
    };
    var tfRegex = /\/([^\0\t\n\f\r\ ]+)[\0\t\n\f\r\ ]+(\d*\.\d+|\d+)[\0\t\n\f\r\ ]+Tf/;
    var getDefaultFontSize = function(field) {
      var _a, _b;
      var da = (_a = field.getDefaultAppearance()) !== null && _a !== void 0 ? _a : "";
      var daMatch = (_b = utils_1.findLastMatch(da, tfRegex).match) !== null && _b !== void 0 ? _b : [];
      var defaultFontSize = Number(daMatch[2]);
      return isFinite(defaultFontSize) ? defaultFontSize : void 0;
    };
    var colorRegex = /(\d*\.\d+|\d+)[\0\t\n\f\r\ ]*(\d*\.\d+|\d+)?[\0\t\n\f\r\ ]*(\d*\.\d+|\d+)?[\0\t\n\f\r\ ]*(\d*\.\d+|\d+)?[\0\t\n\f\r\ ]+(g|rg|k)/;
    var getDefaultColor = function(field) {
      var _a;
      var da = (_a = field.getDefaultAppearance()) !== null && _a !== void 0 ? _a : "";
      var daMatch = utils_1.findLastMatch(da, colorRegex).match;
      var _b = daMatch !== null && daMatch !== void 0 ? daMatch : [], c1 = _b[1], c2 = _b[2], c3 = _b[3], c4 = _b[4], colorSpace = _b[5];
      if (colorSpace === "g" && c1) {
        return colors_1.grayscale(Number(c1));
      }
      if (colorSpace === "rg" && c1 && c2 && c3) {
        return colors_1.rgb(Number(c1), Number(c2), Number(c3));
      }
      if (colorSpace === "k" && c1 && c2 && c3 && c4) {
        return colors_1.cmyk(Number(c1), Number(c2), Number(c3), Number(c4));
      }
      return void 0;
    };
    var updateDefaultAppearance = function(field, color, font, fontSize) {
      var _a;
      if (fontSize === void 0) {
        fontSize = 0;
      }
      var da = [
        colors_1.setFillingColor(color).toString(),
        operators_1.setFontAndSize((_a = font === null || font === void 0 ? void 0 : font.name) !== null && _a !== void 0 ? _a : "dummy__noop", fontSize).toString()
      ].join("\n");
      field.setDefaultAppearance(da);
    };
    exports.defaultCheckBoxAppearanceProvider = function(checkBox, widget) {
      var _a, _b, _c;
      var widgetColor = getDefaultColor(widget);
      var fieldColor = getDefaultColor(checkBox.acroField);
      var rectangle = widget.getRectangle();
      var ap = widget.getAppearanceCharacteristics();
      var bs = widget.getBorderStyle();
      var borderWidth = (_a = bs === null || bs === void 0 ? void 0 : bs.getWidth()) !== null && _a !== void 0 ? _a : 0;
      var rotation = rotations_1.reduceRotation(ap === null || ap === void 0 ? void 0 : ap.getRotation());
      var _d = rotations_1.adjustDimsForRotation(rectangle, rotation), width = _d.width, height = _d.height;
      var rotate = operations_1.rotateInPlace(tslib_1.__assign(tslib_1.__assign({}, rectangle), { rotation }));
      var black = colors_1.rgb(0, 0, 0);
      var borderColor = (_b = colors_1.componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBorderColor())) !== null && _b !== void 0 ? _b : black;
      var normalBackgroundColor = colors_1.componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor());
      var downBackgroundColor = colors_1.componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor(), 0.8);
      var textColor = (_c = widgetColor !== null && widgetColor !== void 0 ? widgetColor : fieldColor) !== null && _c !== void 0 ? _c : black;
      if (widgetColor) {
        updateDefaultAppearance(widget, textColor);
      } else {
        updateDefaultAppearance(checkBox.acroField, textColor);
      }
      var options = {
        x: 0 + borderWidth / 2,
        y: 0 + borderWidth / 2,
        width: width - borderWidth,
        height: height - borderWidth,
        thickness: 1.5,
        borderWidth,
        borderColor,
        markColor: textColor
      };
      return {
        normal: {
          on: tslib_1.__spreadArrays(rotate, operations_1.drawCheckBox(tslib_1.__assign(tslib_1.__assign({}, options), { color: normalBackgroundColor, filled: true }))),
          off: tslib_1.__spreadArrays(rotate, operations_1.drawCheckBox(tslib_1.__assign(tslib_1.__assign({}, options), { color: normalBackgroundColor, filled: false })))
        },
        down: {
          on: tslib_1.__spreadArrays(rotate, operations_1.drawCheckBox(tslib_1.__assign(tslib_1.__assign({}, options), { color: downBackgroundColor, filled: true }))),
          off: tslib_1.__spreadArrays(rotate, operations_1.drawCheckBox(tslib_1.__assign(tslib_1.__assign({}, options), { color: downBackgroundColor, filled: false })))
        }
      };
    };
    exports.defaultRadioGroupAppearanceProvider = function(radioGroup, widget) {
      var _a, _b, _c;
      var widgetColor = getDefaultColor(widget);
      var fieldColor = getDefaultColor(radioGroup.acroField);
      var rectangle = widget.getRectangle();
      var ap = widget.getAppearanceCharacteristics();
      var bs = widget.getBorderStyle();
      var borderWidth = (_a = bs === null || bs === void 0 ? void 0 : bs.getWidth()) !== null && _a !== void 0 ? _a : 0;
      var rotation = rotations_1.reduceRotation(ap === null || ap === void 0 ? void 0 : ap.getRotation());
      var _d = rotations_1.adjustDimsForRotation(rectangle, rotation), width = _d.width, height = _d.height;
      var rotate = operations_1.rotateInPlace(tslib_1.__assign(tslib_1.__assign({}, rectangle), { rotation }));
      var black = colors_1.rgb(0, 0, 0);
      var borderColor = (_b = colors_1.componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBorderColor())) !== null && _b !== void 0 ? _b : black;
      var normalBackgroundColor = colors_1.componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor());
      var downBackgroundColor = colors_1.componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor(), 0.8);
      var textColor = (_c = widgetColor !== null && widgetColor !== void 0 ? widgetColor : fieldColor) !== null && _c !== void 0 ? _c : black;
      if (widgetColor) {
        updateDefaultAppearance(widget, textColor);
      } else {
        updateDefaultAppearance(radioGroup.acroField, textColor);
      }
      var options = {
        x: width / 2,
        y: height / 2,
        width: width - borderWidth,
        height: height - borderWidth,
        borderWidth,
        borderColor,
        dotColor: textColor
      };
      return {
        normal: {
          on: tslib_1.__spreadArrays(rotate, operations_1.drawRadioButton(tslib_1.__assign(tslib_1.__assign({}, options), { color: normalBackgroundColor, filled: true }))),
          off: tslib_1.__spreadArrays(rotate, operations_1.drawRadioButton(tslib_1.__assign(tslib_1.__assign({}, options), { color: normalBackgroundColor, filled: false })))
        },
        down: {
          on: tslib_1.__spreadArrays(rotate, operations_1.drawRadioButton(tslib_1.__assign(tslib_1.__assign({}, options), { color: downBackgroundColor, filled: true }))),
          off: tslib_1.__spreadArrays(rotate, operations_1.drawRadioButton(tslib_1.__assign(tslib_1.__assign({}, options), { color: downBackgroundColor, filled: false })))
        }
      };
    };
    exports.defaultButtonAppearanceProvider = function(button, widget, font) {
      var _a, _b, _c, _d, _e;
      var widgetColor = getDefaultColor(widget);
      var fieldColor = getDefaultColor(button.acroField);
      var widgetFontSize = getDefaultFontSize(widget);
      var fieldFontSize = getDefaultFontSize(button.acroField);
      var rectangle = widget.getRectangle();
      var ap = widget.getAppearanceCharacteristics();
      var bs = widget.getBorderStyle();
      var captions = ap === null || ap === void 0 ? void 0 : ap.getCaptions();
      var normalText = (_a = captions === null || captions === void 0 ? void 0 : captions.normal) !== null && _a !== void 0 ? _a : "";
      var downText = (_c = (_b = captions === null || captions === void 0 ? void 0 : captions.down) !== null && _b !== void 0 ? _b : normalText) !== null && _c !== void 0 ? _c : "";
      var borderWidth = (_d = bs === null || bs === void 0 ? void 0 : bs.getWidth()) !== null && _d !== void 0 ? _d : 0;
      var rotation = rotations_1.reduceRotation(ap === null || ap === void 0 ? void 0 : ap.getRotation());
      var _f = rotations_1.adjustDimsForRotation(rectangle, rotation), width = _f.width, height = _f.height;
      var rotate = operations_1.rotateInPlace(tslib_1.__assign(tslib_1.__assign({}, rectangle), { rotation }));
      var black = colors_1.rgb(0, 0, 0);
      var borderColor = colors_1.componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBorderColor());
      var normalBackgroundColor = colors_1.componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor());
      var downBackgroundColor = colors_1.componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor(), 0.8);
      var bounds = {
        x: borderWidth,
        y: borderWidth,
        width: width - borderWidth * 2,
        height: height - borderWidth * 2
      };
      var normalLayout = layout_1.layoutSinglelineText(normalText, {
        alignment: alignment_1.TextAlignment.Center,
        fontSize: widgetFontSize !== null && widgetFontSize !== void 0 ? widgetFontSize : fieldFontSize,
        font,
        bounds
      });
      var downLayout = layout_1.layoutSinglelineText(downText, {
        alignment: alignment_1.TextAlignment.Center,
        fontSize: widgetFontSize !== null && widgetFontSize !== void 0 ? widgetFontSize : fieldFontSize,
        font,
        bounds
      });
      var fontSize = Math.min(normalLayout.fontSize, downLayout.fontSize);
      var textColor = (_e = widgetColor !== null && widgetColor !== void 0 ? widgetColor : fieldColor) !== null && _e !== void 0 ? _e : black;
      if (widgetColor || widgetFontSize !== void 0) {
        updateDefaultAppearance(widget, textColor, font, fontSize);
      } else {
        updateDefaultAppearance(button.acroField, textColor, font, fontSize);
      }
      var options = {
        x: 0 + borderWidth / 2,
        y: 0 + borderWidth / 2,
        width: width - borderWidth,
        height: height - borderWidth,
        borderWidth,
        borderColor,
        textColor,
        font: font.name,
        fontSize
      };
      return {
        normal: tslib_1.__spreadArrays(rotate, operations_1.drawButton(tslib_1.__assign(tslib_1.__assign({}, options), { color: normalBackgroundColor, textLines: [normalLayout.line] }))),
        down: tslib_1.__spreadArrays(rotate, operations_1.drawButton(tslib_1.__assign(tslib_1.__assign({}, options), { color: downBackgroundColor, textLines: [downLayout.line] })))
      };
    };
    exports.defaultTextFieldAppearanceProvider = function(textField, widget, font) {
      var _a, _b, _c, _d;
      var widgetColor = getDefaultColor(widget);
      var fieldColor = getDefaultColor(textField.acroField);
      var widgetFontSize = getDefaultFontSize(widget);
      var fieldFontSize = getDefaultFontSize(textField.acroField);
      var rectangle = widget.getRectangle();
      var ap = widget.getAppearanceCharacteristics();
      var bs = widget.getBorderStyle();
      var text = (_a = textField.getText()) !== null && _a !== void 0 ? _a : "";
      var borderWidth = (_b = bs === null || bs === void 0 ? void 0 : bs.getWidth()) !== null && _b !== void 0 ? _b : 0;
      var rotation = rotations_1.reduceRotation(ap === null || ap === void 0 ? void 0 : ap.getRotation());
      var _e = rotations_1.adjustDimsForRotation(rectangle, rotation), width = _e.width, height = _e.height;
      var rotate = operations_1.rotateInPlace(tslib_1.__assign(tslib_1.__assign({}, rectangle), { rotation }));
      var black = colors_1.rgb(0, 0, 0);
      var borderColor = colors_1.componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBorderColor());
      var normalBackgroundColor = colors_1.componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor());
      var textLines;
      var fontSize;
      var padding = textField.isCombed() ? 0 : 1;
      var bounds = {
        x: borderWidth + padding,
        y: borderWidth + padding,
        width: width - (borderWidth + padding) * 2,
        height: height - (borderWidth + padding) * 2
      };
      if (textField.isMultiline()) {
        var layout = layout_1.layoutMultilineText(text, {
          alignment: textField.getAlignment(),
          fontSize: widgetFontSize !== null && widgetFontSize !== void 0 ? widgetFontSize : fieldFontSize,
          font,
          bounds
        });
        textLines = layout.lines;
        fontSize = layout.fontSize;
      } else if (textField.isCombed()) {
        var layout = layout_1.layoutCombedText(text, {
          fontSize: widgetFontSize !== null && widgetFontSize !== void 0 ? widgetFontSize : fieldFontSize,
          font,
          bounds,
          cellCount: (_c = textField.getMaxLength()) !== null && _c !== void 0 ? _c : 0
        });
        textLines = layout.cells;
        fontSize = layout.fontSize;
      } else {
        var layout = layout_1.layoutSinglelineText(text, {
          alignment: textField.getAlignment(),
          fontSize: widgetFontSize !== null && widgetFontSize !== void 0 ? widgetFontSize : fieldFontSize,
          font,
          bounds
        });
        textLines = [layout.line];
        fontSize = layout.fontSize;
      }
      var textColor = (_d = widgetColor !== null && widgetColor !== void 0 ? widgetColor : fieldColor) !== null && _d !== void 0 ? _d : black;
      if (widgetColor || widgetFontSize !== void 0) {
        updateDefaultAppearance(widget, textColor, font, fontSize);
      } else {
        updateDefaultAppearance(textField.acroField, textColor, font, fontSize);
      }
      var options = {
        x: 0 + borderWidth / 2,
        y: 0 + borderWidth / 2,
        width: width - borderWidth,
        height: height - borderWidth,
        borderWidth: borderWidth !== null && borderWidth !== void 0 ? borderWidth : 0,
        borderColor,
        textColor,
        font: font.name,
        fontSize,
        color: normalBackgroundColor,
        textLines,
        padding
      };
      return tslib_1.__spreadArrays(rotate, operations_1.drawTextField(options));
    };
    exports.defaultDropdownAppearanceProvider = function(dropdown, widget, font) {
      var _a, _b, _c;
      var widgetColor = getDefaultColor(widget);
      var fieldColor = getDefaultColor(dropdown.acroField);
      var widgetFontSize = getDefaultFontSize(widget);
      var fieldFontSize = getDefaultFontSize(dropdown.acroField);
      var rectangle = widget.getRectangle();
      var ap = widget.getAppearanceCharacteristics();
      var bs = widget.getBorderStyle();
      var text = (_a = dropdown.getSelected()[0]) !== null && _a !== void 0 ? _a : "";
      var borderWidth = (_b = bs === null || bs === void 0 ? void 0 : bs.getWidth()) !== null && _b !== void 0 ? _b : 0;
      var rotation = rotations_1.reduceRotation(ap === null || ap === void 0 ? void 0 : ap.getRotation());
      var _d = rotations_1.adjustDimsForRotation(rectangle, rotation), width = _d.width, height = _d.height;
      var rotate = operations_1.rotateInPlace(tslib_1.__assign(tslib_1.__assign({}, rectangle), { rotation }));
      var black = colors_1.rgb(0, 0, 0);
      var borderColor = colors_1.componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBorderColor());
      var normalBackgroundColor = colors_1.componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor());
      var padding = 1;
      var bounds = {
        x: borderWidth + padding,
        y: borderWidth + padding,
        width: width - (borderWidth + padding) * 2,
        height: height - (borderWidth + padding) * 2
      };
      var _e = layout_1.layoutSinglelineText(text, {
        alignment: alignment_1.TextAlignment.Left,
        fontSize: widgetFontSize !== null && widgetFontSize !== void 0 ? widgetFontSize : fieldFontSize,
        font,
        bounds
      }), line = _e.line, fontSize = _e.fontSize;
      var textColor = (_c = widgetColor !== null && widgetColor !== void 0 ? widgetColor : fieldColor) !== null && _c !== void 0 ? _c : black;
      if (widgetColor || widgetFontSize !== void 0) {
        updateDefaultAppearance(widget, textColor, font, fontSize);
      } else {
        updateDefaultAppearance(dropdown.acroField, textColor, font, fontSize);
      }
      var options = {
        x: 0 + borderWidth / 2,
        y: 0 + borderWidth / 2,
        width: width - borderWidth,
        height: height - borderWidth,
        borderWidth: borderWidth !== null && borderWidth !== void 0 ? borderWidth : 0,
        borderColor,
        textColor,
        font: font.name,
        fontSize,
        color: normalBackgroundColor,
        textLines: [line],
        padding
      };
      return tslib_1.__spreadArrays(rotate, operations_1.drawTextField(options));
    };
    exports.defaultOptionListAppearanceProvider = function(optionList, widget, font) {
      var _a, _b;
      var widgetColor = getDefaultColor(widget);
      var fieldColor = getDefaultColor(optionList.acroField);
      var widgetFontSize = getDefaultFontSize(widget);
      var fieldFontSize = getDefaultFontSize(optionList.acroField);
      var rectangle = widget.getRectangle();
      var ap = widget.getAppearanceCharacteristics();
      var bs = widget.getBorderStyle();
      var borderWidth = (_a = bs === null || bs === void 0 ? void 0 : bs.getWidth()) !== null && _a !== void 0 ? _a : 0;
      var rotation = rotations_1.reduceRotation(ap === null || ap === void 0 ? void 0 : ap.getRotation());
      var _c = rotations_1.adjustDimsForRotation(rectangle, rotation), width = _c.width, height = _c.height;
      var rotate = operations_1.rotateInPlace(tslib_1.__assign(tslib_1.__assign({}, rectangle), { rotation }));
      var black = colors_1.rgb(0, 0, 0);
      var borderColor = colors_1.componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBorderColor());
      var normalBackgroundColor = colors_1.componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor());
      var options = optionList.getOptions();
      var selected = optionList.getSelected();
      if (optionList.isSorted())
        options.sort();
      var text = "";
      for (var idx = 0, len = options.length; idx < len; idx++) {
        text += options[idx];
        if (idx < len - 1)
          text += "\n";
      }
      var padding = 1;
      var bounds = {
        x: borderWidth + padding,
        y: borderWidth + padding,
        width: width - (borderWidth + padding) * 2,
        height: height - (borderWidth + padding) * 2
      };
      var _d = layout_1.layoutMultilineText(text, {
        alignment: alignment_1.TextAlignment.Left,
        fontSize: widgetFontSize !== null && widgetFontSize !== void 0 ? widgetFontSize : fieldFontSize,
        font,
        bounds
      }), lines = _d.lines, fontSize = _d.fontSize, lineHeight = _d.lineHeight;
      var selectedLines = [];
      for (var idx = 0, len = lines.length; idx < len; idx++) {
        var line = lines[idx];
        if (selected.includes(line.text))
          selectedLines.push(idx);
      }
      var blue = colors_1.rgb(153 / 255, 193 / 255, 218 / 255);
      var textColor = (_b = widgetColor !== null && widgetColor !== void 0 ? widgetColor : fieldColor) !== null && _b !== void 0 ? _b : black;
      if (widgetColor || widgetFontSize !== void 0) {
        updateDefaultAppearance(widget, textColor, font, fontSize);
      } else {
        updateDefaultAppearance(optionList.acroField, textColor, font, fontSize);
      }
      return tslib_1.__spreadArrays(rotate, operations_1.drawOptionList({
        x: 0 + borderWidth / 2,
        y: 0 + borderWidth / 2,
        width: width - borderWidth,
        height: height - borderWidth,
        borderWidth: borderWidth !== null && borderWidth !== void 0 ? borderWidth : 0,
        borderColor,
        textColor,
        font: font.name,
        fontSize,
        color: normalBackgroundColor,
        textLines: lines,
        lineHeight,
        selectedColor: blue,
        selectedLines,
        padding
      }));
    };
  }
});

// node_modules/pdf-lib/cjs/api/PDFEmbeddedPage.js
var require_PDFEmbeddedPage = __commonJS({
  "node_modules/pdf-lib/cjs/api/PDFEmbeddedPage.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFDocument_1 = tslib_1.__importDefault(require_PDFDocument());
    var core_1 = require_core();
    var utils_1 = require_utils2();
    var PDFEmbeddedPage = (
      /** @class */
      function() {
        function PDFEmbeddedPage2(ref, doc, embedder) {
          this.alreadyEmbedded = false;
          utils_1.assertIs(ref, "ref", [[core_1.PDFRef, "PDFRef"]]);
          utils_1.assertIs(doc, "doc", [[PDFDocument_1.default, "PDFDocument"]]);
          utils_1.assertIs(embedder, "embedder", [[core_1.PDFPageEmbedder, "PDFPageEmbedder"]]);
          this.ref = ref;
          this.doc = doc;
          this.width = embedder.width;
          this.height = embedder.height;
          this.embedder = embedder;
        }
        PDFEmbeddedPage2.prototype.scale = function(factor) {
          utils_1.assertIs(factor, "factor", ["number"]);
          return { width: this.width * factor, height: this.height * factor };
        };
        PDFEmbeddedPage2.prototype.size = function() {
          return this.scale(1);
        };
        PDFEmbeddedPage2.prototype.embed = function() {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            return tslib_1.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  if (!!this.alreadyEmbedded)
                    return [3, 2];
                  return [4, this.embedder.embedIntoContext(this.doc.context, this.ref)];
                case 1:
                  _a.sent();
                  this.alreadyEmbedded = true;
                  _a.label = 2;
                case 2:
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        };
        PDFEmbeddedPage2.of = function(ref, doc, embedder) {
          return new PDFEmbeddedPage2(ref, doc, embedder);
        };
        return PDFEmbeddedPage2;
      }()
    );
    exports.default = PDFEmbeddedPage;
  }
});

// node_modules/pdf-lib/cjs/api/PDFFont.js
var require_PDFFont = __commonJS({
  "node_modules/pdf-lib/cjs/api/PDFFont.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFDocument_1 = tslib_1.__importDefault(require_PDFDocument());
    var core_1 = require_core();
    var utils_1 = require_utils2();
    var PDFFont = (
      /** @class */
      function() {
        function PDFFont2(ref, doc, embedder) {
          this.modified = true;
          utils_1.assertIs(ref, "ref", [[core_1.PDFRef, "PDFRef"]]);
          utils_1.assertIs(doc, "doc", [[PDFDocument_1.default, "PDFDocument"]]);
          utils_1.assertIs(embedder, "embedder", [
            [core_1.CustomFontEmbedder, "CustomFontEmbedder"],
            [core_1.StandardFontEmbedder, "StandardFontEmbedder"]
          ]);
          this.ref = ref;
          this.doc = doc;
          this.name = embedder.fontName;
          this.embedder = embedder;
        }
        PDFFont2.prototype.encodeText = function(text) {
          utils_1.assertIs(text, "text", ["string"]);
          this.modified = true;
          return this.embedder.encodeText(text);
        };
        PDFFont2.prototype.widthOfTextAtSize = function(text, size) {
          utils_1.assertIs(text, "text", ["string"]);
          utils_1.assertIs(size, "size", ["number"]);
          return this.embedder.widthOfTextAtSize(text, size);
        };
        PDFFont2.prototype.heightAtSize = function(size, options) {
          var _a;
          utils_1.assertIs(size, "size", ["number"]);
          utils_1.assertOrUndefined(options === null || options === void 0 ? void 0 : options.descender, "options.descender", ["boolean"]);
          return this.embedder.heightOfFontAtSize(size, {
            descender: (_a = options === null || options === void 0 ? void 0 : options.descender) !== null && _a !== void 0 ? _a : true
          });
        };
        PDFFont2.prototype.sizeAtHeight = function(height) {
          utils_1.assertIs(height, "height", ["number"]);
          return this.embedder.sizeOfFontAtHeight(height);
        };
        PDFFont2.prototype.getCharacterSet = function() {
          if (this.embedder instanceof core_1.StandardFontEmbedder) {
            return this.embedder.encoding.supportedCodePoints;
          } else {
            return this.embedder.font.characterSet;
          }
        };
        PDFFont2.prototype.embed = function() {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            return tslib_1.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  if (!this.modified)
                    return [3, 2];
                  return [4, this.embedder.embedIntoContext(this.doc.context, this.ref)];
                case 1:
                  _a.sent();
                  this.modified = false;
                  _a.label = 2;
                case 2:
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        };
        PDFFont2.of = function(ref, doc, embedder) {
          return new PDFFont2(ref, doc, embedder);
        };
        return PDFFont2;
      }()
    );
    exports.default = PDFFont;
  }
});

// node_modules/pdf-lib/cjs/api/PDFImage.js
var require_PDFImage = __commonJS({
  "node_modules/pdf-lib/cjs/api/PDFImage.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFDocument_1 = tslib_1.__importDefault(require_PDFDocument());
    var core_1 = require_core();
    var utils_1 = require_utils2();
    var PDFImage = (
      /** @class */
      function() {
        function PDFImage2(ref, doc, embedder) {
          utils_1.assertIs(ref, "ref", [[core_1.PDFRef, "PDFRef"]]);
          utils_1.assertIs(doc, "doc", [[PDFDocument_1.default, "PDFDocument"]]);
          utils_1.assertIs(embedder, "embedder", [
            [core_1.JpegEmbedder, "JpegEmbedder"],
            [core_1.PngEmbedder, "PngEmbedder"]
          ]);
          this.ref = ref;
          this.doc = doc;
          this.width = embedder.width;
          this.height = embedder.height;
          this.embedder = embedder;
        }
        PDFImage2.prototype.scale = function(factor) {
          utils_1.assertIs(factor, "factor", ["number"]);
          return { width: this.width * factor, height: this.height * factor };
        };
        PDFImage2.prototype.scaleToFit = function(width, height) {
          utils_1.assertIs(width, "width", ["number"]);
          utils_1.assertIs(height, "height", ["number"]);
          var imgWidthScale = width / this.width;
          var imgHeightScale = height / this.height;
          var scale = Math.min(imgWidthScale, imgHeightScale);
          return this.scale(scale);
        };
        PDFImage2.prototype.size = function() {
          return this.scale(1);
        };
        PDFImage2.prototype.embed = function() {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var _a, doc, ref;
            return tslib_1.__generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  if (!this.embedder)
                    return [
                      2
                      /*return*/
                    ];
                  if (!this.embedTask) {
                    _a = this, doc = _a.doc, ref = _a.ref;
                    this.embedTask = this.embedder.embedIntoContext(doc.context, ref);
                  }
                  return [4, this.embedTask];
                case 1:
                  _b.sent();
                  this.embedder = void 0;
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        };
        PDFImage2.of = function(ref, doc, embedder) {
          return new PDFImage2(ref, doc, embedder);
        };
        return PDFImage2;
      }()
    );
    exports.default = PDFImage;
  }
});

// node_modules/pdf-lib/cjs/api/image/alignment.js
var require_alignment2 = __commonJS({
  "node_modules/pdf-lib/cjs/api/image/alignment.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ImageAlignment = void 0;
    var ImageAlignment;
    (function(ImageAlignment2) {
      ImageAlignment2[ImageAlignment2["Left"] = 0] = "Left";
      ImageAlignment2[ImageAlignment2["Center"] = 1] = "Center";
      ImageAlignment2[ImageAlignment2["Right"] = 2] = "Right";
    })(ImageAlignment = exports.ImageAlignment || (exports.ImageAlignment = {}));
  }
});

// node_modules/pdf-lib/cjs/api/image/index.js
var require_image = __commonJS({
  "node_modules/pdf-lib/cjs/api/image/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_alignment2(), exports);
  }
});

// node_modules/pdf-lib/cjs/api/form/PDFField.js
var require_PDFField = __commonJS({
  "node_modules/pdf-lib/cjs/api/form/PDFField.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.assertFieldAppearanceOptions = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFDocument_1 = tslib_1.__importDefault(require_PDFDocument());
    var colors_1 = require_colors();
    var rotations_1 = require_rotations();
    var core_1 = require_core();
    var utils_1 = require_utils2();
    var image_1 = require_image();
    var operations_1 = require_operations();
    exports.assertFieldAppearanceOptions = function(options) {
      utils_1.assertOrUndefined(options === null || options === void 0 ? void 0 : options.x, "options.x", ["number"]);
      utils_1.assertOrUndefined(options === null || options === void 0 ? void 0 : options.y, "options.y", ["number"]);
      utils_1.assertOrUndefined(options === null || options === void 0 ? void 0 : options.width, "options.width", ["number"]);
      utils_1.assertOrUndefined(options === null || options === void 0 ? void 0 : options.height, "options.height", ["number"]);
      utils_1.assertOrUndefined(options === null || options === void 0 ? void 0 : options.textColor, "options.textColor", [
        [Object, "Color"]
      ]);
      utils_1.assertOrUndefined(options === null || options === void 0 ? void 0 : options.backgroundColor, "options.backgroundColor", [
        [Object, "Color"]
      ]);
      utils_1.assertOrUndefined(options === null || options === void 0 ? void 0 : options.borderColor, "options.borderColor", [
        [Object, "Color"]
      ]);
      utils_1.assertOrUndefined(options === null || options === void 0 ? void 0 : options.borderWidth, "options.borderWidth", ["number"]);
      utils_1.assertOrUndefined(options === null || options === void 0 ? void 0 : options.rotate, "options.rotate", [[Object, "Rotation"]]);
    };
    var PDFField = (
      /** @class */
      function() {
        function PDFField2(acroField, ref, doc) {
          utils_1.assertIs(acroField, "acroField", [[core_1.PDFAcroTerminal, "PDFAcroTerminal"]]);
          utils_1.assertIs(ref, "ref", [[core_1.PDFRef, "PDFRef"]]);
          utils_1.assertIs(doc, "doc", [[PDFDocument_1.default, "PDFDocument"]]);
          this.acroField = acroField;
          this.ref = ref;
          this.doc = doc;
        }
        PDFField2.prototype.getName = function() {
          var _a;
          return (_a = this.acroField.getFullyQualifiedName()) !== null && _a !== void 0 ? _a : "";
        };
        PDFField2.prototype.isReadOnly = function() {
          return this.acroField.hasFlag(core_1.AcroFieldFlags.ReadOnly);
        };
        PDFField2.prototype.enableReadOnly = function() {
          this.acroField.setFlagTo(core_1.AcroFieldFlags.ReadOnly, true);
        };
        PDFField2.prototype.disableReadOnly = function() {
          this.acroField.setFlagTo(core_1.AcroFieldFlags.ReadOnly, false);
        };
        PDFField2.prototype.isRequired = function() {
          return this.acroField.hasFlag(core_1.AcroFieldFlags.Required);
        };
        PDFField2.prototype.enableRequired = function() {
          this.acroField.setFlagTo(core_1.AcroFieldFlags.Required, true);
        };
        PDFField2.prototype.disableRequired = function() {
          this.acroField.setFlagTo(core_1.AcroFieldFlags.Required, false);
        };
        PDFField2.prototype.isExported = function() {
          return !this.acroField.hasFlag(core_1.AcroFieldFlags.NoExport);
        };
        PDFField2.prototype.enableExporting = function() {
          this.acroField.setFlagTo(core_1.AcroFieldFlags.NoExport, false);
        };
        PDFField2.prototype.disableExporting = function() {
          this.acroField.setFlagTo(core_1.AcroFieldFlags.NoExport, true);
        };
        PDFField2.prototype.needsAppearancesUpdate = function() {
          throw new core_1.MethodNotImplementedError(this.constructor.name, "needsAppearancesUpdate");
        };
        PDFField2.prototype.defaultUpdateAppearances = function(_font) {
          throw new core_1.MethodNotImplementedError(this.constructor.name, "defaultUpdateAppearances");
        };
        PDFField2.prototype.markAsDirty = function() {
          this.doc.getForm().markFieldAsDirty(this.ref);
        };
        PDFField2.prototype.markAsClean = function() {
          this.doc.getForm().markFieldAsClean(this.ref);
        };
        PDFField2.prototype.isDirty = function() {
          return this.doc.getForm().fieldIsDirty(this.ref);
        };
        PDFField2.prototype.createWidget = function(options) {
          var _a;
          var textColor = options.textColor;
          var backgroundColor = options.backgroundColor;
          var borderColor = options.borderColor;
          var borderWidth = options.borderWidth;
          var degreesAngle = rotations_1.toDegrees(options.rotate);
          var caption = options.caption;
          var x = options.x;
          var y = options.y;
          var width = options.width + borderWidth;
          var height = options.height + borderWidth;
          var hidden = Boolean(options.hidden);
          var pageRef = options.page;
          utils_1.assertMultiple(degreesAngle, "degreesAngle", 90);
          var widget = core_1.PDFWidgetAnnotation.create(this.doc.context, this.ref);
          var rect = rotations_1.rotateRectangle({ x, y, width, height }, borderWidth, degreesAngle);
          widget.setRectangle(rect);
          if (pageRef)
            widget.setP(pageRef);
          var ac = widget.getOrCreateAppearanceCharacteristics();
          if (backgroundColor) {
            ac.setBackgroundColor(colors_1.colorToComponents(backgroundColor));
          }
          ac.setRotation(degreesAngle);
          if (caption)
            ac.setCaptions({ normal: caption });
          if (borderColor)
            ac.setBorderColor(colors_1.colorToComponents(borderColor));
          var bs = widget.getOrCreateBorderStyle();
          if (borderWidth !== void 0)
            bs.setWidth(borderWidth);
          widget.setFlagTo(core_1.AnnotationFlags.Print, true);
          widget.setFlagTo(core_1.AnnotationFlags.Hidden, hidden);
          widget.setFlagTo(core_1.AnnotationFlags.Invisible, false);
          if (textColor) {
            var da = (_a = this.acroField.getDefaultAppearance()) !== null && _a !== void 0 ? _a : "";
            var newDa = da + "\n" + colors_1.setFillingColor(textColor).toString();
            this.acroField.setDefaultAppearance(newDa);
          }
          return widget;
        };
        PDFField2.prototype.updateWidgetAppearanceWithFont = function(widget, font, _a) {
          var normal = _a.normal, rollover = _a.rollover, down = _a.down;
          this.updateWidgetAppearances(widget, {
            normal: this.createAppearanceStream(widget, normal, font),
            rollover: rollover && this.createAppearanceStream(widget, rollover, font),
            down: down && this.createAppearanceStream(widget, down, font)
          });
        };
        PDFField2.prototype.updateOnOffWidgetAppearance = function(widget, onValue, _a) {
          var normal = _a.normal, rollover = _a.rollover, down = _a.down;
          this.updateWidgetAppearances(widget, {
            normal: this.createAppearanceDict(widget, normal, onValue),
            rollover: rollover && this.createAppearanceDict(widget, rollover, onValue),
            down: down && this.createAppearanceDict(widget, down, onValue)
          });
        };
        PDFField2.prototype.updateWidgetAppearances = function(widget, _a) {
          var normal = _a.normal, rollover = _a.rollover, down = _a.down;
          widget.setNormalAppearance(normal);
          if (rollover) {
            widget.setRolloverAppearance(rollover);
          } else {
            widget.removeRolloverAppearance();
          }
          if (down) {
            widget.setDownAppearance(down);
          } else {
            widget.removeDownAppearance();
          }
        };
        PDFField2.prototype.createAppearanceStream = function(widget, appearance, font) {
          var _a;
          var context = this.acroField.dict.context;
          var _b = widget.getRectangle(), width = _b.width, height = _b.height;
          var Resources = font && { Font: (_a = {}, _a[font.name] = font.ref, _a) };
          var stream = context.formXObject(appearance, {
            Resources,
            BBox: context.obj([0, 0, width, height]),
            Matrix: context.obj([1, 0, 0, 1, 0, 0])
          });
          var streamRef = context.register(stream);
          return streamRef;
        };
        PDFField2.prototype.createImageAppearanceStream = function(widget, image, alignment) {
          var _a;
          var _b;
          var context = this.acroField.dict.context;
          var rectangle = widget.getRectangle();
          var ap = widget.getAppearanceCharacteristics();
          var bs = widget.getBorderStyle();
          var borderWidth = (_b = bs === null || bs === void 0 ? void 0 : bs.getWidth()) !== null && _b !== void 0 ? _b : 0;
          var rotation = rotations_1.reduceRotation(ap === null || ap === void 0 ? void 0 : ap.getRotation());
          var rotate = operations_1.rotateInPlace(tslib_1.__assign(tslib_1.__assign({}, rectangle), { rotation }));
          var adj = rotations_1.adjustDimsForRotation(rectangle, rotation);
          var imageDims = image.scaleToFit(adj.width - borderWidth * 2, adj.height - borderWidth * 2);
          var options = {
            x: borderWidth,
            y: borderWidth,
            width: imageDims.width,
            height: imageDims.height,
            //
            rotate: rotations_1.degrees(0),
            xSkew: rotations_1.degrees(0),
            ySkew: rotations_1.degrees(0)
          };
          if (alignment === image_1.ImageAlignment.Center) {
            options.x += (adj.width - borderWidth * 2) / 2 - imageDims.width / 2;
            options.y += (adj.height - borderWidth * 2) / 2 - imageDims.height / 2;
          } else if (alignment === image_1.ImageAlignment.Right) {
            options.x = adj.width - borderWidth - imageDims.width;
            options.y = adj.height - borderWidth - imageDims.height;
          }
          var imageName = this.doc.context.addRandomSuffix("Image", 10);
          var appearance = tslib_1.__spreadArrays(rotate, operations_1.drawImage(imageName, options));
          var Resources = { XObject: (_a = {}, _a[imageName] = image.ref, _a) };
          var stream = context.formXObject(appearance, {
            Resources,
            BBox: context.obj([0, 0, rectangle.width, rectangle.height]),
            Matrix: context.obj([1, 0, 0, 1, 0, 0])
          });
          return context.register(stream);
        };
        PDFField2.prototype.createAppearanceDict = function(widget, appearance, onValue) {
          var context = this.acroField.dict.context;
          var onStreamRef = this.createAppearanceStream(widget, appearance.on);
          var offStreamRef = this.createAppearanceStream(widget, appearance.off);
          var appearanceDict = context.obj({});
          appearanceDict.set(onValue, onStreamRef);
          appearanceDict.set(core_1.PDFName.of("Off"), offStreamRef);
          return appearanceDict;
        };
        return PDFField2;
      }()
    );
    exports.default = PDFField;
  }
});

// node_modules/pdf-lib/cjs/api/form/PDFCheckBox.js
var require_PDFCheckBox = __commonJS({
  "node_modules/pdf-lib/cjs/api/form/PDFCheckBox.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFPage_1 = tslib_1.__importDefault(require_PDFPage());
    var appearances_1 = require_appearances();
    var colors_1 = require_colors();
    var rotations_1 = require_rotations();
    var PDFField_1 = tslib_1.__importStar(require_PDFField());
    var core_1 = require_core();
    var utils_1 = require_utils2();
    var PDFCheckBox = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFCheckBox2, _super);
        function PDFCheckBox2(acroCheckBox, ref, doc) {
          var _this = _super.call(this, acroCheckBox, ref, doc) || this;
          utils_1.assertIs(acroCheckBox, "acroCheckBox", [
            [core_1.PDFAcroCheckBox, "PDFAcroCheckBox"]
          ]);
          _this.acroField = acroCheckBox;
          return _this;
        }
        PDFCheckBox2.prototype.check = function() {
          var _a;
          var onValue = (_a = this.acroField.getOnValue()) !== null && _a !== void 0 ? _a : core_1.PDFName.of("Yes");
          this.markAsDirty();
          this.acroField.setValue(onValue);
        };
        PDFCheckBox2.prototype.uncheck = function() {
          this.markAsDirty();
          this.acroField.setValue(core_1.PDFName.of("Off"));
        };
        PDFCheckBox2.prototype.isChecked = function() {
          var onValue = this.acroField.getOnValue();
          return !!onValue && onValue === this.acroField.getValue();
        };
        PDFCheckBox2.prototype.addToPage = function(page, options) {
          var _a, _b, _c, _d, _e, _f;
          utils_1.assertIs(page, "page", [[PDFPage_1.default, "PDFPage"]]);
          PDFField_1.assertFieldAppearanceOptions(options);
          if (!options)
            options = {};
          if (!("textColor" in options))
            options.textColor = colors_1.rgb(0, 0, 0);
          if (!("backgroundColor" in options))
            options.backgroundColor = colors_1.rgb(1, 1, 1);
          if (!("borderColor" in options))
            options.borderColor = colors_1.rgb(0, 0, 0);
          if (!("borderWidth" in options))
            options.borderWidth = 1;
          var widget = this.createWidget({
            x: (_a = options.x) !== null && _a !== void 0 ? _a : 0,
            y: (_b = options.y) !== null && _b !== void 0 ? _b : 0,
            width: (_c = options.width) !== null && _c !== void 0 ? _c : 50,
            height: (_d = options.height) !== null && _d !== void 0 ? _d : 50,
            textColor: options.textColor,
            backgroundColor: options.backgroundColor,
            borderColor: options.borderColor,
            borderWidth: (_e = options.borderWidth) !== null && _e !== void 0 ? _e : 0,
            rotate: (_f = options.rotate) !== null && _f !== void 0 ? _f : rotations_1.degrees(0),
            hidden: options.hidden,
            page: page.ref
          });
          var widgetRef = this.doc.context.register(widget.dict);
          this.acroField.addWidget(widgetRef);
          widget.setAppearanceState(core_1.PDFName.of("Off"));
          this.updateWidgetAppearance(widget, core_1.PDFName.of("Yes"));
          page.node.addAnnot(widgetRef);
        };
        PDFCheckBox2.prototype.needsAppearancesUpdate = function() {
          var _a;
          var widgets = this.acroField.getWidgets();
          for (var idx = 0, len = widgets.length; idx < len; idx++) {
            var widget = widgets[idx];
            var state = widget.getAppearanceState();
            var normal = (_a = widget.getAppearances()) === null || _a === void 0 ? void 0 : _a.normal;
            if (!(normal instanceof core_1.PDFDict))
              return true;
            if (state && !normal.has(state))
              return true;
          }
          return false;
        };
        PDFCheckBox2.prototype.defaultUpdateAppearances = function() {
          this.updateAppearances();
        };
        PDFCheckBox2.prototype.updateAppearances = function(provider) {
          var _a;
          utils_1.assertOrUndefined(provider, "provider", [Function]);
          var widgets = this.acroField.getWidgets();
          for (var idx = 0, len = widgets.length; idx < len; idx++) {
            var widget = widgets[idx];
            var onValue = (_a = widget.getOnValue()) !== null && _a !== void 0 ? _a : core_1.PDFName.of("Yes");
            if (!onValue)
              continue;
            this.updateWidgetAppearance(widget, onValue, provider);
          }
          this.markAsClean();
        };
        PDFCheckBox2.prototype.updateWidgetAppearance = function(widget, onValue, provider) {
          var apProvider = provider !== null && provider !== void 0 ? provider : appearances_1.defaultCheckBoxAppearanceProvider;
          var appearances = appearances_1.normalizeAppearance(apProvider(this, widget));
          this.updateOnOffWidgetAppearance(widget, onValue, appearances);
        };
        PDFCheckBox2.of = function(acroCheckBox, ref, doc) {
          return new PDFCheckBox2(acroCheckBox, ref, doc);
        };
        return PDFCheckBox2;
      }(PDFField_1.default)
    );
    exports.default = PDFCheckBox;
  }
});

// node_modules/pdf-lib/cjs/api/form/PDFDropdown.js
var require_PDFDropdown = __commonJS({
  "node_modules/pdf-lib/cjs/api/form/PDFDropdown.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFPage_1 = tslib_1.__importDefault(require_PDFPage());
    var PDFFont_1 = tslib_1.__importDefault(require_PDFFont());
    var PDFField_1 = tslib_1.__importStar(require_PDFField());
    var appearances_1 = require_appearances();
    var colors_1 = require_colors();
    var rotations_1 = require_rotations();
    var core_1 = require_core();
    var utils_1 = require_utils2();
    var PDFDropdown = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFDropdown2, _super);
        function PDFDropdown2(acroComboBox, ref, doc) {
          var _this = _super.call(this, acroComboBox, ref, doc) || this;
          utils_1.assertIs(acroComboBox, "acroComboBox", [
            [core_1.PDFAcroComboBox, "PDFAcroComboBox"]
          ]);
          _this.acroField = acroComboBox;
          return _this;
        }
        PDFDropdown2.prototype.getOptions = function() {
          var rawOptions = this.acroField.getOptions();
          var options = new Array(rawOptions.length);
          for (var idx = 0, len = options.length; idx < len; idx++) {
            var _a = rawOptions[idx], display = _a.display, value = _a.value;
            options[idx] = (display !== null && display !== void 0 ? display : value).decodeText();
          }
          return options;
        };
        PDFDropdown2.prototype.getSelected = function() {
          var values = this.acroField.getValues();
          var selected = new Array(values.length);
          for (var idx = 0, len = values.length; idx < len; idx++) {
            selected[idx] = values[idx].decodeText();
          }
          return selected;
        };
        PDFDropdown2.prototype.setOptions = function(options) {
          utils_1.assertIs(options, "options", [Array]);
          var optionObjects = new Array(options.length);
          for (var idx = 0, len = options.length; idx < len; idx++) {
            optionObjects[idx] = { value: core_1.PDFHexString.fromText(options[idx]) };
          }
          this.acroField.setOptions(optionObjects);
        };
        PDFDropdown2.prototype.addOptions = function(options) {
          utils_1.assertIs(options, "options", ["string", Array]);
          var optionsArr = Array.isArray(options) ? options : [options];
          var existingOptions = this.acroField.getOptions();
          var newOptions = new Array(optionsArr.length);
          for (var idx = 0, len = optionsArr.length; idx < len; idx++) {
            newOptions[idx] = { value: core_1.PDFHexString.fromText(optionsArr[idx]) };
          }
          this.acroField.setOptions(existingOptions.concat(newOptions));
        };
        PDFDropdown2.prototype.select = function(options, merge) {
          if (merge === void 0) {
            merge = false;
          }
          utils_1.assertIs(options, "options", ["string", Array]);
          utils_1.assertIs(merge, "merge", ["boolean"]);
          var optionsArr = Array.isArray(options) ? options : [options];
          var validOptions = this.getOptions();
          var hasCustomOption = optionsArr.find(function(option) {
            return !validOptions.includes(option);
          });
          if (hasCustomOption)
            this.enableEditing();
          this.markAsDirty();
          if (optionsArr.length > 1 || optionsArr.length === 1 && merge) {
            this.enableMultiselect();
          }
          var values = new Array(optionsArr.length);
          for (var idx = 0, len = optionsArr.length; idx < len; idx++) {
            values[idx] = core_1.PDFHexString.fromText(optionsArr[idx]);
          }
          if (merge) {
            var existingValues = this.acroField.getValues();
            this.acroField.setValues(existingValues.concat(values));
          } else {
            this.acroField.setValues(values);
          }
        };
        PDFDropdown2.prototype.clear = function() {
          this.markAsDirty();
          this.acroField.setValues([]);
        };
        PDFDropdown2.prototype.setFontSize = function(fontSize) {
          utils_1.assertPositive(fontSize, "fontSize");
          this.acroField.setFontSize(fontSize);
          this.markAsDirty();
        };
        PDFDropdown2.prototype.isEditable = function() {
          return this.acroField.hasFlag(core_1.AcroChoiceFlags.Edit);
        };
        PDFDropdown2.prototype.enableEditing = function() {
          this.acroField.setFlagTo(core_1.AcroChoiceFlags.Edit, true);
        };
        PDFDropdown2.prototype.disableEditing = function() {
          this.acroField.setFlagTo(core_1.AcroChoiceFlags.Edit, false);
        };
        PDFDropdown2.prototype.isSorted = function() {
          return this.acroField.hasFlag(core_1.AcroChoiceFlags.Sort);
        };
        PDFDropdown2.prototype.enableSorting = function() {
          this.acroField.setFlagTo(core_1.AcroChoiceFlags.Sort, true);
        };
        PDFDropdown2.prototype.disableSorting = function() {
          this.acroField.setFlagTo(core_1.AcroChoiceFlags.Sort, false);
        };
        PDFDropdown2.prototype.isMultiselect = function() {
          return this.acroField.hasFlag(core_1.AcroChoiceFlags.MultiSelect);
        };
        PDFDropdown2.prototype.enableMultiselect = function() {
          this.acroField.setFlagTo(core_1.AcroChoiceFlags.MultiSelect, true);
        };
        PDFDropdown2.prototype.disableMultiselect = function() {
          this.acroField.setFlagTo(core_1.AcroChoiceFlags.MultiSelect, false);
        };
        PDFDropdown2.prototype.isSpellChecked = function() {
          return !this.acroField.hasFlag(core_1.AcroChoiceFlags.DoNotSpellCheck);
        };
        PDFDropdown2.prototype.enableSpellChecking = function() {
          this.acroField.setFlagTo(core_1.AcroChoiceFlags.DoNotSpellCheck, false);
        };
        PDFDropdown2.prototype.disableSpellChecking = function() {
          this.acroField.setFlagTo(core_1.AcroChoiceFlags.DoNotSpellCheck, true);
        };
        PDFDropdown2.prototype.isSelectOnClick = function() {
          return this.acroField.hasFlag(core_1.AcroChoiceFlags.CommitOnSelChange);
        };
        PDFDropdown2.prototype.enableSelectOnClick = function() {
          this.acroField.setFlagTo(core_1.AcroChoiceFlags.CommitOnSelChange, true);
        };
        PDFDropdown2.prototype.disableSelectOnClick = function() {
          this.acroField.setFlagTo(core_1.AcroChoiceFlags.CommitOnSelChange, false);
        };
        PDFDropdown2.prototype.addToPage = function(page, options) {
          var _a, _b, _c, _d, _e, _f, _g;
          utils_1.assertIs(page, "page", [[PDFPage_1.default, "PDFPage"]]);
          PDFField_1.assertFieldAppearanceOptions(options);
          if (!options)
            options = {};
          if (!("textColor" in options))
            options.textColor = colors_1.rgb(0, 0, 0);
          if (!("backgroundColor" in options))
            options.backgroundColor = colors_1.rgb(1, 1, 1);
          if (!("borderColor" in options))
            options.borderColor = colors_1.rgb(0, 0, 0);
          if (!("borderWidth" in options))
            options.borderWidth = 1;
          var widget = this.createWidget({
            x: (_a = options.x) !== null && _a !== void 0 ? _a : 0,
            y: (_b = options.y) !== null && _b !== void 0 ? _b : 0,
            width: (_c = options.width) !== null && _c !== void 0 ? _c : 200,
            height: (_d = options.height) !== null && _d !== void 0 ? _d : 50,
            textColor: options.textColor,
            backgroundColor: options.backgroundColor,
            borderColor: options.borderColor,
            borderWidth: (_e = options.borderWidth) !== null && _e !== void 0 ? _e : 0,
            rotate: (_f = options.rotate) !== null && _f !== void 0 ? _f : rotations_1.degrees(0),
            hidden: options.hidden,
            page: page.ref
          });
          var widgetRef = this.doc.context.register(widget.dict);
          this.acroField.addWidget(widgetRef);
          var font = (_g = options.font) !== null && _g !== void 0 ? _g : this.doc.getForm().getDefaultFont();
          this.updateWidgetAppearance(widget, font);
          page.node.addAnnot(widgetRef);
        };
        PDFDropdown2.prototype.needsAppearancesUpdate = function() {
          var _a;
          if (this.isDirty())
            return true;
          var widgets = this.acroField.getWidgets();
          for (var idx = 0, len = widgets.length; idx < len; idx++) {
            var widget = widgets[idx];
            var hasAppearances = ((_a = widget.getAppearances()) === null || _a === void 0 ? void 0 : _a.normal) instanceof core_1.PDFStream;
            if (!hasAppearances)
              return true;
          }
          return false;
        };
        PDFDropdown2.prototype.defaultUpdateAppearances = function(font) {
          utils_1.assertIs(font, "font", [[PDFFont_1.default, "PDFFont"]]);
          this.updateAppearances(font);
        };
        PDFDropdown2.prototype.updateAppearances = function(font, provider) {
          utils_1.assertIs(font, "font", [[PDFFont_1.default, "PDFFont"]]);
          utils_1.assertOrUndefined(provider, "provider", [Function]);
          var widgets = this.acroField.getWidgets();
          for (var idx = 0, len = widgets.length; idx < len; idx++) {
            var widget = widgets[idx];
            this.updateWidgetAppearance(widget, font, provider);
          }
          this.markAsClean();
        };
        PDFDropdown2.prototype.updateWidgetAppearance = function(widget, font, provider) {
          var apProvider = provider !== null && provider !== void 0 ? provider : appearances_1.defaultDropdownAppearanceProvider;
          var appearances = appearances_1.normalizeAppearance(apProvider(this, widget, font));
          this.updateWidgetAppearanceWithFont(widget, font, appearances);
        };
        PDFDropdown2.of = function(acroComboBox, ref, doc) {
          return new PDFDropdown2(acroComboBox, ref, doc);
        };
        return PDFDropdown2;
      }(PDFField_1.default)
    );
    exports.default = PDFDropdown;
  }
});

// node_modules/pdf-lib/cjs/api/form/PDFOptionList.js
var require_PDFOptionList = __commonJS({
  "node_modules/pdf-lib/cjs/api/form/PDFOptionList.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFPage_1 = tslib_1.__importDefault(require_PDFPage());
    var PDFFont_1 = tslib_1.__importDefault(require_PDFFont());
    var PDFField_1 = tslib_1.__importStar(require_PDFField());
    var appearances_1 = require_appearances();
    var colors_1 = require_colors();
    var rotations_1 = require_rotations();
    var core_1 = require_core();
    var utils_1 = require_utils2();
    var PDFOptionList = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFOptionList2, _super);
        function PDFOptionList2(acroListBox, ref, doc) {
          var _this = _super.call(this, acroListBox, ref, doc) || this;
          utils_1.assertIs(acroListBox, "acroListBox", [[core_1.PDFAcroListBox, "PDFAcroListBox"]]);
          _this.acroField = acroListBox;
          return _this;
        }
        PDFOptionList2.prototype.getOptions = function() {
          var rawOptions = this.acroField.getOptions();
          var options = new Array(rawOptions.length);
          for (var idx = 0, len = options.length; idx < len; idx++) {
            var _a = rawOptions[idx], display = _a.display, value = _a.value;
            options[idx] = (display !== null && display !== void 0 ? display : value).decodeText();
          }
          return options;
        };
        PDFOptionList2.prototype.getSelected = function() {
          var values = this.acroField.getValues();
          var selected = new Array(values.length);
          for (var idx = 0, len = values.length; idx < len; idx++) {
            selected[idx] = values[idx].decodeText();
          }
          return selected;
        };
        PDFOptionList2.prototype.setOptions = function(options) {
          utils_1.assertIs(options, "options", [Array]);
          this.markAsDirty();
          var optionObjects = new Array(options.length);
          for (var idx = 0, len = options.length; idx < len; idx++) {
            optionObjects[idx] = { value: core_1.PDFHexString.fromText(options[idx]) };
          }
          this.acroField.setOptions(optionObjects);
        };
        PDFOptionList2.prototype.addOptions = function(options) {
          utils_1.assertIs(options, "options", ["string", Array]);
          this.markAsDirty();
          var optionsArr = Array.isArray(options) ? options : [options];
          var existingOptions = this.acroField.getOptions();
          var newOptions = new Array(optionsArr.length);
          for (var idx = 0, len = optionsArr.length; idx < len; idx++) {
            newOptions[idx] = { value: core_1.PDFHexString.fromText(optionsArr[idx]) };
          }
          this.acroField.setOptions(existingOptions.concat(newOptions));
        };
        PDFOptionList2.prototype.select = function(options, merge) {
          if (merge === void 0) {
            merge = false;
          }
          utils_1.assertIs(options, "options", ["string", Array]);
          utils_1.assertIs(merge, "merge", ["boolean"]);
          var optionsArr = Array.isArray(options) ? options : [options];
          var validOptions = this.getOptions();
          utils_1.assertIsSubset(optionsArr, "option", validOptions);
          this.markAsDirty();
          if (optionsArr.length > 1 || optionsArr.length === 1 && merge) {
            this.enableMultiselect();
          }
          var values = new Array(optionsArr.length);
          for (var idx = 0, len = optionsArr.length; idx < len; idx++) {
            values[idx] = core_1.PDFHexString.fromText(optionsArr[idx]);
          }
          if (merge) {
            var existingValues = this.acroField.getValues();
            this.acroField.setValues(existingValues.concat(values));
          } else {
            this.acroField.setValues(values);
          }
        };
        PDFOptionList2.prototype.clear = function() {
          this.markAsDirty();
          this.acroField.setValues([]);
        };
        PDFOptionList2.prototype.setFontSize = function(fontSize) {
          utils_1.assertPositive(fontSize, "fontSize");
          this.acroField.setFontSize(fontSize);
          this.markAsDirty();
        };
        PDFOptionList2.prototype.isSorted = function() {
          return this.acroField.hasFlag(core_1.AcroChoiceFlags.Sort);
        };
        PDFOptionList2.prototype.enableSorting = function() {
          this.acroField.setFlagTo(core_1.AcroChoiceFlags.Sort, true);
        };
        PDFOptionList2.prototype.disableSorting = function() {
          this.acroField.setFlagTo(core_1.AcroChoiceFlags.Sort, false);
        };
        PDFOptionList2.prototype.isMultiselect = function() {
          return this.acroField.hasFlag(core_1.AcroChoiceFlags.MultiSelect);
        };
        PDFOptionList2.prototype.enableMultiselect = function() {
          this.acroField.setFlagTo(core_1.AcroChoiceFlags.MultiSelect, true);
        };
        PDFOptionList2.prototype.disableMultiselect = function() {
          this.acroField.setFlagTo(core_1.AcroChoiceFlags.MultiSelect, false);
        };
        PDFOptionList2.prototype.isSelectOnClick = function() {
          return this.acroField.hasFlag(core_1.AcroChoiceFlags.CommitOnSelChange);
        };
        PDFOptionList2.prototype.enableSelectOnClick = function() {
          this.acroField.setFlagTo(core_1.AcroChoiceFlags.CommitOnSelChange, true);
        };
        PDFOptionList2.prototype.disableSelectOnClick = function() {
          this.acroField.setFlagTo(core_1.AcroChoiceFlags.CommitOnSelChange, false);
        };
        PDFOptionList2.prototype.addToPage = function(page, options) {
          var _a, _b, _c, _d, _e, _f, _g;
          utils_1.assertIs(page, "page", [[PDFPage_1.default, "PDFPage"]]);
          PDFField_1.assertFieldAppearanceOptions(options);
          if (!options)
            options = {};
          if (!("textColor" in options))
            options.textColor = colors_1.rgb(0, 0, 0);
          if (!("backgroundColor" in options))
            options.backgroundColor = colors_1.rgb(1, 1, 1);
          if (!("borderColor" in options))
            options.borderColor = colors_1.rgb(0, 0, 0);
          if (!("borderWidth" in options))
            options.borderWidth = 1;
          var widget = this.createWidget({
            x: (_a = options.x) !== null && _a !== void 0 ? _a : 0,
            y: (_b = options.y) !== null && _b !== void 0 ? _b : 0,
            width: (_c = options.width) !== null && _c !== void 0 ? _c : 200,
            height: (_d = options.height) !== null && _d !== void 0 ? _d : 100,
            textColor: options.textColor,
            backgroundColor: options.backgroundColor,
            borderColor: options.borderColor,
            borderWidth: (_e = options.borderWidth) !== null && _e !== void 0 ? _e : 0,
            rotate: (_f = options.rotate) !== null && _f !== void 0 ? _f : rotations_1.degrees(0),
            hidden: options.hidden,
            page: page.ref
          });
          var widgetRef = this.doc.context.register(widget.dict);
          this.acroField.addWidget(widgetRef);
          var font = (_g = options.font) !== null && _g !== void 0 ? _g : this.doc.getForm().getDefaultFont();
          this.updateWidgetAppearance(widget, font);
          page.node.addAnnot(widgetRef);
        };
        PDFOptionList2.prototype.needsAppearancesUpdate = function() {
          var _a;
          if (this.isDirty())
            return true;
          var widgets = this.acroField.getWidgets();
          for (var idx = 0, len = widgets.length; idx < len; idx++) {
            var widget = widgets[idx];
            var hasAppearances = ((_a = widget.getAppearances()) === null || _a === void 0 ? void 0 : _a.normal) instanceof core_1.PDFStream;
            if (!hasAppearances)
              return true;
          }
          return false;
        };
        PDFOptionList2.prototype.defaultUpdateAppearances = function(font) {
          utils_1.assertIs(font, "font", [[PDFFont_1.default, "PDFFont"]]);
          this.updateAppearances(font);
        };
        PDFOptionList2.prototype.updateAppearances = function(font, provider) {
          utils_1.assertIs(font, "font", [[PDFFont_1.default, "PDFFont"]]);
          utils_1.assertOrUndefined(provider, "provider", [Function]);
          var widgets = this.acroField.getWidgets();
          for (var idx = 0, len = widgets.length; idx < len; idx++) {
            var widget = widgets[idx];
            this.updateWidgetAppearance(widget, font, provider);
          }
          this.markAsClean();
        };
        PDFOptionList2.prototype.updateWidgetAppearance = function(widget, font, provider) {
          var apProvider = provider !== null && provider !== void 0 ? provider : appearances_1.defaultOptionListAppearanceProvider;
          var appearances = appearances_1.normalizeAppearance(apProvider(this, widget, font));
          this.updateWidgetAppearanceWithFont(widget, font, appearances);
        };
        PDFOptionList2.of = function(acroListBox, ref, doc) {
          return new PDFOptionList2(acroListBox, ref, doc);
        };
        return PDFOptionList2;
      }(PDFField_1.default)
    );
    exports.default = PDFOptionList;
  }
});

// node_modules/pdf-lib/cjs/api/form/PDFRadioGroup.js
var require_PDFRadioGroup = __commonJS({
  "node_modules/pdf-lib/cjs/api/form/PDFRadioGroup.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFPage_1 = tslib_1.__importDefault(require_PDFPage());
    var PDFField_1 = tslib_1.__importStar(require_PDFField());
    var appearances_1 = require_appearances();
    var colors_1 = require_colors();
    var rotations_1 = require_rotations();
    var core_1 = require_core();
    var utils_1 = require_utils2();
    var PDFRadioGroup = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFRadioGroup2, _super);
        function PDFRadioGroup2(acroRadioButton, ref, doc) {
          var _this = _super.call(this, acroRadioButton, ref, doc) || this;
          utils_1.assertIs(acroRadioButton, "acroRadioButton", [
            [core_1.PDFAcroRadioButton, "PDFAcroRadioButton"]
          ]);
          _this.acroField = acroRadioButton;
          return _this;
        }
        PDFRadioGroup2.prototype.getOptions = function() {
          var exportValues = this.acroField.getExportValues();
          if (exportValues) {
            var exportOptions = new Array(exportValues.length);
            for (var idx = 0, len = exportValues.length; idx < len; idx++) {
              exportOptions[idx] = exportValues[idx].decodeText();
            }
            return exportOptions;
          }
          var onValues = this.acroField.getOnValues();
          var onOptions = new Array(onValues.length);
          for (var idx = 0, len = onOptions.length; idx < len; idx++) {
            onOptions[idx] = onValues[idx].decodeText();
          }
          return onOptions;
        };
        PDFRadioGroup2.prototype.getSelected = function() {
          var value = this.acroField.getValue();
          if (value === core_1.PDFName.of("Off"))
            return void 0;
          var exportValues = this.acroField.getExportValues();
          if (exportValues) {
            var onValues = this.acroField.getOnValues();
            for (var idx = 0, len = onValues.length; idx < len; idx++) {
              if (onValues[idx] === value)
                return exportValues[idx].decodeText();
            }
          }
          return value.decodeText();
        };
        PDFRadioGroup2.prototype.select = function(option) {
          utils_1.assertIs(option, "option", ["string"]);
          var validOptions = this.getOptions();
          utils_1.assertIsOneOf(option, "option", validOptions);
          this.markAsDirty();
          var onValues = this.acroField.getOnValues();
          var exportValues = this.acroField.getExportValues();
          if (exportValues) {
            for (var idx = 0, len = exportValues.length; idx < len; idx++) {
              if (exportValues[idx].decodeText() === option) {
                this.acroField.setValue(onValues[idx]);
              }
            }
          } else {
            for (var idx = 0, len = onValues.length; idx < len; idx++) {
              var value = onValues[idx];
              if (value.decodeText() === option)
                this.acroField.setValue(value);
            }
          }
        };
        PDFRadioGroup2.prototype.clear = function() {
          this.markAsDirty();
          this.acroField.setValue(core_1.PDFName.of("Off"));
        };
        PDFRadioGroup2.prototype.isOffToggleable = function() {
          return !this.acroField.hasFlag(core_1.AcroButtonFlags.NoToggleToOff);
        };
        PDFRadioGroup2.prototype.enableOffToggling = function() {
          this.acroField.setFlagTo(core_1.AcroButtonFlags.NoToggleToOff, false);
        };
        PDFRadioGroup2.prototype.disableOffToggling = function() {
          this.acroField.setFlagTo(core_1.AcroButtonFlags.NoToggleToOff, true);
        };
        PDFRadioGroup2.prototype.isMutuallyExclusive = function() {
          return !this.acroField.hasFlag(core_1.AcroButtonFlags.RadiosInUnison);
        };
        PDFRadioGroup2.prototype.enableMutualExclusion = function() {
          this.acroField.setFlagTo(core_1.AcroButtonFlags.RadiosInUnison, false);
        };
        PDFRadioGroup2.prototype.disableMutualExclusion = function() {
          this.acroField.setFlagTo(core_1.AcroButtonFlags.RadiosInUnison, true);
        };
        PDFRadioGroup2.prototype.addOptionToPage = function(option, page, options) {
          var _a, _b, _c, _d, _e, _f, _g, _h, _j;
          utils_1.assertIs(option, "option", ["string"]);
          utils_1.assertIs(page, "page", [[PDFPage_1.default, "PDFPage"]]);
          PDFField_1.assertFieldAppearanceOptions(options);
          var widget = this.createWidget({
            x: (_a = options === null || options === void 0 ? void 0 : options.x) !== null && _a !== void 0 ? _a : 0,
            y: (_b = options === null || options === void 0 ? void 0 : options.y) !== null && _b !== void 0 ? _b : 0,
            width: (_c = options === null || options === void 0 ? void 0 : options.width) !== null && _c !== void 0 ? _c : 50,
            height: (_d = options === null || options === void 0 ? void 0 : options.height) !== null && _d !== void 0 ? _d : 50,
            textColor: (_e = options === null || options === void 0 ? void 0 : options.textColor) !== null && _e !== void 0 ? _e : colors_1.rgb(0, 0, 0),
            backgroundColor: (_f = options === null || options === void 0 ? void 0 : options.backgroundColor) !== null && _f !== void 0 ? _f : colors_1.rgb(1, 1, 1),
            borderColor: (_g = options === null || options === void 0 ? void 0 : options.borderColor) !== null && _g !== void 0 ? _g : colors_1.rgb(0, 0, 0),
            borderWidth: (_h = options === null || options === void 0 ? void 0 : options.borderWidth) !== null && _h !== void 0 ? _h : 1,
            rotate: (_j = options === null || options === void 0 ? void 0 : options.rotate) !== null && _j !== void 0 ? _j : rotations_1.degrees(0),
            hidden: options === null || options === void 0 ? void 0 : options.hidden,
            page: page.ref
          });
          var widgetRef = this.doc.context.register(widget.dict);
          var apStateValue = this.acroField.addWidgetWithOpt(widgetRef, core_1.PDFHexString.fromText(option), !this.isMutuallyExclusive());
          widget.setAppearanceState(core_1.PDFName.of("Off"));
          this.updateWidgetAppearance(widget, apStateValue);
          page.node.addAnnot(widgetRef);
        };
        PDFRadioGroup2.prototype.needsAppearancesUpdate = function() {
          var _a;
          var widgets = this.acroField.getWidgets();
          for (var idx = 0, len = widgets.length; idx < len; idx++) {
            var widget = widgets[idx];
            var state = widget.getAppearanceState();
            var normal = (_a = widget.getAppearances()) === null || _a === void 0 ? void 0 : _a.normal;
            if (!(normal instanceof core_1.PDFDict))
              return true;
            if (state && !normal.has(state))
              return true;
          }
          return false;
        };
        PDFRadioGroup2.prototype.defaultUpdateAppearances = function() {
          this.updateAppearances();
        };
        PDFRadioGroup2.prototype.updateAppearances = function(provider) {
          utils_1.assertOrUndefined(provider, "provider", [Function]);
          var widgets = this.acroField.getWidgets();
          for (var idx = 0, len = widgets.length; idx < len; idx++) {
            var widget = widgets[idx];
            var onValue = widget.getOnValue();
            if (!onValue)
              continue;
            this.updateWidgetAppearance(widget, onValue, provider);
          }
        };
        PDFRadioGroup2.prototype.updateWidgetAppearance = function(widget, onValue, provider) {
          var apProvider = provider !== null && provider !== void 0 ? provider : appearances_1.defaultRadioGroupAppearanceProvider;
          var appearances = appearances_1.normalizeAppearance(apProvider(this, widget));
          this.updateOnOffWidgetAppearance(widget, onValue, appearances);
        };
        PDFRadioGroup2.of = function(acroRadioButton, ref, doc) {
          return new PDFRadioGroup2(acroRadioButton, ref, doc);
        };
        return PDFRadioGroup2;
      }(PDFField_1.default)
    );
    exports.default = PDFRadioGroup;
  }
});

// node_modules/pdf-lib/cjs/api/form/PDFSignature.js
var require_PDFSignature = __commonJS({
  "node_modules/pdf-lib/cjs/api/form/PDFSignature.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFField_1 = tslib_1.__importDefault(require_PDFField());
    var core_1 = require_core();
    var utils_1 = require_utils2();
    var PDFSignature = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFSignature2, _super);
        function PDFSignature2(acroSignature, ref, doc) {
          var _this = _super.call(this, acroSignature, ref, doc) || this;
          utils_1.assertIs(acroSignature, "acroSignature", [
            [core_1.PDFAcroSignature, "PDFAcroSignature"]
          ]);
          _this.acroField = acroSignature;
          return _this;
        }
        PDFSignature2.prototype.needsAppearancesUpdate = function() {
          return false;
        };
        PDFSignature2.of = function(acroSignature, ref, doc) {
          return new PDFSignature2(acroSignature, ref, doc);
        };
        return PDFSignature2;
      }(PDFField_1.default)
    );
    exports.default = PDFSignature;
  }
});

// node_modules/pdf-lib/cjs/api/form/PDFTextField.js
var require_PDFTextField = __commonJS({
  "node_modules/pdf-lib/cjs/api/form/PDFTextField.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFPage_1 = tslib_1.__importDefault(require_PDFPage());
    var PDFFont_1 = tslib_1.__importDefault(require_PDFFont());
    var PDFField_1 = tslib_1.__importStar(require_PDFField());
    var appearances_1 = require_appearances();
    var colors_1 = require_colors();
    var rotations_1 = require_rotations();
    var errors_1 = require_errors3();
    var alignment_1 = require_alignment2();
    var alignment_2 = require_alignment();
    var core_1 = require_core();
    var utils_1 = require_utils2();
    var PDFTextField = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFTextField2, _super);
        function PDFTextField2(acroText, ref, doc) {
          var _this = _super.call(this, acroText, ref, doc) || this;
          utils_1.assertIs(acroText, "acroText", [[core_1.PDFAcroText, "PDFAcroText"]]);
          _this.acroField = acroText;
          return _this;
        }
        PDFTextField2.prototype.getText = function() {
          var value = this.acroField.getValue();
          if (!value && this.isRichFormatted()) {
            throw new errors_1.RichTextFieldReadError(this.getName());
          }
          return value === null || value === void 0 ? void 0 : value.decodeText();
        };
        PDFTextField2.prototype.setText = function(text) {
          utils_1.assertOrUndefined(text, "text", ["string"]);
          var maxLength = this.getMaxLength();
          if (maxLength !== void 0 && text && text.length > maxLength) {
            throw new errors_1.ExceededMaxLengthError(text.length, maxLength, this.getName());
          }
          this.markAsDirty();
          this.disableRichFormatting();
          if (text) {
            this.acroField.setValue(core_1.PDFHexString.fromText(text));
          } else {
            this.acroField.removeValue();
          }
        };
        PDFTextField2.prototype.getAlignment = function() {
          var quadding = this.acroField.getQuadding();
          return quadding === 0 ? alignment_2.TextAlignment.Left : quadding === 1 ? alignment_2.TextAlignment.Center : quadding === 2 ? alignment_2.TextAlignment.Right : alignment_2.TextAlignment.Left;
        };
        PDFTextField2.prototype.setAlignment = function(alignment) {
          utils_1.assertIsOneOf(alignment, "alignment", alignment_2.TextAlignment);
          this.markAsDirty();
          this.acroField.setQuadding(alignment);
        };
        PDFTextField2.prototype.getMaxLength = function() {
          return this.acroField.getMaxLength();
        };
        PDFTextField2.prototype.setMaxLength = function(maxLength) {
          utils_1.assertRangeOrUndefined(maxLength, "maxLength", 0, Number.MAX_SAFE_INTEGER);
          this.markAsDirty();
          if (maxLength === void 0) {
            this.acroField.removeMaxLength();
          } else {
            var text = this.getText();
            if (text && text.length > maxLength) {
              throw new errors_1.InvalidMaxLengthError(text.length, maxLength, this.getName());
            }
            this.acroField.setMaxLength(maxLength);
          }
        };
        PDFTextField2.prototype.removeMaxLength = function() {
          this.markAsDirty();
          this.acroField.removeMaxLength();
        };
        PDFTextField2.prototype.setImage = function(image) {
          var fieldAlignment = this.getAlignment();
          var alignment = fieldAlignment === alignment_2.TextAlignment.Center ? alignment_1.ImageAlignment.Center : fieldAlignment === alignment_2.TextAlignment.Right ? alignment_1.ImageAlignment.Right : alignment_1.ImageAlignment.Left;
          var widgets = this.acroField.getWidgets();
          for (var idx = 0, len = widgets.length; idx < len; idx++) {
            var widget = widgets[idx];
            var streamRef = this.createImageAppearanceStream(widget, image, alignment);
            this.updateWidgetAppearances(widget, { normal: streamRef });
          }
          this.markAsClean();
        };
        PDFTextField2.prototype.setFontSize = function(fontSize) {
          utils_1.assertPositive(fontSize, "fontSize");
          this.acroField.setFontSize(fontSize);
          this.markAsDirty();
        };
        PDFTextField2.prototype.isMultiline = function() {
          return this.acroField.hasFlag(core_1.AcroTextFlags.Multiline);
        };
        PDFTextField2.prototype.enableMultiline = function() {
          this.markAsDirty();
          this.acroField.setFlagTo(core_1.AcroTextFlags.Multiline, true);
        };
        PDFTextField2.prototype.disableMultiline = function() {
          this.markAsDirty();
          this.acroField.setFlagTo(core_1.AcroTextFlags.Multiline, false);
        };
        PDFTextField2.prototype.isPassword = function() {
          return this.acroField.hasFlag(core_1.AcroTextFlags.Password);
        };
        PDFTextField2.prototype.enablePassword = function() {
          this.acroField.setFlagTo(core_1.AcroTextFlags.Password, true);
        };
        PDFTextField2.prototype.disablePassword = function() {
          this.acroField.setFlagTo(core_1.AcroTextFlags.Password, false);
        };
        PDFTextField2.prototype.isFileSelector = function() {
          return this.acroField.hasFlag(core_1.AcroTextFlags.FileSelect);
        };
        PDFTextField2.prototype.enableFileSelection = function() {
          this.acroField.setFlagTo(core_1.AcroTextFlags.FileSelect, true);
        };
        PDFTextField2.prototype.disableFileSelection = function() {
          this.acroField.setFlagTo(core_1.AcroTextFlags.FileSelect, false);
        };
        PDFTextField2.prototype.isSpellChecked = function() {
          return !this.acroField.hasFlag(core_1.AcroTextFlags.DoNotSpellCheck);
        };
        PDFTextField2.prototype.enableSpellChecking = function() {
          this.acroField.setFlagTo(core_1.AcroTextFlags.DoNotSpellCheck, false);
        };
        PDFTextField2.prototype.disableSpellChecking = function() {
          this.acroField.setFlagTo(core_1.AcroTextFlags.DoNotSpellCheck, true);
        };
        PDFTextField2.prototype.isScrollable = function() {
          return !this.acroField.hasFlag(core_1.AcroTextFlags.DoNotScroll);
        };
        PDFTextField2.prototype.enableScrolling = function() {
          this.acroField.setFlagTo(core_1.AcroTextFlags.DoNotScroll, false);
        };
        PDFTextField2.prototype.disableScrolling = function() {
          this.acroField.setFlagTo(core_1.AcroTextFlags.DoNotScroll, true);
        };
        PDFTextField2.prototype.isCombed = function() {
          return this.acroField.hasFlag(core_1.AcroTextFlags.Comb) && !this.isMultiline() && !this.isPassword() && !this.isFileSelector() && this.getMaxLength() !== void 0;
        };
        PDFTextField2.prototype.enableCombing = function() {
          if (this.getMaxLength() === void 0) {
            var msg = "PDFTextFields must have a max length in order to be combed";
            console.warn(msg);
          }
          this.markAsDirty();
          this.disableMultiline();
          this.disablePassword();
          this.disableFileSelection();
          this.acroField.setFlagTo(core_1.AcroTextFlags.Comb, true);
        };
        PDFTextField2.prototype.disableCombing = function() {
          this.markAsDirty();
          this.acroField.setFlagTo(core_1.AcroTextFlags.Comb, false);
        };
        PDFTextField2.prototype.isRichFormatted = function() {
          return this.acroField.hasFlag(core_1.AcroTextFlags.RichText);
        };
        PDFTextField2.prototype.enableRichFormatting = function() {
          this.acroField.setFlagTo(core_1.AcroTextFlags.RichText, true);
        };
        PDFTextField2.prototype.disableRichFormatting = function() {
          this.acroField.setFlagTo(core_1.AcroTextFlags.RichText, false);
        };
        PDFTextField2.prototype.addToPage = function(page, options) {
          var _a, _b, _c, _d, _e, _f, _g;
          utils_1.assertIs(page, "page", [[PDFPage_1.default, "PDFPage"]]);
          PDFField_1.assertFieldAppearanceOptions(options);
          if (!options)
            options = {};
          if (!("textColor" in options))
            options.textColor = colors_1.rgb(0, 0, 0);
          if (!("backgroundColor" in options))
            options.backgroundColor = colors_1.rgb(1, 1, 1);
          if (!("borderColor" in options))
            options.borderColor = colors_1.rgb(0, 0, 0);
          if (!("borderWidth" in options))
            options.borderWidth = 1;
          var widget = this.createWidget({
            x: (_a = options.x) !== null && _a !== void 0 ? _a : 0,
            y: (_b = options.y) !== null && _b !== void 0 ? _b : 0,
            width: (_c = options.width) !== null && _c !== void 0 ? _c : 200,
            height: (_d = options.height) !== null && _d !== void 0 ? _d : 50,
            textColor: options.textColor,
            backgroundColor: options.backgroundColor,
            borderColor: options.borderColor,
            borderWidth: (_e = options.borderWidth) !== null && _e !== void 0 ? _e : 0,
            rotate: (_f = options.rotate) !== null && _f !== void 0 ? _f : rotations_1.degrees(0),
            hidden: options.hidden,
            page: page.ref
          });
          var widgetRef = this.doc.context.register(widget.dict);
          this.acroField.addWidget(widgetRef);
          var font = (_g = options.font) !== null && _g !== void 0 ? _g : this.doc.getForm().getDefaultFont();
          this.updateWidgetAppearance(widget, font);
          page.node.addAnnot(widgetRef);
        };
        PDFTextField2.prototype.needsAppearancesUpdate = function() {
          var _a;
          if (this.isDirty())
            return true;
          var widgets = this.acroField.getWidgets();
          for (var idx = 0, len = widgets.length; idx < len; idx++) {
            var widget = widgets[idx];
            var hasAppearances = ((_a = widget.getAppearances()) === null || _a === void 0 ? void 0 : _a.normal) instanceof core_1.PDFStream;
            if (!hasAppearances)
              return true;
          }
          return false;
        };
        PDFTextField2.prototype.defaultUpdateAppearances = function(font) {
          utils_1.assertIs(font, "font", [[PDFFont_1.default, "PDFFont"]]);
          this.updateAppearances(font);
        };
        PDFTextField2.prototype.updateAppearances = function(font, provider) {
          utils_1.assertIs(font, "font", [[PDFFont_1.default, "PDFFont"]]);
          utils_1.assertOrUndefined(provider, "provider", [Function]);
          var widgets = this.acroField.getWidgets();
          for (var idx = 0, len = widgets.length; idx < len; idx++) {
            var widget = widgets[idx];
            this.updateWidgetAppearance(widget, font, provider);
          }
          this.markAsClean();
        };
        PDFTextField2.prototype.updateWidgetAppearance = function(widget, font, provider) {
          var apProvider = provider !== null && provider !== void 0 ? provider : appearances_1.defaultTextFieldAppearanceProvider;
          var appearances = appearances_1.normalizeAppearance(apProvider(this, widget, font));
          this.updateWidgetAppearanceWithFont(widget, font, appearances);
        };
        PDFTextField2.of = function(acroText, ref, doc) {
          return new PDFTextField2(acroText, ref, doc);
        };
        return PDFTextField2;
      }(PDFField_1.default)
    );
    exports.default = PDFTextField;
  }
});

// node_modules/pdf-lib/cjs/api/StandardFonts.js
var require_StandardFonts = __commonJS({
  "node_modules/pdf-lib/cjs/api/StandardFonts.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.StandardFonts = void 0;
    var StandardFonts;
    (function(StandardFonts2) {
      StandardFonts2["Courier"] = "Courier";
      StandardFonts2["CourierBold"] = "Courier-Bold";
      StandardFonts2["CourierOblique"] = "Courier-Oblique";
      StandardFonts2["CourierBoldOblique"] = "Courier-BoldOblique";
      StandardFonts2["Helvetica"] = "Helvetica";
      StandardFonts2["HelveticaBold"] = "Helvetica-Bold";
      StandardFonts2["HelveticaOblique"] = "Helvetica-Oblique";
      StandardFonts2["HelveticaBoldOblique"] = "Helvetica-BoldOblique";
      StandardFonts2["TimesRoman"] = "Times-Roman";
      StandardFonts2["TimesRomanBold"] = "Times-Bold";
      StandardFonts2["TimesRomanItalic"] = "Times-Italic";
      StandardFonts2["TimesRomanBoldItalic"] = "Times-BoldItalic";
      StandardFonts2["Symbol"] = "Symbol";
      StandardFonts2["ZapfDingbats"] = "ZapfDingbats";
    })(StandardFonts = exports.StandardFonts || (exports.StandardFonts = {}));
  }
});

// node_modules/pdf-lib/cjs/api/form/PDFForm.js
var require_PDFForm = __commonJS({
  "node_modules/pdf-lib/cjs/api/form/PDFForm.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFDocument_1 = tslib_1.__importDefault(require_PDFDocument());
    var PDFButton_1 = tslib_1.__importDefault(require_PDFButton());
    var PDFCheckBox_1 = tslib_1.__importDefault(require_PDFCheckBox());
    var PDFDropdown_1 = tslib_1.__importDefault(require_PDFDropdown());
    var PDFOptionList_1 = tslib_1.__importDefault(require_PDFOptionList());
    var PDFRadioGroup_1 = tslib_1.__importDefault(require_PDFRadioGroup());
    var PDFSignature_1 = tslib_1.__importDefault(require_PDFSignature());
    var PDFTextField_1 = tslib_1.__importDefault(require_PDFTextField());
    var errors_1 = require_errors3();
    var PDFFont_1 = tslib_1.__importDefault(require_PDFFont());
    var StandardFonts_1 = require_StandardFonts();
    var operations_1 = require_operations();
    var operators_1 = require_operators();
    var core_1 = require_core();
    var utils_1 = require_utils2();
    var PDFForm = (
      /** @class */
      function() {
        function PDFForm2(acroForm, doc) {
          var _this = this;
          this.embedDefaultFont = function() {
            return _this.doc.embedStandardFont(StandardFonts_1.StandardFonts.Helvetica);
          };
          utils_1.assertIs(acroForm, "acroForm", [[core_1.PDFAcroForm, "PDFAcroForm"]]);
          utils_1.assertIs(doc, "doc", [[PDFDocument_1.default, "PDFDocument"]]);
          this.acroForm = acroForm;
          this.doc = doc;
          this.dirtyFields = /* @__PURE__ */ new Set();
          this.defaultFontCache = utils_1.Cache.populatedBy(this.embedDefaultFont);
        }
        PDFForm2.prototype.hasXFA = function() {
          return this.acroForm.dict.has(core_1.PDFName.of("XFA"));
        };
        PDFForm2.prototype.deleteXFA = function() {
          this.acroForm.dict.delete(core_1.PDFName.of("XFA"));
        };
        PDFForm2.prototype.getFields = function() {
          var allFields = this.acroForm.getAllFields();
          var fields = [];
          for (var idx = 0, len = allFields.length; idx < len; idx++) {
            var _a = allFields[idx], acroField = _a[0], ref = _a[1];
            var field = convertToPDFField(acroField, ref, this.doc);
            if (field)
              fields.push(field);
          }
          return fields;
        };
        PDFForm2.prototype.getFieldMaybe = function(name) {
          utils_1.assertIs(name, "name", ["string"]);
          var fields = this.getFields();
          for (var idx = 0, len = fields.length; idx < len; idx++) {
            var field = fields[idx];
            if (field.getName() === name)
              return field;
          }
          return void 0;
        };
        PDFForm2.prototype.getField = function(name) {
          utils_1.assertIs(name, "name", ["string"]);
          var field = this.getFieldMaybe(name);
          if (field)
            return field;
          throw new errors_1.NoSuchFieldError(name);
        };
        PDFForm2.prototype.getButton = function(name) {
          utils_1.assertIs(name, "name", ["string"]);
          var field = this.getField(name);
          if (field instanceof PDFButton_1.default)
            return field;
          throw new errors_1.UnexpectedFieldTypeError(name, PDFButton_1.default, field);
        };
        PDFForm2.prototype.getCheckBox = function(name) {
          utils_1.assertIs(name, "name", ["string"]);
          var field = this.getField(name);
          if (field instanceof PDFCheckBox_1.default)
            return field;
          throw new errors_1.UnexpectedFieldTypeError(name, PDFCheckBox_1.default, field);
        };
        PDFForm2.prototype.getDropdown = function(name) {
          utils_1.assertIs(name, "name", ["string"]);
          var field = this.getField(name);
          if (field instanceof PDFDropdown_1.default)
            return field;
          throw new errors_1.UnexpectedFieldTypeError(name, PDFDropdown_1.default, field);
        };
        PDFForm2.prototype.getOptionList = function(name) {
          utils_1.assertIs(name, "name", ["string"]);
          var field = this.getField(name);
          if (field instanceof PDFOptionList_1.default)
            return field;
          throw new errors_1.UnexpectedFieldTypeError(name, PDFOptionList_1.default, field);
        };
        PDFForm2.prototype.getRadioGroup = function(name) {
          utils_1.assertIs(name, "name", ["string"]);
          var field = this.getField(name);
          if (field instanceof PDFRadioGroup_1.default)
            return field;
          throw new errors_1.UnexpectedFieldTypeError(name, PDFRadioGroup_1.default, field);
        };
        PDFForm2.prototype.getSignature = function(name) {
          utils_1.assertIs(name, "name", ["string"]);
          var field = this.getField(name);
          if (field instanceof PDFSignature_1.default)
            return field;
          throw new errors_1.UnexpectedFieldTypeError(name, PDFSignature_1.default, field);
        };
        PDFForm2.prototype.getTextField = function(name) {
          utils_1.assertIs(name, "name", ["string"]);
          var field = this.getField(name);
          if (field instanceof PDFTextField_1.default)
            return field;
          throw new errors_1.UnexpectedFieldTypeError(name, PDFTextField_1.default, field);
        };
        PDFForm2.prototype.createButton = function(name) {
          utils_1.assertIs(name, "name", ["string"]);
          var nameParts = splitFieldName(name);
          var parent = this.findOrCreateNonTerminals(nameParts.nonTerminal);
          var button = core_1.PDFAcroPushButton.create(this.doc.context);
          button.setPartialName(nameParts.terminal);
          addFieldToParent(parent, [button, button.ref], nameParts.terminal);
          return PDFButton_1.default.of(button, button.ref, this.doc);
        };
        PDFForm2.prototype.createCheckBox = function(name) {
          utils_1.assertIs(name, "name", ["string"]);
          var nameParts = splitFieldName(name);
          var parent = this.findOrCreateNonTerminals(nameParts.nonTerminal);
          var checkBox = core_1.PDFAcroCheckBox.create(this.doc.context);
          checkBox.setPartialName(nameParts.terminal);
          addFieldToParent(parent, [checkBox, checkBox.ref], nameParts.terminal);
          return PDFCheckBox_1.default.of(checkBox, checkBox.ref, this.doc);
        };
        PDFForm2.prototype.createDropdown = function(name) {
          utils_1.assertIs(name, "name", ["string"]);
          var nameParts = splitFieldName(name);
          var parent = this.findOrCreateNonTerminals(nameParts.nonTerminal);
          var comboBox = core_1.PDFAcroComboBox.create(this.doc.context);
          comboBox.setPartialName(nameParts.terminal);
          addFieldToParent(parent, [comboBox, comboBox.ref], nameParts.terminal);
          return PDFDropdown_1.default.of(comboBox, comboBox.ref, this.doc);
        };
        PDFForm2.prototype.createOptionList = function(name) {
          utils_1.assertIs(name, "name", ["string"]);
          var nameParts = splitFieldName(name);
          var parent = this.findOrCreateNonTerminals(nameParts.nonTerminal);
          var listBox = core_1.PDFAcroListBox.create(this.doc.context);
          listBox.setPartialName(nameParts.terminal);
          addFieldToParent(parent, [listBox, listBox.ref], nameParts.terminal);
          return PDFOptionList_1.default.of(listBox, listBox.ref, this.doc);
        };
        PDFForm2.prototype.createRadioGroup = function(name) {
          utils_1.assertIs(name, "name", ["string"]);
          var nameParts = splitFieldName(name);
          var parent = this.findOrCreateNonTerminals(nameParts.nonTerminal);
          var radioButton = core_1.PDFAcroRadioButton.create(this.doc.context);
          radioButton.setPartialName(nameParts.terminal);
          addFieldToParent(parent, [radioButton, radioButton.ref], nameParts.terminal);
          return PDFRadioGroup_1.default.of(radioButton, radioButton.ref, this.doc);
        };
        PDFForm2.prototype.createTextField = function(name) {
          utils_1.assertIs(name, "name", ["string"]);
          var nameParts = splitFieldName(name);
          var parent = this.findOrCreateNonTerminals(nameParts.nonTerminal);
          var text = core_1.PDFAcroText.create(this.doc.context);
          text.setPartialName(nameParts.terminal);
          addFieldToParent(parent, [text, text.ref], nameParts.terminal);
          return PDFTextField_1.default.of(text, text.ref, this.doc);
        };
        PDFForm2.prototype.flatten = function(options) {
          if (options === void 0) {
            options = { updateFieldAppearances: true };
          }
          if (options.updateFieldAppearances) {
            this.updateFieldAppearances();
          }
          var fields = this.getFields();
          for (var i = 0, lenFields = fields.length; i < lenFields; i++) {
            var field = fields[i];
            var widgets = field.acroField.getWidgets();
            for (var j = 0, lenWidgets = widgets.length; j < lenWidgets; j++) {
              var widget = widgets[j];
              var page = this.findWidgetPage(widget);
              var widgetRef = this.findWidgetAppearanceRef(field, widget);
              var xObjectKey = page.node.newXObject("FlatWidget", widgetRef);
              var rectangle = widget.getRectangle();
              var operators = tslib_1.__spreadArrays([
                operators_1.pushGraphicsState(),
                operators_1.translate(rectangle.x, rectangle.y)
              ], operations_1.rotateInPlace(tslib_1.__assign(tslib_1.__assign({}, rectangle), { rotation: 0 })), [
                operators_1.drawObject(xObjectKey),
                operators_1.popGraphicsState()
              ]).filter(Boolean);
              page.pushOperators.apply(page, operators);
            }
            this.removeField(field);
          }
        };
        PDFForm2.prototype.removeField = function(field) {
          var widgets = field.acroField.getWidgets();
          var pages = /* @__PURE__ */ new Set();
          for (var i = 0, len = widgets.length; i < len; i++) {
            var widget = widgets[i];
            var widgetRef = this.findWidgetAppearanceRef(field, widget);
            var page = this.findWidgetPage(widget);
            pages.add(page);
            page.node.removeAnnot(widgetRef);
          }
          pages.forEach(function(page2) {
            return page2.node.removeAnnot(field.ref);
          });
          this.acroForm.removeField(field.acroField);
          var fieldKids = field.acroField.normalizedEntries().Kids;
          var kidsCount = fieldKids.size();
          for (var childIndex = 0; childIndex < kidsCount; childIndex++) {
            var child = fieldKids.get(childIndex);
            if (child instanceof core_1.PDFRef) {
              this.doc.context.delete(child);
            }
          }
          this.doc.context.delete(field.ref);
        };
        PDFForm2.prototype.updateFieldAppearances = function(font) {
          utils_1.assertOrUndefined(font, "font", [[PDFFont_1.default, "PDFFont"]]);
          font = font !== null && font !== void 0 ? font : this.getDefaultFont();
          var fields = this.getFields();
          for (var idx = 0, len = fields.length; idx < len; idx++) {
            var field = fields[idx];
            if (field.needsAppearancesUpdate()) {
              field.defaultUpdateAppearances(font);
            }
          }
        };
        PDFForm2.prototype.markFieldAsDirty = function(fieldRef) {
          utils_1.assertOrUndefined(fieldRef, "fieldRef", [[core_1.PDFRef, "PDFRef"]]);
          this.dirtyFields.add(fieldRef);
        };
        PDFForm2.prototype.markFieldAsClean = function(fieldRef) {
          utils_1.assertOrUndefined(fieldRef, "fieldRef", [[core_1.PDFRef, "PDFRef"]]);
          this.dirtyFields.delete(fieldRef);
        };
        PDFForm2.prototype.fieldIsDirty = function(fieldRef) {
          utils_1.assertOrUndefined(fieldRef, "fieldRef", [[core_1.PDFRef, "PDFRef"]]);
          return this.dirtyFields.has(fieldRef);
        };
        PDFForm2.prototype.getDefaultFont = function() {
          return this.defaultFontCache.access();
        };
        PDFForm2.prototype.findWidgetPage = function(widget) {
          var pageRef = widget.P();
          var page = this.doc.getPages().find(function(x) {
            return x.ref === pageRef;
          });
          if (page === void 0) {
            var widgetRef = this.doc.context.getObjectRef(widget.dict);
            if (widgetRef === void 0) {
              throw new Error("Could not find PDFRef for PDFObject");
            }
            page = this.doc.findPageForAnnotationRef(widgetRef);
            if (page === void 0) {
              throw new Error("Could not find page for PDFRef " + widgetRef);
            }
          }
          return page;
        };
        PDFForm2.prototype.findWidgetAppearanceRef = function(field, widget) {
          var _a;
          var refOrDict = widget.getNormalAppearance();
          if (refOrDict instanceof core_1.PDFDict && (field instanceof PDFCheckBox_1.default || field instanceof PDFRadioGroup_1.default)) {
            var value = field.acroField.getValue();
            var ref = (_a = refOrDict.get(value)) !== null && _a !== void 0 ? _a : refOrDict.get(core_1.PDFName.of("Off"));
            if (ref instanceof core_1.PDFRef) {
              refOrDict = ref;
            }
          }
          if (!(refOrDict instanceof core_1.PDFRef)) {
            var name_1 = field.getName();
            throw new Error("Failed to extract appearance ref for: " + name_1);
          }
          return refOrDict;
        };
        PDFForm2.prototype.findOrCreateNonTerminals = function(partialNames) {
          var nonTerminal = [
            this.acroForm
          ];
          for (var idx = 0, len = partialNames.length; idx < len; idx++) {
            var namePart = partialNames[idx];
            if (!namePart)
              throw new errors_1.InvalidFieldNamePartError(namePart);
            var parent_1 = nonTerminal[0], parentRef = nonTerminal[1];
            var res = this.findNonTerminal(namePart, parent_1);
            if (res) {
              nonTerminal = res;
            } else {
              var node = core_1.PDFAcroNonTerminal.create(this.doc.context);
              node.setPartialName(namePart);
              node.setParent(parentRef);
              var nodeRef = this.doc.context.register(node.dict);
              parent_1.addField(nodeRef);
              nonTerminal = [node, nodeRef];
            }
          }
          return nonTerminal;
        };
        PDFForm2.prototype.findNonTerminal = function(partialName, parent) {
          var fields = parent instanceof core_1.PDFAcroForm ? this.acroForm.getFields() : core_1.createPDFAcroFields(parent.Kids());
          for (var idx = 0, len = fields.length; idx < len; idx++) {
            var _a = fields[idx], field = _a[0], ref = _a[1];
            if (field.getPartialName() === partialName) {
              if (field instanceof core_1.PDFAcroNonTerminal)
                return [field, ref];
              throw new errors_1.FieldAlreadyExistsError(partialName);
            }
          }
          return void 0;
        };
        PDFForm2.of = function(acroForm, doc) {
          return new PDFForm2(acroForm, doc);
        };
        return PDFForm2;
      }()
    );
    exports.default = PDFForm;
    var convertToPDFField = function(field, ref, doc) {
      if (field instanceof core_1.PDFAcroPushButton)
        return PDFButton_1.default.of(field, ref, doc);
      if (field instanceof core_1.PDFAcroCheckBox)
        return PDFCheckBox_1.default.of(field, ref, doc);
      if (field instanceof core_1.PDFAcroComboBox)
        return PDFDropdown_1.default.of(field, ref, doc);
      if (field instanceof core_1.PDFAcroListBox)
        return PDFOptionList_1.default.of(field, ref, doc);
      if (field instanceof core_1.PDFAcroText)
        return PDFTextField_1.default.of(field, ref, doc);
      if (field instanceof core_1.PDFAcroRadioButton) {
        return PDFRadioGroup_1.default.of(field, ref, doc);
      }
      if (field instanceof core_1.PDFAcroSignature) {
        return PDFSignature_1.default.of(field, ref, doc);
      }
      return void 0;
    };
    var splitFieldName = function(fullyQualifiedName) {
      if (fullyQualifiedName.length === 0) {
        throw new Error("PDF field names must not be empty strings");
      }
      var parts = fullyQualifiedName.split(".");
      for (var idx = 0, len = parts.length; idx < len; idx++) {
        if (parts[idx] === "") {
          throw new Error('Periods in PDF field names must be separated by at least one character: "' + fullyQualifiedName + '"');
        }
      }
      if (parts.length === 1)
        return { nonTerminal: [], terminal: parts[0] };
      return {
        nonTerminal: parts.slice(0, parts.length - 1),
        terminal: parts[parts.length - 1]
      };
    };
    var addFieldToParent = function(_a, _b, partialName) {
      var parent = _a[0], parentRef = _a[1];
      var field = _b[0], fieldRef = _b[1];
      var entries = parent.normalizedEntries();
      var fields = core_1.createPDFAcroFields("Kids" in entries ? entries.Kids : entries.Fields);
      for (var idx = 0, len = fields.length; idx < len; idx++) {
        if (fields[idx][0].getPartialName() === partialName) {
          throw new errors_1.FieldAlreadyExistsError(partialName);
        }
      }
      parent.addField(fieldRef);
      field.setParent(parentRef);
    };
  }
});

// node_modules/pdf-lib/cjs/api/sizes.js
var require_sizes = __commonJS({
  "node_modules/pdf-lib/cjs/api/sizes.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PageSizes = void 0;
    exports.PageSizes = {
      "4A0": [4767.87, 6740.79],
      "2A0": [3370.39, 4767.87],
      A0: [2383.94, 3370.39],
      A1: [1683.78, 2383.94],
      A2: [1190.55, 1683.78],
      A3: [841.89, 1190.55],
      A4: [595.28, 841.89],
      A5: [419.53, 595.28],
      A6: [297.64, 419.53],
      A7: [209.76, 297.64],
      A8: [147.4, 209.76],
      A9: [104.88, 147.4],
      A10: [73.7, 104.88],
      B0: [2834.65, 4008.19],
      B1: [2004.09, 2834.65],
      B2: [1417.32, 2004.09],
      B3: [1000.63, 1417.32],
      B4: [708.66, 1000.63],
      B5: [498.9, 708.66],
      B6: [354.33, 498.9],
      B7: [249.45, 354.33],
      B8: [175.75, 249.45],
      B9: [124.72, 175.75],
      B10: [87.87, 124.72],
      C0: [2599.37, 3676.54],
      C1: [1836.85, 2599.37],
      C2: [1298.27, 1836.85],
      C3: [918.43, 1298.27],
      C4: [649.13, 918.43],
      C5: [459.21, 649.13],
      C6: [323.15, 459.21],
      C7: [229.61, 323.15],
      C8: [161.57, 229.61],
      C9: [113.39, 161.57],
      C10: [79.37, 113.39],
      RA0: [2437.8, 3458.27],
      RA1: [1729.13, 2437.8],
      RA2: [1218.9, 1729.13],
      RA3: [864.57, 1218.9],
      RA4: [609.45, 864.57],
      SRA0: [2551.18, 3628.35],
      SRA1: [1814.17, 2551.18],
      SRA2: [1275.59, 1814.17],
      SRA3: [907.09, 1275.59],
      SRA4: [637.8, 907.09],
      Executive: [521.86, 756],
      Folio: [612, 936],
      Legal: [612, 1008],
      Letter: [612, 792],
      Tabloid: [792, 1224]
    };
  }
});

// node_modules/pdf-lib/cjs/api/PDFDocumentOptions.js
var require_PDFDocumentOptions = __commonJS({
  "node_modules/pdf-lib/cjs/api/PDFDocumentOptions.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ParseSpeeds = void 0;
    var ParseSpeeds;
    (function(ParseSpeeds2) {
      ParseSpeeds2[ParseSpeeds2["Fastest"] = Infinity] = "Fastest";
      ParseSpeeds2[ParseSpeeds2["Fast"] = 1500] = "Fast";
      ParseSpeeds2[ParseSpeeds2["Medium"] = 500] = "Medium";
      ParseSpeeds2[ParseSpeeds2["Slow"] = 100] = "Slow";
    })(ParseSpeeds = exports.ParseSpeeds || (exports.ParseSpeeds = {}));
  }
});

// node_modules/pdf-lib/cjs/api/PDFEmbeddedFile.js
var require_PDFEmbeddedFile = __commonJS({
  "node_modules/pdf-lib/cjs/api/PDFEmbeddedFile.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var core_1 = require_core();
    var PDFEmbeddedFile = (
      /** @class */
      function() {
        function PDFEmbeddedFile2(ref, doc, embedder) {
          this.alreadyEmbedded = false;
          this.ref = ref;
          this.doc = doc;
          this.embedder = embedder;
        }
        PDFEmbeddedFile2.prototype.embed = function() {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var ref, Names, EmbeddedFiles, EFNames, AF;
            return tslib_1.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  if (!!this.alreadyEmbedded)
                    return [3, 2];
                  return [4, this.embedder.embedIntoContext(this.doc.context, this.ref)];
                case 1:
                  ref = _a.sent();
                  if (!this.doc.catalog.has(core_1.PDFName.of("Names"))) {
                    this.doc.catalog.set(core_1.PDFName.of("Names"), this.doc.context.obj({}));
                  }
                  Names = this.doc.catalog.lookup(core_1.PDFName.of("Names"), core_1.PDFDict);
                  if (!Names.has(core_1.PDFName.of("EmbeddedFiles"))) {
                    Names.set(core_1.PDFName.of("EmbeddedFiles"), this.doc.context.obj({}));
                  }
                  EmbeddedFiles = Names.lookup(core_1.PDFName.of("EmbeddedFiles"), core_1.PDFDict);
                  if (!EmbeddedFiles.has(core_1.PDFName.of("Names"))) {
                    EmbeddedFiles.set(core_1.PDFName.of("Names"), this.doc.context.obj([]));
                  }
                  EFNames = EmbeddedFiles.lookup(core_1.PDFName.of("Names"), core_1.PDFArray);
                  EFNames.push(core_1.PDFHexString.fromText(this.embedder.fileName));
                  EFNames.push(ref);
                  if (!this.doc.catalog.has(core_1.PDFName.of("AF"))) {
                    this.doc.catalog.set(core_1.PDFName.of("AF"), this.doc.context.obj([]));
                  }
                  AF = this.doc.catalog.lookup(core_1.PDFName.of("AF"), core_1.PDFArray);
                  AF.push(ref);
                  this.alreadyEmbedded = true;
                  _a.label = 2;
                case 2:
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        };
        PDFEmbeddedFile2.of = function(ref, doc, embedder) {
          return new PDFEmbeddedFile2(ref, doc, embedder);
        };
        return PDFEmbeddedFile2;
      }()
    );
    exports.default = PDFEmbeddedFile;
  }
});

// node_modules/pdf-lib/cjs/api/PDFJavaScript.js
var require_PDFJavaScript = __commonJS({
  "node_modules/pdf-lib/cjs/api/PDFJavaScript.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var core_1 = require_core();
    var PDFJavaScript = (
      /** @class */
      function() {
        function PDFJavaScript2(ref, doc, embedder) {
          this.alreadyEmbedded = false;
          this.ref = ref;
          this.doc = doc;
          this.embedder = embedder;
        }
        PDFJavaScript2.prototype.embed = function() {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var _a, catalog, context, ref, Names, Javascript, JSNames;
            return tslib_1.__generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  if (!!this.alreadyEmbedded)
                    return [3, 2];
                  _a = this.doc, catalog = _a.catalog, context = _a.context;
                  return [4, this.embedder.embedIntoContext(this.doc.context, this.ref)];
                case 1:
                  ref = _b.sent();
                  if (!catalog.has(core_1.PDFName.of("Names"))) {
                    catalog.set(core_1.PDFName.of("Names"), context.obj({}));
                  }
                  Names = catalog.lookup(core_1.PDFName.of("Names"), core_1.PDFDict);
                  if (!Names.has(core_1.PDFName.of("JavaScript"))) {
                    Names.set(core_1.PDFName.of("JavaScript"), context.obj({}));
                  }
                  Javascript = Names.lookup(core_1.PDFName.of("JavaScript"), core_1.PDFDict);
                  if (!Javascript.has(core_1.PDFName.of("Names"))) {
                    Javascript.set(core_1.PDFName.of("Names"), context.obj([]));
                  }
                  JSNames = Javascript.lookup(core_1.PDFName.of("Names"), core_1.PDFArray);
                  JSNames.push(core_1.PDFHexString.fromText(this.embedder.scriptName));
                  JSNames.push(ref);
                  this.alreadyEmbedded = true;
                  _b.label = 2;
                case 2:
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        };
        PDFJavaScript2.of = function(ref, doc, embedder) {
          return new PDFJavaScript2(ref, doc, embedder);
        };
        return PDFJavaScript2;
      }()
    );
    exports.default = PDFJavaScript;
  }
});

// node_modules/pdf-lib/cjs/core/embedders/JavaScriptEmbedder.js
var require_JavaScriptEmbedder = __commonJS({
  "node_modules/pdf-lib/cjs/core/embedders/JavaScriptEmbedder.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFHexString_1 = tslib_1.__importDefault(require_PDFHexString());
    var JavaScriptEmbedder = (
      /** @class */
      function() {
        function JavaScriptEmbedder2(script, scriptName) {
          this.script = script;
          this.scriptName = scriptName;
        }
        JavaScriptEmbedder2.for = function(script, scriptName) {
          return new JavaScriptEmbedder2(script, scriptName);
        };
        JavaScriptEmbedder2.prototype.embedIntoContext = function(context, ref) {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var jsActionDict;
            return tslib_1.__generator(this, function(_a) {
              jsActionDict = context.obj({
                Type: "Action",
                S: "JavaScript",
                JS: PDFHexString_1.default.fromText(this.script)
              });
              if (ref) {
                context.assign(ref, jsActionDict);
                return [2, ref];
              } else {
                return [2, context.register(jsActionDict)];
              }
              return [
                2
                /*return*/
              ];
            });
          });
        };
        return JavaScriptEmbedder2;
      }()
    );
    exports.default = JavaScriptEmbedder;
  }
});

// node_modules/pdf-lib/cjs/api/PDFDocument.js
var require_PDFDocument = __commonJS({
  "node_modules/pdf-lib/cjs/api/PDFDocument.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var errors_1 = require_errors3();
    var PDFEmbeddedPage_1 = tslib_1.__importDefault(require_PDFEmbeddedPage());
    var PDFFont_1 = tslib_1.__importDefault(require_PDFFont());
    var PDFImage_1 = tslib_1.__importDefault(require_PDFImage());
    var PDFPage_1 = tslib_1.__importDefault(require_PDFPage());
    var PDFForm_1 = tslib_1.__importDefault(require_PDFForm());
    var sizes_1 = require_sizes();
    var core_1 = require_core();
    var PDFDocumentOptions_1 = require_PDFDocumentOptions();
    var utils_1 = require_utils2();
    var FileEmbedder_1 = tslib_1.__importStar(require_FileEmbedder());
    var PDFEmbeddedFile_1 = tslib_1.__importDefault(require_PDFEmbeddedFile());
    var PDFJavaScript_1 = tslib_1.__importDefault(require_PDFJavaScript());
    var JavaScriptEmbedder_1 = tslib_1.__importDefault(require_JavaScriptEmbedder());
    var PDFDocument2 = (
      /** @class */
      function() {
        function PDFDocument3(context, ignoreEncryption, updateMetadata) {
          var _this = this;
          this.defaultWordBreaks = [" "];
          this.computePages = function() {
            var pages = [];
            _this.catalog.Pages().traverse(function(node, ref) {
              if (node instanceof core_1.PDFPageLeaf) {
                var page = _this.pageMap.get(node);
                if (!page) {
                  page = PDFPage_1.default.of(node, ref, _this);
                  _this.pageMap.set(node, page);
                }
                pages.push(page);
              }
            });
            return pages;
          };
          this.getOrCreateForm = function() {
            var acroForm = _this.catalog.getOrCreateAcroForm();
            return PDFForm_1.default.of(acroForm, _this);
          };
          utils_1.assertIs(context, "context", [[core_1.PDFContext, "PDFContext"]]);
          utils_1.assertIs(ignoreEncryption, "ignoreEncryption", ["boolean"]);
          this.context = context;
          this.catalog = context.lookup(context.trailerInfo.Root);
          this.isEncrypted = !!context.lookup(context.trailerInfo.Encrypt);
          this.pageCache = utils_1.Cache.populatedBy(this.computePages);
          this.pageMap = /* @__PURE__ */ new Map();
          this.formCache = utils_1.Cache.populatedBy(this.getOrCreateForm);
          this.fonts = [];
          this.images = [];
          this.embeddedPages = [];
          this.embeddedFiles = [];
          this.javaScripts = [];
          if (!ignoreEncryption && this.isEncrypted)
            throw new errors_1.EncryptedPDFError();
          if (updateMetadata)
            this.updateInfoDict();
        }
        PDFDocument3.load = function(pdf, options) {
          if (options === void 0) {
            options = {};
          }
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var _a, ignoreEncryption, _b, parseSpeed, _c, throwOnInvalidObject, _d, updateMetadata, _e, capNumbers, bytes, context;
            return tslib_1.__generator(this, function(_f) {
              switch (_f.label) {
                case 0:
                  _a = options.ignoreEncryption, ignoreEncryption = _a === void 0 ? false : _a, _b = options.parseSpeed, parseSpeed = _b === void 0 ? PDFDocumentOptions_1.ParseSpeeds.Slow : _b, _c = options.throwOnInvalidObject, throwOnInvalidObject = _c === void 0 ? false : _c, _d = options.updateMetadata, updateMetadata = _d === void 0 ? true : _d, _e = options.capNumbers, capNumbers = _e === void 0 ? false : _e;
                  utils_1.assertIs(pdf, "pdf", ["string", Uint8Array, ArrayBuffer]);
                  utils_1.assertIs(ignoreEncryption, "ignoreEncryption", ["boolean"]);
                  utils_1.assertIs(parseSpeed, "parseSpeed", ["number"]);
                  utils_1.assertIs(throwOnInvalidObject, "throwOnInvalidObject", ["boolean"]);
                  bytes = utils_1.toUint8Array(pdf);
                  return [4, core_1.PDFParser.forBytesWithOptions(bytes, parseSpeed, throwOnInvalidObject, capNumbers).parseDocument()];
                case 1:
                  context = _f.sent();
                  return [2, new PDFDocument3(context, ignoreEncryption, updateMetadata)];
              }
            });
          });
        };
        PDFDocument3.create = function(options) {
          if (options === void 0) {
            options = {};
          }
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var _a, updateMetadata, context, pageTree, pageTreeRef, catalog;
            return tslib_1.__generator(this, function(_b) {
              _a = options.updateMetadata, updateMetadata = _a === void 0 ? true : _a;
              context = core_1.PDFContext.create();
              pageTree = core_1.PDFPageTree.withContext(context);
              pageTreeRef = context.register(pageTree);
              catalog = core_1.PDFCatalog.withContextAndPages(context, pageTreeRef);
              context.trailerInfo.Root = context.register(catalog);
              return [2, new PDFDocument3(context, false, updateMetadata)];
            });
          });
        };
        PDFDocument3.prototype.registerFontkit = function(fontkit) {
          this.fontkit = fontkit;
        };
        PDFDocument3.prototype.getForm = function() {
          var form = this.formCache.access();
          if (form.hasXFA()) {
            console.warn("Removing XFA form data as pdf-lib does not support reading or writing XFA");
            form.deleteXFA();
          }
          return form;
        };
        PDFDocument3.prototype.getTitle = function() {
          var title = this.getInfoDict().lookup(core_1.PDFName.Title);
          if (!title)
            return void 0;
          assertIsLiteralOrHexString(title);
          return title.decodeText();
        };
        PDFDocument3.prototype.getAuthor = function() {
          var author = this.getInfoDict().lookup(core_1.PDFName.Author);
          if (!author)
            return void 0;
          assertIsLiteralOrHexString(author);
          return author.decodeText();
        };
        PDFDocument3.prototype.getSubject = function() {
          var subject = this.getInfoDict().lookup(core_1.PDFName.Subject);
          if (!subject)
            return void 0;
          assertIsLiteralOrHexString(subject);
          return subject.decodeText();
        };
        PDFDocument3.prototype.getKeywords = function() {
          var keywords = this.getInfoDict().lookup(core_1.PDFName.Keywords);
          if (!keywords)
            return void 0;
          assertIsLiteralOrHexString(keywords);
          return keywords.decodeText();
        };
        PDFDocument3.prototype.getCreator = function() {
          var creator = this.getInfoDict().lookup(core_1.PDFName.Creator);
          if (!creator)
            return void 0;
          assertIsLiteralOrHexString(creator);
          return creator.decodeText();
        };
        PDFDocument3.prototype.getProducer = function() {
          var producer = this.getInfoDict().lookup(core_1.PDFName.Producer);
          if (!producer)
            return void 0;
          assertIsLiteralOrHexString(producer);
          return producer.decodeText();
        };
        PDFDocument3.prototype.getCreationDate = function() {
          var creationDate = this.getInfoDict().lookup(core_1.PDFName.CreationDate);
          if (!creationDate)
            return void 0;
          assertIsLiteralOrHexString(creationDate);
          return creationDate.decodeDate();
        };
        PDFDocument3.prototype.getModificationDate = function() {
          var modificationDate = this.getInfoDict().lookup(core_1.PDFName.ModDate);
          if (!modificationDate)
            return void 0;
          assertIsLiteralOrHexString(modificationDate);
          return modificationDate.decodeDate();
        };
        PDFDocument3.prototype.setTitle = function(title, options) {
          utils_1.assertIs(title, "title", ["string"]);
          var key = core_1.PDFName.of("Title");
          this.getInfoDict().set(key, core_1.PDFHexString.fromText(title));
          if (options === null || options === void 0 ? void 0 : options.showInWindowTitleBar) {
            var prefs = this.catalog.getOrCreateViewerPreferences();
            prefs.setDisplayDocTitle(true);
          }
        };
        PDFDocument3.prototype.setAuthor = function(author) {
          utils_1.assertIs(author, "author", ["string"]);
          var key = core_1.PDFName.of("Author");
          this.getInfoDict().set(key, core_1.PDFHexString.fromText(author));
        };
        PDFDocument3.prototype.setSubject = function(subject) {
          utils_1.assertIs(subject, "author", ["string"]);
          var key = core_1.PDFName.of("Subject");
          this.getInfoDict().set(key, core_1.PDFHexString.fromText(subject));
        };
        PDFDocument3.prototype.setKeywords = function(keywords) {
          utils_1.assertIs(keywords, "keywords", [Array]);
          var key = core_1.PDFName.of("Keywords");
          this.getInfoDict().set(key, core_1.PDFHexString.fromText(keywords.join(" ")));
        };
        PDFDocument3.prototype.setCreator = function(creator) {
          utils_1.assertIs(creator, "creator", ["string"]);
          var key = core_1.PDFName.of("Creator");
          this.getInfoDict().set(key, core_1.PDFHexString.fromText(creator));
        };
        PDFDocument3.prototype.setProducer = function(producer) {
          utils_1.assertIs(producer, "creator", ["string"]);
          var key = core_1.PDFName.of("Producer");
          this.getInfoDict().set(key, core_1.PDFHexString.fromText(producer));
        };
        PDFDocument3.prototype.setLanguage = function(language) {
          utils_1.assertIs(language, "language", ["string"]);
          var key = core_1.PDFName.of("Lang");
          this.catalog.set(key, core_1.PDFString.of(language));
        };
        PDFDocument3.prototype.setCreationDate = function(creationDate) {
          utils_1.assertIs(creationDate, "creationDate", [[Date, "Date"]]);
          var key = core_1.PDFName.of("CreationDate");
          this.getInfoDict().set(key, core_1.PDFString.fromDate(creationDate));
        };
        PDFDocument3.prototype.setModificationDate = function(modificationDate) {
          utils_1.assertIs(modificationDate, "modificationDate", [[Date, "Date"]]);
          var key = core_1.PDFName.of("ModDate");
          this.getInfoDict().set(key, core_1.PDFString.fromDate(modificationDate));
        };
        PDFDocument3.prototype.getPageCount = function() {
          if (this.pageCount === void 0)
            this.pageCount = this.getPages().length;
          return this.pageCount;
        };
        PDFDocument3.prototype.getPages = function() {
          return this.pageCache.access();
        };
        PDFDocument3.prototype.getPage = function(index) {
          var pages = this.getPages();
          utils_1.assertRange(index, "index", 0, pages.length - 1);
          return pages[index];
        };
        PDFDocument3.prototype.getPageIndices = function() {
          return utils_1.range(0, this.getPageCount());
        };
        PDFDocument3.prototype.removePage = function(index) {
          var pageCount = this.getPageCount();
          if (this.pageCount === 0)
            throw new errors_1.RemovePageFromEmptyDocumentError();
          utils_1.assertRange(index, "index", 0, pageCount - 1);
          this.catalog.removeLeafNode(index);
          this.pageCount = pageCount - 1;
        };
        PDFDocument3.prototype.addPage = function(page) {
          utils_1.assertIs(page, "page", ["undefined", [PDFPage_1.default, "PDFPage"], Array]);
          return this.insertPage(this.getPageCount(), page);
        };
        PDFDocument3.prototype.insertPage = function(index, page) {
          var pageCount = this.getPageCount();
          utils_1.assertRange(index, "index", 0, pageCount);
          utils_1.assertIs(page, "page", ["undefined", [PDFPage_1.default, "PDFPage"], Array]);
          if (!page || Array.isArray(page)) {
            var dims = Array.isArray(page) ? page : sizes_1.PageSizes.A4;
            page = PDFPage_1.default.create(this);
            page.setSize.apply(page, dims);
          } else if (page.doc !== this) {
            throw new errors_1.ForeignPageError();
          }
          var parentRef = this.catalog.insertLeafNode(page.ref, index);
          page.node.setParent(parentRef);
          this.pageMap.set(page.node, page);
          this.pageCache.invalidate();
          this.pageCount = pageCount + 1;
          return page;
        };
        PDFDocument3.prototype.copyPages = function(srcDoc, indices) {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var copier, srcPages, copiedPages, idx, len, srcPage, copiedPage, ref;
            return tslib_1.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  utils_1.assertIs(srcDoc, "srcDoc", [[PDFDocument3, "PDFDocument"]]);
                  utils_1.assertIs(indices, "indices", [Array]);
                  return [4, srcDoc.flush()];
                case 1:
                  _a.sent();
                  copier = core_1.PDFObjectCopier.for(srcDoc.context, this.context);
                  srcPages = srcDoc.getPages();
                  copiedPages = new Array(indices.length);
                  for (idx = 0, len = indices.length; idx < len; idx++) {
                    srcPage = srcPages[indices[idx]];
                    copiedPage = copier.copy(srcPage.node);
                    ref = this.context.register(copiedPage);
                    copiedPages[idx] = PDFPage_1.default.of(copiedPage, ref, this);
                  }
                  return [2, copiedPages];
              }
            });
          });
        };
        PDFDocument3.prototype.copy = function() {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var pdfCopy, contentPages, idx, len;
            return tslib_1.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, PDFDocument3.create()];
                case 1:
                  pdfCopy = _a.sent();
                  return [4, pdfCopy.copyPages(this, this.getPageIndices())];
                case 2:
                  contentPages = _a.sent();
                  for (idx = 0, len = contentPages.length; idx < len; idx++) {
                    pdfCopy.addPage(contentPages[idx]);
                  }
                  if (this.getAuthor() !== void 0) {
                    pdfCopy.setAuthor(this.getAuthor());
                  }
                  if (this.getCreationDate() !== void 0) {
                    pdfCopy.setCreationDate(this.getCreationDate());
                  }
                  if (this.getCreator() !== void 0) {
                    pdfCopy.setCreator(this.getCreator());
                  }
                  if (this.getModificationDate() !== void 0) {
                    pdfCopy.setModificationDate(this.getModificationDate());
                  }
                  if (this.getProducer() !== void 0) {
                    pdfCopy.setProducer(this.getProducer());
                  }
                  if (this.getSubject() !== void 0) {
                    pdfCopy.setSubject(this.getSubject());
                  }
                  if (this.getTitle() !== void 0) {
                    pdfCopy.setTitle(this.getTitle());
                  }
                  pdfCopy.defaultWordBreaks = this.defaultWordBreaks;
                  return [2, pdfCopy];
              }
            });
          });
        };
        PDFDocument3.prototype.addJavaScript = function(name, script) {
          utils_1.assertIs(name, "name", ["string"]);
          utils_1.assertIs(script, "script", ["string"]);
          var embedder = JavaScriptEmbedder_1.default.for(script, name);
          var ref = this.context.nextRef();
          var javaScript = PDFJavaScript_1.default.of(ref, this, embedder);
          this.javaScripts.push(javaScript);
        };
        PDFDocument3.prototype.attach = function(attachment, name, options) {
          if (options === void 0) {
            options = {};
          }
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var bytes, embedder, ref, embeddedFile;
            return tslib_1.__generator(this, function(_a) {
              utils_1.assertIs(attachment, "attachment", ["string", Uint8Array, ArrayBuffer]);
              utils_1.assertIs(name, "name", ["string"]);
              utils_1.assertOrUndefined(options.mimeType, "mimeType", ["string"]);
              utils_1.assertOrUndefined(options.description, "description", ["string"]);
              utils_1.assertOrUndefined(options.creationDate, "options.creationDate", [Date]);
              utils_1.assertOrUndefined(options.modificationDate, "options.modificationDate", [
                Date
              ]);
              utils_1.assertIsOneOfOrUndefined(options.afRelationship, "options.afRelationship", FileEmbedder_1.AFRelationship);
              bytes = utils_1.toUint8Array(attachment);
              embedder = FileEmbedder_1.default.for(bytes, name, options);
              ref = this.context.nextRef();
              embeddedFile = PDFEmbeddedFile_1.default.of(ref, this, embedder);
              this.embeddedFiles.push(embeddedFile);
              return [
                2
                /*return*/
              ];
            });
          });
        };
        PDFDocument3.prototype.embedFont = function(font, options) {
          if (options === void 0) {
            options = {};
          }
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var _a, subset, customName, features, embedder, bytes, fontkit, _b, ref, pdfFont;
            return tslib_1.__generator(this, function(_c) {
              switch (_c.label) {
                case 0:
                  _a = options.subset, subset = _a === void 0 ? false : _a, customName = options.customName, features = options.features;
                  utils_1.assertIs(font, "font", ["string", Uint8Array, ArrayBuffer]);
                  utils_1.assertIs(subset, "subset", ["boolean"]);
                  if (!utils_1.isStandardFont(font))
                    return [3, 1];
                  embedder = core_1.StandardFontEmbedder.for(font, customName);
                  return [3, 7];
                case 1:
                  if (!utils_1.canBeConvertedToUint8Array(font))
                    return [3, 6];
                  bytes = utils_1.toUint8Array(font);
                  fontkit = this.assertFontkit();
                  if (!subset)
                    return [3, 3];
                  return [4, core_1.CustomFontSubsetEmbedder.for(fontkit, bytes, customName, features)];
                case 2:
                  _b = _c.sent();
                  return [3, 5];
                case 3:
                  return [4, core_1.CustomFontEmbedder.for(fontkit, bytes, customName, features)];
                case 4:
                  _b = _c.sent();
                  _c.label = 5;
                case 5:
                  embedder = _b;
                  return [3, 7];
                case 6:
                  throw new TypeError("`font` must be one of `StandardFonts | string | Uint8Array | ArrayBuffer`");
                case 7:
                  ref = this.context.nextRef();
                  pdfFont = PDFFont_1.default.of(ref, this, embedder);
                  this.fonts.push(pdfFont);
                  return [2, pdfFont];
              }
            });
          });
        };
        PDFDocument3.prototype.embedStandardFont = function(font, customName) {
          utils_1.assertIs(font, "font", ["string"]);
          if (!utils_1.isStandardFont(font)) {
            throw new TypeError("`font` must be one of type `StandardFonts`");
          }
          var embedder = core_1.StandardFontEmbedder.for(font, customName);
          var ref = this.context.nextRef();
          var pdfFont = PDFFont_1.default.of(ref, this, embedder);
          this.fonts.push(pdfFont);
          return pdfFont;
        };
        PDFDocument3.prototype.embedJpg = function(jpg) {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var bytes, embedder, ref, pdfImage;
            return tslib_1.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  utils_1.assertIs(jpg, "jpg", ["string", Uint8Array, ArrayBuffer]);
                  bytes = utils_1.toUint8Array(jpg);
                  return [4, core_1.JpegEmbedder.for(bytes)];
                case 1:
                  embedder = _a.sent();
                  ref = this.context.nextRef();
                  pdfImage = PDFImage_1.default.of(ref, this, embedder);
                  this.images.push(pdfImage);
                  return [2, pdfImage];
              }
            });
          });
        };
        PDFDocument3.prototype.embedPng = function(png) {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var bytes, embedder, ref, pdfImage;
            return tslib_1.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  utils_1.assertIs(png, "png", ["string", Uint8Array, ArrayBuffer]);
                  bytes = utils_1.toUint8Array(png);
                  return [4, core_1.PngEmbedder.for(bytes)];
                case 1:
                  embedder = _a.sent();
                  ref = this.context.nextRef();
                  pdfImage = PDFImage_1.default.of(ref, this, embedder);
                  this.images.push(pdfImage);
                  return [2, pdfImage];
              }
            });
          });
        };
        PDFDocument3.prototype.embedPdf = function(pdf, indices) {
          if (indices === void 0) {
            indices = [0];
          }
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var srcDoc, _a, srcPages;
            return tslib_1.__generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  utils_1.assertIs(pdf, "pdf", [
                    "string",
                    Uint8Array,
                    ArrayBuffer,
                    [PDFDocument3, "PDFDocument"]
                  ]);
                  utils_1.assertIs(indices, "indices", [Array]);
                  if (!(pdf instanceof PDFDocument3))
                    return [3, 1];
                  _a = pdf;
                  return [3, 3];
                case 1:
                  return [4, PDFDocument3.load(pdf)];
                case 2:
                  _a = _b.sent();
                  _b.label = 3;
                case 3:
                  srcDoc = _a;
                  srcPages = utils_1.pluckIndices(srcDoc.getPages(), indices);
                  return [2, this.embedPages(srcPages)];
              }
            });
          });
        };
        PDFDocument3.prototype.embedPage = function(page, boundingBox, transformationMatrix) {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var embeddedPage;
            return tslib_1.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  utils_1.assertIs(page, "page", [[PDFPage_1.default, "PDFPage"]]);
                  return [4, this.embedPages([page], [boundingBox], [transformationMatrix])];
                case 1:
                  embeddedPage = _a.sent()[0];
                  return [2, embeddedPage];
              }
            });
          });
        };
        PDFDocument3.prototype.embedPages = function(pages, boundingBoxes, transformationMatrices) {
          if (boundingBoxes === void 0) {
            boundingBoxes = [];
          }
          if (transformationMatrices === void 0) {
            transformationMatrices = [];
          }
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var idx, len, currPage, nextPage, context, maybeCopyPage, embeddedPages, idx, len, page, box, matrix, embedder, ref;
            var _a;
            return tslib_1.__generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  if (pages.length === 0)
                    return [2, []];
                  for (idx = 0, len = pages.length - 1; idx < len; idx++) {
                    currPage = pages[idx];
                    nextPage = pages[idx + 1];
                    if (currPage.node.context !== nextPage.node.context) {
                      throw new core_1.PageEmbeddingMismatchedContextError();
                    }
                  }
                  context = pages[0].node.context;
                  maybeCopyPage = context === this.context ? function(p) {
                    return p;
                  } : core_1.PDFObjectCopier.for(context, this.context).copy;
                  embeddedPages = new Array(pages.length);
                  idx = 0, len = pages.length;
                  _b.label = 1;
                case 1:
                  if (!(idx < len))
                    return [3, 4];
                  page = maybeCopyPage(pages[idx].node);
                  box = boundingBoxes[idx];
                  matrix = transformationMatrices[idx];
                  return [4, core_1.PDFPageEmbedder.for(page, box, matrix)];
                case 2:
                  embedder = _b.sent();
                  ref = this.context.nextRef();
                  embeddedPages[idx] = PDFEmbeddedPage_1.default.of(ref, this, embedder);
                  _b.label = 3;
                case 3:
                  idx++;
                  return [3, 1];
                case 4:
                  (_a = this.embeddedPages).push.apply(_a, embeddedPages);
                  return [2, embeddedPages];
              }
            });
          });
        };
        PDFDocument3.prototype.flush = function() {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            return tslib_1.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.embedAll(this.fonts)];
                case 1:
                  _a.sent();
                  return [4, this.embedAll(this.images)];
                case 2:
                  _a.sent();
                  return [4, this.embedAll(this.embeddedPages)];
                case 3:
                  _a.sent();
                  return [4, this.embedAll(this.embeddedFiles)];
                case 4:
                  _a.sent();
                  return [4, this.embedAll(this.javaScripts)];
                case 5:
                  _a.sent();
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        };
        PDFDocument3.prototype.save = function(options) {
          if (options === void 0) {
            options = {};
          }
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var _a, useObjectStreams, _b, addDefaultPage, _c, objectsPerTick, _d, updateFieldAppearances, form, Writer;
            return tslib_1.__generator(this, function(_e) {
              switch (_e.label) {
                case 0:
                  _a = options.useObjectStreams, useObjectStreams = _a === void 0 ? true : _a, _b = options.addDefaultPage, addDefaultPage = _b === void 0 ? true : _b, _c = options.objectsPerTick, objectsPerTick = _c === void 0 ? 50 : _c, _d = options.updateFieldAppearances, updateFieldAppearances = _d === void 0 ? true : _d;
                  utils_1.assertIs(useObjectStreams, "useObjectStreams", ["boolean"]);
                  utils_1.assertIs(addDefaultPage, "addDefaultPage", ["boolean"]);
                  utils_1.assertIs(objectsPerTick, "objectsPerTick", ["number"]);
                  utils_1.assertIs(updateFieldAppearances, "updateFieldAppearances", ["boolean"]);
                  if (addDefaultPage && this.getPageCount() === 0)
                    this.addPage();
                  if (updateFieldAppearances) {
                    form = this.formCache.getValue();
                    if (form)
                      form.updateFieldAppearances();
                  }
                  return [4, this.flush()];
                case 1:
                  _e.sent();
                  Writer = useObjectStreams ? core_1.PDFStreamWriter : core_1.PDFWriter;
                  return [2, Writer.forContext(this.context, objectsPerTick).serializeToBuffer()];
              }
            });
          });
        };
        PDFDocument3.prototype.saveAsBase64 = function(options) {
          if (options === void 0) {
            options = {};
          }
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var _a, dataUri, otherOptions, bytes, base64;
            return tslib_1.__generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  _a = options.dataUri, dataUri = _a === void 0 ? false : _a, otherOptions = tslib_1.__rest(options, ["dataUri"]);
                  utils_1.assertIs(dataUri, "dataUri", ["boolean"]);
                  return [4, this.save(otherOptions)];
                case 1:
                  bytes = _b.sent();
                  base64 = utils_1.encodeToBase64(bytes);
                  return [2, dataUri ? "data:application/pdf;base64," + base64 : base64];
              }
            });
          });
        };
        PDFDocument3.prototype.findPageForAnnotationRef = function(ref) {
          var pages = this.getPages();
          for (var idx = 0, len = pages.length; idx < len; idx++) {
            var page = pages[idx];
            var annotations = page.node.Annots();
            if ((annotations === null || annotations === void 0 ? void 0 : annotations.indexOf(ref)) !== void 0) {
              return page;
            }
          }
          return void 0;
        };
        PDFDocument3.prototype.embedAll = function(embeddables) {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            var idx, len;
            return tslib_1.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  idx = 0, len = embeddables.length;
                  _a.label = 1;
                case 1:
                  if (!(idx < len))
                    return [3, 4];
                  return [4, embeddables[idx].embed()];
                case 2:
                  _a.sent();
                  _a.label = 3;
                case 3:
                  idx++;
                  return [3, 1];
                case 4:
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        };
        PDFDocument3.prototype.updateInfoDict = function() {
          var pdfLib = "pdf-lib (https://github.com/Hopding/pdf-lib)";
          var now = new Date();
          var info = this.getInfoDict();
          this.setProducer(pdfLib);
          this.setModificationDate(now);
          if (!info.get(core_1.PDFName.of("Creator")))
            this.setCreator(pdfLib);
          if (!info.get(core_1.PDFName.of("CreationDate")))
            this.setCreationDate(now);
        };
        PDFDocument3.prototype.getInfoDict = function() {
          var existingInfo = this.context.lookup(this.context.trailerInfo.Info);
          if (existingInfo instanceof core_1.PDFDict)
            return existingInfo;
          var newInfo = this.context.obj({});
          this.context.trailerInfo.Info = this.context.register(newInfo);
          return newInfo;
        };
        PDFDocument3.prototype.assertFontkit = function() {
          if (!this.fontkit)
            throw new errors_1.FontkitNotRegisteredError();
          return this.fontkit;
        };
        return PDFDocument3;
      }()
    );
    exports.default = PDFDocument2;
    function assertIsLiteralOrHexString(pdfObject) {
      if (!(pdfObject instanceof core_1.PDFHexString) && !(pdfObject instanceof core_1.PDFString)) {
        throw new core_1.UnexpectedObjectTypeError([core_1.PDFHexString, core_1.PDFString], pdfObject);
      }
    }
  }
});

// node_modules/pdf-lib/cjs/api/PDFPageOptions.js
var require_PDFPageOptions = __commonJS({
  "node_modules/pdf-lib/cjs/api/PDFPageOptions.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BlendMode = void 0;
    var BlendMode;
    (function(BlendMode2) {
      BlendMode2["Normal"] = "Normal";
      BlendMode2["Multiply"] = "Multiply";
      BlendMode2["Screen"] = "Screen";
      BlendMode2["Overlay"] = "Overlay";
      BlendMode2["Darken"] = "Darken";
      BlendMode2["Lighten"] = "Lighten";
      BlendMode2["ColorDodge"] = "ColorDodge";
      BlendMode2["ColorBurn"] = "ColorBurn";
      BlendMode2["HardLight"] = "HardLight";
      BlendMode2["SoftLight"] = "SoftLight";
      BlendMode2["Difference"] = "Difference";
      BlendMode2["Exclusion"] = "Exclusion";
    })(BlendMode = exports.BlendMode || (exports.BlendMode = {}));
  }
});

// node_modules/pdf-lib/cjs/api/PDFPage.js
var require_PDFPage = __commonJS({
  "node_modules/pdf-lib/cjs/api/PDFPage.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var colors_1 = require_colors();
    var operations_1 = require_operations();
    var operators_1 = require_operators();
    var PDFDocument_1 = tslib_1.__importDefault(require_PDFDocument());
    var PDFEmbeddedPage_1 = tslib_1.__importDefault(require_PDFEmbeddedPage());
    var PDFFont_1 = tslib_1.__importDefault(require_PDFFont());
    var PDFImage_1 = tslib_1.__importDefault(require_PDFImage());
    var PDFPageOptions_1 = require_PDFPageOptions();
    var rotations_1 = require_rotations();
    var StandardFonts_1 = require_StandardFonts();
    var core_1 = require_core();
    var utils_1 = require_utils2();
    var PDFPage = (
      /** @class */
      function() {
        function PDFPage2(leafNode, ref, doc) {
          this.fontSize = 24;
          this.fontColor = colors_1.rgb(0, 0, 0);
          this.lineHeight = 24;
          this.x = 0;
          this.y = 0;
          utils_1.assertIs(leafNode, "leafNode", [[core_1.PDFPageLeaf, "PDFPageLeaf"]]);
          utils_1.assertIs(ref, "ref", [[core_1.PDFRef, "PDFRef"]]);
          utils_1.assertIs(doc, "doc", [[PDFDocument_1.default, "PDFDocument"]]);
          this.node = leafNode;
          this.ref = ref;
          this.doc = doc;
        }
        PDFPage2.prototype.setRotation = function(angle) {
          var degreesAngle = rotations_1.toDegrees(angle);
          utils_1.assertMultiple(degreesAngle, "degreesAngle", 90);
          this.node.set(core_1.PDFName.of("Rotate"), this.doc.context.obj(degreesAngle));
        };
        PDFPage2.prototype.getRotation = function() {
          var Rotate = this.node.Rotate();
          return rotations_1.degrees(Rotate ? Rotate.asNumber() : 0);
        };
        PDFPage2.prototype.setSize = function(width, height) {
          utils_1.assertIs(width, "width", ["number"]);
          utils_1.assertIs(height, "height", ["number"]);
          var mediaBox = this.getMediaBox();
          this.setMediaBox(mediaBox.x, mediaBox.y, width, height);
          var cropBox = this.getCropBox();
          var bleedBox = this.getBleedBox();
          var trimBox = this.getTrimBox();
          var artBox = this.getArtBox();
          var hasCropBox = this.node.CropBox();
          var hasBleedBox = this.node.BleedBox();
          var hasTrimBox = this.node.TrimBox();
          var hasArtBox = this.node.ArtBox();
          if (hasCropBox && utils_1.rectanglesAreEqual(cropBox, mediaBox)) {
            this.setCropBox(mediaBox.x, mediaBox.y, width, height);
          }
          if (hasBleedBox && utils_1.rectanglesAreEqual(bleedBox, mediaBox)) {
            this.setBleedBox(mediaBox.x, mediaBox.y, width, height);
          }
          if (hasTrimBox && utils_1.rectanglesAreEqual(trimBox, mediaBox)) {
            this.setTrimBox(mediaBox.x, mediaBox.y, width, height);
          }
          if (hasArtBox && utils_1.rectanglesAreEqual(artBox, mediaBox)) {
            this.setArtBox(mediaBox.x, mediaBox.y, width, height);
          }
        };
        PDFPage2.prototype.setWidth = function(width) {
          utils_1.assertIs(width, "width", ["number"]);
          this.setSize(width, this.getSize().height);
        };
        PDFPage2.prototype.setHeight = function(height) {
          utils_1.assertIs(height, "height", ["number"]);
          this.setSize(this.getSize().width, height);
        };
        PDFPage2.prototype.setMediaBox = function(x, y, width, height) {
          utils_1.assertIs(x, "x", ["number"]);
          utils_1.assertIs(y, "y", ["number"]);
          utils_1.assertIs(width, "width", ["number"]);
          utils_1.assertIs(height, "height", ["number"]);
          var mediaBox = this.doc.context.obj([x, y, x + width, y + height]);
          this.node.set(core_1.PDFName.MediaBox, mediaBox);
        };
        PDFPage2.prototype.setCropBox = function(x, y, width, height) {
          utils_1.assertIs(x, "x", ["number"]);
          utils_1.assertIs(y, "y", ["number"]);
          utils_1.assertIs(width, "width", ["number"]);
          utils_1.assertIs(height, "height", ["number"]);
          var cropBox = this.doc.context.obj([x, y, x + width, y + height]);
          this.node.set(core_1.PDFName.CropBox, cropBox);
        };
        PDFPage2.prototype.setBleedBox = function(x, y, width, height) {
          utils_1.assertIs(x, "x", ["number"]);
          utils_1.assertIs(y, "y", ["number"]);
          utils_1.assertIs(width, "width", ["number"]);
          utils_1.assertIs(height, "height", ["number"]);
          var bleedBox = this.doc.context.obj([x, y, x + width, y + height]);
          this.node.set(core_1.PDFName.BleedBox, bleedBox);
        };
        PDFPage2.prototype.setTrimBox = function(x, y, width, height) {
          utils_1.assertIs(x, "x", ["number"]);
          utils_1.assertIs(y, "y", ["number"]);
          utils_1.assertIs(width, "width", ["number"]);
          utils_1.assertIs(height, "height", ["number"]);
          var trimBox = this.doc.context.obj([x, y, x + width, y + height]);
          this.node.set(core_1.PDFName.TrimBox, trimBox);
        };
        PDFPage2.prototype.setArtBox = function(x, y, width, height) {
          utils_1.assertIs(x, "x", ["number"]);
          utils_1.assertIs(y, "y", ["number"]);
          utils_1.assertIs(width, "width", ["number"]);
          utils_1.assertIs(height, "height", ["number"]);
          var artBox = this.doc.context.obj([x, y, x + width, y + height]);
          this.node.set(core_1.PDFName.ArtBox, artBox);
        };
        PDFPage2.prototype.getSize = function() {
          var _a = this.getMediaBox(), width = _a.width, height = _a.height;
          return { width, height };
        };
        PDFPage2.prototype.getWidth = function() {
          return this.getSize().width;
        };
        PDFPage2.prototype.getHeight = function() {
          return this.getSize().height;
        };
        PDFPage2.prototype.getMediaBox = function() {
          var mediaBox = this.node.MediaBox();
          return mediaBox.asRectangle();
        };
        PDFPage2.prototype.getCropBox = function() {
          var _a;
          var cropBox = this.node.CropBox();
          return (_a = cropBox === null || cropBox === void 0 ? void 0 : cropBox.asRectangle()) !== null && _a !== void 0 ? _a : this.getMediaBox();
        };
        PDFPage2.prototype.getBleedBox = function() {
          var _a;
          var bleedBox = this.node.BleedBox();
          return (_a = bleedBox === null || bleedBox === void 0 ? void 0 : bleedBox.asRectangle()) !== null && _a !== void 0 ? _a : this.getCropBox();
        };
        PDFPage2.prototype.getTrimBox = function() {
          var _a;
          var trimBox = this.node.TrimBox();
          return (_a = trimBox === null || trimBox === void 0 ? void 0 : trimBox.asRectangle()) !== null && _a !== void 0 ? _a : this.getCropBox();
        };
        PDFPage2.prototype.getArtBox = function() {
          var _a;
          var artBox = this.node.ArtBox();
          return (_a = artBox === null || artBox === void 0 ? void 0 : artBox.asRectangle()) !== null && _a !== void 0 ? _a : this.getCropBox();
        };
        PDFPage2.prototype.translateContent = function(x, y) {
          utils_1.assertIs(x, "x", ["number"]);
          utils_1.assertIs(y, "y", ["number"]);
          this.node.normalize();
          this.getContentStream();
          var start = this.createContentStream(operators_1.pushGraphicsState(), operators_1.translate(x, y));
          var startRef = this.doc.context.register(start);
          var end = this.createContentStream(operators_1.popGraphicsState());
          var endRef = this.doc.context.register(end);
          this.node.wrapContentStreams(startRef, endRef);
        };
        PDFPage2.prototype.scale = function(x, y) {
          utils_1.assertIs(x, "x", ["number"]);
          utils_1.assertIs(y, "y", ["number"]);
          this.setSize(this.getWidth() * x, this.getHeight() * y);
          this.scaleContent(x, y);
          this.scaleAnnotations(x, y);
        };
        PDFPage2.prototype.scaleContent = function(x, y) {
          utils_1.assertIs(x, "x", ["number"]);
          utils_1.assertIs(y, "y", ["number"]);
          this.node.normalize();
          this.getContentStream();
          var start = this.createContentStream(operators_1.pushGraphicsState(), operators_1.scale(x, y));
          var startRef = this.doc.context.register(start);
          var end = this.createContentStream(operators_1.popGraphicsState());
          var endRef = this.doc.context.register(end);
          this.node.wrapContentStreams(startRef, endRef);
        };
        PDFPage2.prototype.scaleAnnotations = function(x, y) {
          utils_1.assertIs(x, "x", ["number"]);
          utils_1.assertIs(y, "y", ["number"]);
          var annots = this.node.Annots();
          if (!annots)
            return;
          for (var idx = 0; idx < annots.size(); idx++) {
            var annot = annots.lookup(idx);
            if (annot instanceof core_1.PDFDict)
              this.scaleAnnot(annot, x, y);
          }
        };
        PDFPage2.prototype.resetPosition = function() {
          this.getContentStream(false);
          this.x = 0;
          this.y = 0;
        };
        PDFPage2.prototype.setFont = function(font) {
          utils_1.assertIs(font, "font", [[PDFFont_1.default, "PDFFont"]]);
          this.font = font;
          this.fontKey = this.node.newFontDictionary(this.font.name, this.font.ref);
        };
        PDFPage2.prototype.setFontSize = function(fontSize) {
          utils_1.assertIs(fontSize, "fontSize", ["number"]);
          this.fontSize = fontSize;
        };
        PDFPage2.prototype.setFontColor = function(fontColor) {
          utils_1.assertIs(fontColor, "fontColor", [[Object, "Color"]]);
          this.fontColor = fontColor;
        };
        PDFPage2.prototype.setLineHeight = function(lineHeight) {
          utils_1.assertIs(lineHeight, "lineHeight", ["number"]);
          this.lineHeight = lineHeight;
        };
        PDFPage2.prototype.getPosition = function() {
          return { x: this.x, y: this.y };
        };
        PDFPage2.prototype.getX = function() {
          return this.x;
        };
        PDFPage2.prototype.getY = function() {
          return this.y;
        };
        PDFPage2.prototype.moveTo = function(x, y) {
          utils_1.assertIs(x, "x", ["number"]);
          utils_1.assertIs(y, "y", ["number"]);
          this.x = x;
          this.y = y;
        };
        PDFPage2.prototype.moveDown = function(yDecrease) {
          utils_1.assertIs(yDecrease, "yDecrease", ["number"]);
          this.y -= yDecrease;
        };
        PDFPage2.prototype.moveUp = function(yIncrease) {
          utils_1.assertIs(yIncrease, "yIncrease", ["number"]);
          this.y += yIncrease;
        };
        PDFPage2.prototype.moveLeft = function(xDecrease) {
          utils_1.assertIs(xDecrease, "xDecrease", ["number"]);
          this.x -= xDecrease;
        };
        PDFPage2.prototype.moveRight = function(xIncrease) {
          utils_1.assertIs(xIncrease, "xIncrease", ["number"]);
          this.x += xIncrease;
        };
        PDFPage2.prototype.pushOperators = function() {
          var operator = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            operator[_i] = arguments[_i];
          }
          utils_1.assertEachIs(operator, "operator", [[core_1.PDFOperator, "PDFOperator"]]);
          var contentStream = this.getContentStream();
          contentStream.push.apply(contentStream, operator);
        };
        PDFPage2.prototype.drawText = function(text, options) {
          var _a, _b, _c, _d, _e, _f, _g;
          if (options === void 0) {
            options = {};
          }
          utils_1.assertIs(text, "text", ["string"]);
          utils_1.assertOrUndefined(options.color, "options.color", [[Object, "Color"]]);
          utils_1.assertRangeOrUndefined(options.opacity, "opacity.opacity", 0, 1);
          utils_1.assertOrUndefined(options.font, "options.font", [[PDFFont_1.default, "PDFFont"]]);
          utils_1.assertOrUndefined(options.size, "options.size", ["number"]);
          utils_1.assertOrUndefined(options.rotate, "options.rotate", [[Object, "Rotation"]]);
          utils_1.assertOrUndefined(options.xSkew, "options.xSkew", [[Object, "Rotation"]]);
          utils_1.assertOrUndefined(options.ySkew, "options.ySkew", [[Object, "Rotation"]]);
          utils_1.assertOrUndefined(options.x, "options.x", ["number"]);
          utils_1.assertOrUndefined(options.y, "options.y", ["number"]);
          utils_1.assertOrUndefined(options.lineHeight, "options.lineHeight", ["number"]);
          utils_1.assertOrUndefined(options.maxWidth, "options.maxWidth", ["number"]);
          utils_1.assertOrUndefined(options.wordBreaks, "options.wordBreaks", [Array]);
          utils_1.assertIsOneOfOrUndefined(options.blendMode, "options.blendMode", PDFPageOptions_1.BlendMode);
          var _h = this.setOrEmbedFont(options.font), oldFont = _h.oldFont, newFont = _h.newFont, newFontKey = _h.newFontKey;
          var fontSize = options.size || this.fontSize;
          var wordBreaks = options.wordBreaks || this.doc.defaultWordBreaks;
          var textWidth = function(t) {
            return newFont.widthOfTextAtSize(t, fontSize);
          };
          var lines = options.maxWidth === void 0 ? utils_1.lineSplit(utils_1.cleanText(text)) : utils_1.breakTextIntoLines(text, wordBreaks, options.maxWidth, textWidth);
          var encodedLines = new Array(lines.length);
          for (var idx = 0, len = lines.length; idx < len; idx++) {
            encodedLines[idx] = newFont.encodeText(lines[idx]);
          }
          var graphicsStateKey = this.maybeEmbedGraphicsState({
            opacity: options.opacity,
            blendMode: options.blendMode
          });
          var contentStream = this.getContentStream();
          contentStream.push.apply(contentStream, operations_1.drawLinesOfText(encodedLines, {
            color: (_a = options.color) !== null && _a !== void 0 ? _a : this.fontColor,
            font: newFontKey,
            size: fontSize,
            rotate: (_b = options.rotate) !== null && _b !== void 0 ? _b : rotations_1.degrees(0),
            xSkew: (_c = options.xSkew) !== null && _c !== void 0 ? _c : rotations_1.degrees(0),
            ySkew: (_d = options.ySkew) !== null && _d !== void 0 ? _d : rotations_1.degrees(0),
            x: (_e = options.x) !== null && _e !== void 0 ? _e : this.x,
            y: (_f = options.y) !== null && _f !== void 0 ? _f : this.y,
            lineHeight: (_g = options.lineHeight) !== null && _g !== void 0 ? _g : this.lineHeight,
            graphicsState: graphicsStateKey
          }));
          if (options.font) {
            if (oldFont)
              this.setFont(oldFont);
            else
              this.resetFont();
          }
        };
        PDFPage2.prototype.drawImage = function(image, options) {
          var _a, _b, _c, _d, _e, _f, _g;
          if (options === void 0) {
            options = {};
          }
          utils_1.assertIs(image, "image", [[PDFImage_1.default, "PDFImage"]]);
          utils_1.assertOrUndefined(options.x, "options.x", ["number"]);
          utils_1.assertOrUndefined(options.y, "options.y", ["number"]);
          utils_1.assertOrUndefined(options.width, "options.width", ["number"]);
          utils_1.assertOrUndefined(options.height, "options.height", ["number"]);
          utils_1.assertOrUndefined(options.rotate, "options.rotate", [[Object, "Rotation"]]);
          utils_1.assertOrUndefined(options.xSkew, "options.xSkew", [[Object, "Rotation"]]);
          utils_1.assertOrUndefined(options.ySkew, "options.ySkew", [[Object, "Rotation"]]);
          utils_1.assertRangeOrUndefined(options.opacity, "opacity.opacity", 0, 1);
          utils_1.assertIsOneOfOrUndefined(options.blendMode, "options.blendMode", PDFPageOptions_1.BlendMode);
          var xObjectKey = this.node.newXObject("Image", image.ref);
          var graphicsStateKey = this.maybeEmbedGraphicsState({
            opacity: options.opacity,
            blendMode: options.blendMode
          });
          var contentStream = this.getContentStream();
          contentStream.push.apply(contentStream, operations_1.drawImage(xObjectKey, {
            x: (_a = options.x) !== null && _a !== void 0 ? _a : this.x,
            y: (_b = options.y) !== null && _b !== void 0 ? _b : this.y,
            width: (_c = options.width) !== null && _c !== void 0 ? _c : image.size().width,
            height: (_d = options.height) !== null && _d !== void 0 ? _d : image.size().height,
            rotate: (_e = options.rotate) !== null && _e !== void 0 ? _e : rotations_1.degrees(0),
            xSkew: (_f = options.xSkew) !== null && _f !== void 0 ? _f : rotations_1.degrees(0),
            ySkew: (_g = options.ySkew) !== null && _g !== void 0 ? _g : rotations_1.degrees(0),
            graphicsState: graphicsStateKey
          }));
        };
        PDFPage2.prototype.drawPage = function(embeddedPage, options) {
          var _a, _b, _c, _d, _e;
          if (options === void 0) {
            options = {};
          }
          utils_1.assertIs(embeddedPage, "embeddedPage", [
            [PDFEmbeddedPage_1.default, "PDFEmbeddedPage"]
          ]);
          utils_1.assertOrUndefined(options.x, "options.x", ["number"]);
          utils_1.assertOrUndefined(options.y, "options.y", ["number"]);
          utils_1.assertOrUndefined(options.xScale, "options.xScale", ["number"]);
          utils_1.assertOrUndefined(options.yScale, "options.yScale", ["number"]);
          utils_1.assertOrUndefined(options.width, "options.width", ["number"]);
          utils_1.assertOrUndefined(options.height, "options.height", ["number"]);
          utils_1.assertOrUndefined(options.rotate, "options.rotate", [[Object, "Rotation"]]);
          utils_1.assertOrUndefined(options.xSkew, "options.xSkew", [[Object, "Rotation"]]);
          utils_1.assertOrUndefined(options.ySkew, "options.ySkew", [[Object, "Rotation"]]);
          utils_1.assertRangeOrUndefined(options.opacity, "opacity.opacity", 0, 1);
          utils_1.assertIsOneOfOrUndefined(options.blendMode, "options.blendMode", PDFPageOptions_1.BlendMode);
          var xObjectKey = this.node.newXObject("EmbeddedPdfPage", embeddedPage.ref);
          var graphicsStateKey = this.maybeEmbedGraphicsState({
            opacity: options.opacity,
            blendMode: options.blendMode
          });
          var xScale = options.width !== void 0 ? options.width / embeddedPage.width : options.xScale !== void 0 ? options.xScale : 1;
          var yScale = options.height !== void 0 ? options.height / embeddedPage.height : options.yScale !== void 0 ? options.yScale : 1;
          var contentStream = this.getContentStream();
          contentStream.push.apply(contentStream, operations_1.drawPage(xObjectKey, {
            x: (_a = options.x) !== null && _a !== void 0 ? _a : this.x,
            y: (_b = options.y) !== null && _b !== void 0 ? _b : this.y,
            xScale,
            yScale,
            rotate: (_c = options.rotate) !== null && _c !== void 0 ? _c : rotations_1.degrees(0),
            xSkew: (_d = options.xSkew) !== null && _d !== void 0 ? _d : rotations_1.degrees(0),
            ySkew: (_e = options.ySkew) !== null && _e !== void 0 ? _e : rotations_1.degrees(0),
            graphicsState: graphicsStateKey
          }));
        };
        PDFPage2.prototype.drawSvgPath = function(path2, options) {
          var _a, _b, _c, _d, _e, _f, _g, _h, _j;
          if (options === void 0) {
            options = {};
          }
          utils_1.assertIs(path2, "path", ["string"]);
          utils_1.assertOrUndefined(options.x, "options.x", ["number"]);
          utils_1.assertOrUndefined(options.y, "options.y", ["number"]);
          utils_1.assertOrUndefined(options.scale, "options.scale", ["number"]);
          utils_1.assertOrUndefined(options.rotate, "options.rotate", [[Object, "Rotation"]]);
          utils_1.assertOrUndefined(options.borderWidth, "options.borderWidth", ["number"]);
          utils_1.assertOrUndefined(options.color, "options.color", [[Object, "Color"]]);
          utils_1.assertRangeOrUndefined(options.opacity, "opacity.opacity", 0, 1);
          utils_1.assertOrUndefined(options.borderColor, "options.borderColor", [
            [Object, "Color"]
          ]);
          utils_1.assertOrUndefined(options.borderDashArray, "options.borderDashArray", [
            Array
          ]);
          utils_1.assertOrUndefined(options.borderDashPhase, "options.borderDashPhase", [
            "number"
          ]);
          utils_1.assertIsOneOfOrUndefined(options.borderLineCap, "options.borderLineCap", operators_1.LineCapStyle);
          utils_1.assertRangeOrUndefined(options.borderOpacity, "options.borderOpacity", 0, 1);
          utils_1.assertIsOneOfOrUndefined(options.blendMode, "options.blendMode", PDFPageOptions_1.BlendMode);
          var graphicsStateKey = this.maybeEmbedGraphicsState({
            opacity: options.opacity,
            borderOpacity: options.borderOpacity,
            blendMode: options.blendMode
          });
          if (!("color" in options) && !("borderColor" in options)) {
            options.borderColor = colors_1.rgb(0, 0, 0);
          }
          var contentStream = this.getContentStream();
          contentStream.push.apply(contentStream, operations_1.drawSvgPath(path2, {
            x: (_a = options.x) !== null && _a !== void 0 ? _a : this.x,
            y: (_b = options.y) !== null && _b !== void 0 ? _b : this.y,
            scale: options.scale,
            rotate: (_c = options.rotate) !== null && _c !== void 0 ? _c : rotations_1.degrees(0),
            color: (_d = options.color) !== null && _d !== void 0 ? _d : void 0,
            borderColor: (_e = options.borderColor) !== null && _e !== void 0 ? _e : void 0,
            borderWidth: (_f = options.borderWidth) !== null && _f !== void 0 ? _f : 0,
            borderDashArray: (_g = options.borderDashArray) !== null && _g !== void 0 ? _g : void 0,
            borderDashPhase: (_h = options.borderDashPhase) !== null && _h !== void 0 ? _h : void 0,
            borderLineCap: (_j = options.borderLineCap) !== null && _j !== void 0 ? _j : void 0,
            graphicsState: graphicsStateKey
          }));
        };
        PDFPage2.prototype.drawLine = function(options) {
          var _a, _b, _c, _d, _e;
          utils_1.assertIs(options.start, "options.start", [
            [Object, "{ x: number, y: number }"]
          ]);
          utils_1.assertIs(options.end, "options.end", [
            [Object, "{ x: number, y: number }"]
          ]);
          utils_1.assertIs(options.start.x, "options.start.x", ["number"]);
          utils_1.assertIs(options.start.y, "options.start.y", ["number"]);
          utils_1.assertIs(options.end.x, "options.end.x", ["number"]);
          utils_1.assertIs(options.end.y, "options.end.y", ["number"]);
          utils_1.assertOrUndefined(options.thickness, "options.thickness", ["number"]);
          utils_1.assertOrUndefined(options.color, "options.color", [[Object, "Color"]]);
          utils_1.assertOrUndefined(options.dashArray, "options.dashArray", [Array]);
          utils_1.assertOrUndefined(options.dashPhase, "options.dashPhase", ["number"]);
          utils_1.assertIsOneOfOrUndefined(options.lineCap, "options.lineCap", operators_1.LineCapStyle);
          utils_1.assertRangeOrUndefined(options.opacity, "opacity.opacity", 0, 1);
          utils_1.assertIsOneOfOrUndefined(options.blendMode, "options.blendMode", PDFPageOptions_1.BlendMode);
          var graphicsStateKey = this.maybeEmbedGraphicsState({
            borderOpacity: options.opacity,
            blendMode: options.blendMode
          });
          if (!("color" in options)) {
            options.color = colors_1.rgb(0, 0, 0);
          }
          var contentStream = this.getContentStream();
          contentStream.push.apply(contentStream, operations_1.drawLine({
            start: options.start,
            end: options.end,
            thickness: (_a = options.thickness) !== null && _a !== void 0 ? _a : 1,
            color: (_b = options.color) !== null && _b !== void 0 ? _b : void 0,
            dashArray: (_c = options.dashArray) !== null && _c !== void 0 ? _c : void 0,
            dashPhase: (_d = options.dashPhase) !== null && _d !== void 0 ? _d : void 0,
            lineCap: (_e = options.lineCap) !== null && _e !== void 0 ? _e : void 0,
            graphicsState: graphicsStateKey
          }));
        };
        PDFPage2.prototype.drawRectangle = function(options) {
          var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;
          if (options === void 0) {
            options = {};
          }
          utils_1.assertOrUndefined(options.x, "options.x", ["number"]);
          utils_1.assertOrUndefined(options.y, "options.y", ["number"]);
          utils_1.assertOrUndefined(options.width, "options.width", ["number"]);
          utils_1.assertOrUndefined(options.height, "options.height", ["number"]);
          utils_1.assertOrUndefined(options.rotate, "options.rotate", [[Object, "Rotation"]]);
          utils_1.assertOrUndefined(options.xSkew, "options.xSkew", [[Object, "Rotation"]]);
          utils_1.assertOrUndefined(options.ySkew, "options.ySkew", [[Object, "Rotation"]]);
          utils_1.assertOrUndefined(options.borderWidth, "options.borderWidth", ["number"]);
          utils_1.assertOrUndefined(options.color, "options.color", [[Object, "Color"]]);
          utils_1.assertRangeOrUndefined(options.opacity, "opacity.opacity", 0, 1);
          utils_1.assertOrUndefined(options.borderColor, "options.borderColor", [
            [Object, "Color"]
          ]);
          utils_1.assertOrUndefined(options.borderDashArray, "options.borderDashArray", [
            Array
          ]);
          utils_1.assertOrUndefined(options.borderDashPhase, "options.borderDashPhase", [
            "number"
          ]);
          utils_1.assertIsOneOfOrUndefined(options.borderLineCap, "options.borderLineCap", operators_1.LineCapStyle);
          utils_1.assertRangeOrUndefined(options.borderOpacity, "options.borderOpacity", 0, 1);
          utils_1.assertIsOneOfOrUndefined(options.blendMode, "options.blendMode", PDFPageOptions_1.BlendMode);
          var graphicsStateKey = this.maybeEmbedGraphicsState({
            opacity: options.opacity,
            borderOpacity: options.borderOpacity,
            blendMode: options.blendMode
          });
          if (!("color" in options) && !("borderColor" in options)) {
            options.color = colors_1.rgb(0, 0, 0);
          }
          var contentStream = this.getContentStream();
          contentStream.push.apply(contentStream, operations_1.drawRectangle({
            x: (_a = options.x) !== null && _a !== void 0 ? _a : this.x,
            y: (_b = options.y) !== null && _b !== void 0 ? _b : this.y,
            width: (_c = options.width) !== null && _c !== void 0 ? _c : 150,
            height: (_d = options.height) !== null && _d !== void 0 ? _d : 100,
            rotate: (_e = options.rotate) !== null && _e !== void 0 ? _e : rotations_1.degrees(0),
            xSkew: (_f = options.xSkew) !== null && _f !== void 0 ? _f : rotations_1.degrees(0),
            ySkew: (_g = options.ySkew) !== null && _g !== void 0 ? _g : rotations_1.degrees(0),
            borderWidth: (_h = options.borderWidth) !== null && _h !== void 0 ? _h : 0,
            color: (_j = options.color) !== null && _j !== void 0 ? _j : void 0,
            borderColor: (_k = options.borderColor) !== null && _k !== void 0 ? _k : void 0,
            borderDashArray: (_l = options.borderDashArray) !== null && _l !== void 0 ? _l : void 0,
            borderDashPhase: (_m = options.borderDashPhase) !== null && _m !== void 0 ? _m : void 0,
            graphicsState: graphicsStateKey,
            borderLineCap: (_o = options.borderLineCap) !== null && _o !== void 0 ? _o : void 0
          }));
        };
        PDFPage2.prototype.drawSquare = function(options) {
          if (options === void 0) {
            options = {};
          }
          var size = options.size;
          utils_1.assertOrUndefined(size, "size", ["number"]);
          this.drawRectangle(tslib_1.__assign(tslib_1.__assign({}, options), { width: size, height: size }));
        };
        PDFPage2.prototype.drawEllipse = function(options) {
          var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;
          if (options === void 0) {
            options = {};
          }
          utils_1.assertOrUndefined(options.x, "options.x", ["number"]);
          utils_1.assertOrUndefined(options.y, "options.y", ["number"]);
          utils_1.assertOrUndefined(options.xScale, "options.xScale", ["number"]);
          utils_1.assertOrUndefined(options.yScale, "options.yScale", ["number"]);
          utils_1.assertOrUndefined(options.rotate, "options.rotate", [[Object, "Rotation"]]);
          utils_1.assertOrUndefined(options.color, "options.color", [[Object, "Color"]]);
          utils_1.assertRangeOrUndefined(options.opacity, "opacity.opacity", 0, 1);
          utils_1.assertOrUndefined(options.borderColor, "options.borderColor", [
            [Object, "Color"]
          ]);
          utils_1.assertRangeOrUndefined(options.borderOpacity, "options.borderOpacity", 0, 1);
          utils_1.assertOrUndefined(options.borderWidth, "options.borderWidth", ["number"]);
          utils_1.assertOrUndefined(options.borderDashArray, "options.borderDashArray", [
            Array
          ]);
          utils_1.assertOrUndefined(options.borderDashPhase, "options.borderDashPhase", [
            "number"
          ]);
          utils_1.assertIsOneOfOrUndefined(options.borderLineCap, "options.borderLineCap", operators_1.LineCapStyle);
          utils_1.assertIsOneOfOrUndefined(options.blendMode, "options.blendMode", PDFPageOptions_1.BlendMode);
          var graphicsStateKey = this.maybeEmbedGraphicsState({
            opacity: options.opacity,
            borderOpacity: options.borderOpacity,
            blendMode: options.blendMode
          });
          if (!("color" in options) && !("borderColor" in options)) {
            options.color = colors_1.rgb(0, 0, 0);
          }
          var contentStream = this.getContentStream();
          contentStream.push.apply(contentStream, operations_1.drawEllipse({
            x: (_a = options.x) !== null && _a !== void 0 ? _a : this.x,
            y: (_b = options.y) !== null && _b !== void 0 ? _b : this.y,
            xScale: (_c = options.xScale) !== null && _c !== void 0 ? _c : 100,
            yScale: (_d = options.yScale) !== null && _d !== void 0 ? _d : 100,
            rotate: (_e = options.rotate) !== null && _e !== void 0 ? _e : void 0,
            color: (_f = options.color) !== null && _f !== void 0 ? _f : void 0,
            borderColor: (_g = options.borderColor) !== null && _g !== void 0 ? _g : void 0,
            borderWidth: (_h = options.borderWidth) !== null && _h !== void 0 ? _h : 0,
            borderDashArray: (_j = options.borderDashArray) !== null && _j !== void 0 ? _j : void 0,
            borderDashPhase: (_k = options.borderDashPhase) !== null && _k !== void 0 ? _k : void 0,
            borderLineCap: (_l = options.borderLineCap) !== null && _l !== void 0 ? _l : void 0,
            graphicsState: graphicsStateKey
          }));
        };
        PDFPage2.prototype.drawCircle = function(options) {
          if (options === void 0) {
            options = {};
          }
          var _a = options.size, size = _a === void 0 ? 100 : _a;
          utils_1.assertOrUndefined(size, "size", ["number"]);
          this.drawEllipse(tslib_1.__assign(tslib_1.__assign({}, options), { xScale: size, yScale: size }));
        };
        PDFPage2.prototype.setOrEmbedFont = function(font) {
          var oldFont = this.font;
          var oldFontKey = this.fontKey;
          if (font)
            this.setFont(font);
          else
            this.getFont();
          var newFont = this.font;
          var newFontKey = this.fontKey;
          return { oldFont, oldFontKey, newFont, newFontKey };
        };
        PDFPage2.prototype.getFont = function() {
          if (!this.font || !this.fontKey) {
            var font = this.doc.embedStandardFont(StandardFonts_1.StandardFonts.Helvetica);
            this.setFont(font);
          }
          return [this.font, this.fontKey];
        };
        PDFPage2.prototype.resetFont = function() {
          this.font = void 0;
          this.fontKey = void 0;
        };
        PDFPage2.prototype.getContentStream = function(useExisting) {
          if (useExisting === void 0) {
            useExisting = true;
          }
          if (useExisting && this.contentStream)
            return this.contentStream;
          this.contentStream = this.createContentStream();
          this.contentStreamRef = this.doc.context.register(this.contentStream);
          this.node.addContentStream(this.contentStreamRef);
          return this.contentStream;
        };
        PDFPage2.prototype.createContentStream = function() {
          var operators = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            operators[_i] = arguments[_i];
          }
          var dict = this.doc.context.obj({});
          var contentStream = core_1.PDFContentStream.of(dict, operators);
          return contentStream;
        };
        PDFPage2.prototype.maybeEmbedGraphicsState = function(options) {
          var opacity = options.opacity, borderOpacity = options.borderOpacity, blendMode = options.blendMode;
          if (opacity === void 0 && borderOpacity === void 0 && blendMode === void 0) {
            return void 0;
          }
          var graphicsState = this.doc.context.obj({
            Type: "ExtGState",
            ca: opacity,
            CA: borderOpacity,
            BM: blendMode
          });
          var key = this.node.newExtGState("GS", graphicsState);
          return key;
        };
        PDFPage2.prototype.scaleAnnot = function(annot, x, y) {
          var selectors = ["RD", "CL", "Vertices", "QuadPoints", "L", "Rect"];
          for (var idx = 0, len = selectors.length; idx < len; idx++) {
            var list = annot.lookup(core_1.PDFName.of(selectors[idx]));
            if (list instanceof core_1.PDFArray)
              list.scalePDFNumbers(x, y);
          }
          var inkLists = annot.lookup(core_1.PDFName.of("InkList"));
          if (inkLists instanceof core_1.PDFArray) {
            for (var idx = 0, len = inkLists.size(); idx < len; idx++) {
              var arr = inkLists.lookup(idx);
              if (arr instanceof core_1.PDFArray)
                arr.scalePDFNumbers(x, y);
            }
          }
        };
        PDFPage2.of = function(leafNode, ref, doc) {
          return new PDFPage2(leafNode, ref, doc);
        };
        PDFPage2.create = function(doc) {
          utils_1.assertIs(doc, "doc", [[PDFDocument_1.default, "PDFDocument"]]);
          var dummyRef = core_1.PDFRef.of(-1);
          var pageLeaf = core_1.PDFPageLeaf.withContextAndParent(doc.context, dummyRef);
          var pageRef = doc.context.register(pageLeaf);
          return new PDFPage2(pageLeaf, pageRef, doc);
        };
        return PDFPage2;
      }()
    );
    exports.default = PDFPage;
  }
});

// node_modules/pdf-lib/cjs/api/form/PDFButton.js
var require_PDFButton = __commonJS({
  "node_modules/pdf-lib/cjs/api/form/PDFButton.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var PDFPage_1 = tslib_1.__importDefault(require_PDFPage());
    var PDFFont_1 = tslib_1.__importDefault(require_PDFFont());
    var alignment_1 = require_alignment2();
    var appearances_1 = require_appearances();
    var PDFField_1 = tslib_1.__importStar(require_PDFField());
    var colors_1 = require_colors();
    var rotations_1 = require_rotations();
    var core_1 = require_core();
    var utils_1 = require_utils2();
    var PDFButton = (
      /** @class */
      function(_super) {
        tslib_1.__extends(PDFButton2, _super);
        function PDFButton2(acroPushButton, ref, doc) {
          var _this = _super.call(this, acroPushButton, ref, doc) || this;
          utils_1.assertIs(acroPushButton, "acroButton", [
            [core_1.PDFAcroPushButton, "PDFAcroPushButton"]
          ]);
          _this.acroField = acroPushButton;
          return _this;
        }
        PDFButton2.prototype.setImage = function(image, alignment) {
          if (alignment === void 0) {
            alignment = alignment_1.ImageAlignment.Center;
          }
          var widgets = this.acroField.getWidgets();
          for (var idx = 0, len = widgets.length; idx < len; idx++) {
            var widget = widgets[idx];
            var streamRef = this.createImageAppearanceStream(widget, image, alignment);
            this.updateWidgetAppearances(widget, { normal: streamRef });
          }
          this.markAsClean();
        };
        PDFButton2.prototype.setFontSize = function(fontSize) {
          utils_1.assertPositive(fontSize, "fontSize");
          this.acroField.setFontSize(fontSize);
          this.markAsDirty();
        };
        PDFButton2.prototype.addToPage = function(text, page, options) {
          var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;
          utils_1.assertOrUndefined(text, "text", ["string"]);
          utils_1.assertOrUndefined(page, "page", [[PDFPage_1.default, "PDFPage"]]);
          PDFField_1.assertFieldAppearanceOptions(options);
          var widget = this.createWidget({
            x: ((_a = options === null || options === void 0 ? void 0 : options.x) !== null && _a !== void 0 ? _a : 0) - ((_b = options === null || options === void 0 ? void 0 : options.borderWidth) !== null && _b !== void 0 ? _b : 0) / 2,
            y: ((_c = options === null || options === void 0 ? void 0 : options.y) !== null && _c !== void 0 ? _c : 0) - ((_d = options === null || options === void 0 ? void 0 : options.borderWidth) !== null && _d !== void 0 ? _d : 0) / 2,
            width: (_e = options === null || options === void 0 ? void 0 : options.width) !== null && _e !== void 0 ? _e : 100,
            height: (_f = options === null || options === void 0 ? void 0 : options.height) !== null && _f !== void 0 ? _f : 50,
            textColor: (_g = options === null || options === void 0 ? void 0 : options.textColor) !== null && _g !== void 0 ? _g : colors_1.rgb(0, 0, 0),
            backgroundColor: (_h = options === null || options === void 0 ? void 0 : options.backgroundColor) !== null && _h !== void 0 ? _h : colors_1.rgb(0.75, 0.75, 0.75),
            borderColor: options === null || options === void 0 ? void 0 : options.borderColor,
            borderWidth: (_j = options === null || options === void 0 ? void 0 : options.borderWidth) !== null && _j !== void 0 ? _j : 0,
            rotate: (_k = options === null || options === void 0 ? void 0 : options.rotate) !== null && _k !== void 0 ? _k : rotations_1.degrees(0),
            caption: text,
            hidden: options === null || options === void 0 ? void 0 : options.hidden,
            page: page.ref
          });
          var widgetRef = this.doc.context.register(widget.dict);
          this.acroField.addWidget(widgetRef);
          var font = (_l = options === null || options === void 0 ? void 0 : options.font) !== null && _l !== void 0 ? _l : this.doc.getForm().getDefaultFont();
          this.updateWidgetAppearance(widget, font);
          page.node.addAnnot(widgetRef);
        };
        PDFButton2.prototype.needsAppearancesUpdate = function() {
          var _a;
          if (this.isDirty())
            return true;
          var widgets = this.acroField.getWidgets();
          for (var idx = 0, len = widgets.length; idx < len; idx++) {
            var widget = widgets[idx];
            var hasAppearances = ((_a = widget.getAppearances()) === null || _a === void 0 ? void 0 : _a.normal) instanceof core_1.PDFStream;
            if (!hasAppearances)
              return true;
          }
          return false;
        };
        PDFButton2.prototype.defaultUpdateAppearances = function(font) {
          utils_1.assertIs(font, "font", [[PDFFont_1.default, "PDFFont"]]);
          this.updateAppearances(font);
        };
        PDFButton2.prototype.updateAppearances = function(font, provider) {
          utils_1.assertIs(font, "font", [[PDFFont_1.default, "PDFFont"]]);
          utils_1.assertOrUndefined(provider, "provider", [Function]);
          var widgets = this.acroField.getWidgets();
          for (var idx = 0, len = widgets.length; idx < len; idx++) {
            var widget = widgets[idx];
            this.updateWidgetAppearance(widget, font, provider);
          }
        };
        PDFButton2.prototype.updateWidgetAppearance = function(widget, font, provider) {
          var apProvider = provider !== null && provider !== void 0 ? provider : appearances_1.defaultButtonAppearanceProvider;
          var appearances = appearances_1.normalizeAppearance(apProvider(this, widget, font));
          this.updateWidgetAppearanceWithFont(widget, font, appearances);
        };
        PDFButton2.of = function(acroPushButton, ref, doc) {
          return new PDFButton2(acroPushButton, ref, doc);
        };
        return PDFButton2;
      }(PDFField_1.default)
    );
    exports.default = PDFButton;
  }
});

// node_modules/pdf-lib/cjs/api/form/index.js
var require_form = __commonJS({
  "node_modules/pdf-lib/cjs/api/form/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_appearances(), exports);
    var PDFButton_1 = require_PDFButton();
    Object.defineProperty(exports, "PDFButton", { enumerable: true, get: function() {
      return PDFButton_1.default;
    } });
    var PDFCheckBox_1 = require_PDFCheckBox();
    Object.defineProperty(exports, "PDFCheckBox", { enumerable: true, get: function() {
      return PDFCheckBox_1.default;
    } });
    var PDFDropdown_1 = require_PDFDropdown();
    Object.defineProperty(exports, "PDFDropdown", { enumerable: true, get: function() {
      return PDFDropdown_1.default;
    } });
    var PDFField_1 = require_PDFField();
    Object.defineProperty(exports, "PDFField", { enumerable: true, get: function() {
      return PDFField_1.default;
    } });
    var PDFForm_1 = require_PDFForm();
    Object.defineProperty(exports, "PDFForm", { enumerable: true, get: function() {
      return PDFForm_1.default;
    } });
    var PDFOptionList_1 = require_PDFOptionList();
    Object.defineProperty(exports, "PDFOptionList", { enumerable: true, get: function() {
      return PDFOptionList_1.default;
    } });
    var PDFRadioGroup_1 = require_PDFRadioGroup();
    Object.defineProperty(exports, "PDFRadioGroup", { enumerable: true, get: function() {
      return PDFRadioGroup_1.default;
    } });
    var PDFSignature_1 = require_PDFSignature();
    Object.defineProperty(exports, "PDFSignature", { enumerable: true, get: function() {
      return PDFSignature_1.default;
    } });
    var PDFTextField_1 = require_PDFTextField();
    Object.defineProperty(exports, "PDFTextField", { enumerable: true, get: function() {
      return PDFTextField_1.default;
    } });
  }
});

// node_modules/pdf-lib/cjs/api/text/index.js
var require_text = __commonJS({
  "node_modules/pdf-lib/cjs/api/text/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_alignment(), exports);
    tslib_1.__exportStar(require_layout(), exports);
  }
});

// node_modules/pdf-lib/cjs/api/index.js
var require_api = __commonJS({
  "node_modules/pdf-lib/cjs/api/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_form(), exports);
    tslib_1.__exportStar(require_text(), exports);
    tslib_1.__exportStar(require_colors(), exports);
    tslib_1.__exportStar(require_errors3(), exports);
    tslib_1.__exportStar(require_image(), exports);
    tslib_1.__exportStar(require_objects2(), exports);
    tslib_1.__exportStar(require_operations(), exports);
    tslib_1.__exportStar(require_operators(), exports);
    tslib_1.__exportStar(require_rotations(), exports);
    tslib_1.__exportStar(require_sizes(), exports);
    tslib_1.__exportStar(require_PDFPageOptions(), exports);
    tslib_1.__exportStar(require_PDFDocumentOptions(), exports);
    tslib_1.__exportStar(require_StandardFonts(), exports);
    var PDFDocument_1 = require_PDFDocument();
    Object.defineProperty(exports, "PDFDocument", { enumerable: true, get: function() {
      return PDFDocument_1.default;
    } });
    var PDFFont_1 = require_PDFFont();
    Object.defineProperty(exports, "PDFFont", { enumerable: true, get: function() {
      return PDFFont_1.default;
    } });
    var PDFImage_1 = require_PDFImage();
    Object.defineProperty(exports, "PDFImage", { enumerable: true, get: function() {
      return PDFImage_1.default;
    } });
    var PDFPage_1 = require_PDFPage();
    Object.defineProperty(exports, "PDFPage", { enumerable: true, get: function() {
      return PDFPage_1.default;
    } });
    var PDFEmbeddedPage_1 = require_PDFEmbeddedPage();
    Object.defineProperty(exports, "PDFEmbeddedPage", { enumerable: true, get: function() {
      return PDFEmbeddedPage_1.default;
    } });
    var PDFJavaScript_1 = require_PDFJavaScript();
    Object.defineProperty(exports, "PDFJavaScript", { enumerable: true, get: function() {
      return PDFJavaScript_1.default;
    } });
  }
});

// node_modules/pdf-lib/cjs/types/index.js
var require_types = __commonJS({
  "node_modules/pdf-lib/cjs/types/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/pdf-lib/cjs/index.js
var require_cjs2 = __commonJS({
  "node_modules/pdf-lib/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_api(), exports);
    tslib_1.__exportStar(require_core(), exports);
    tslib_1.__exportStar(require_types(), exports);
    tslib_1.__exportStar(require_utils2(), exports);
  }
});

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => SwiftlatexRenderPlugin
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var import_ts_md5 = __toESM(require_cjs());
var fs = __toESM(require("fs"));
var temp = __toESM(require_temp());
var path = __toESM(require("path"));
var import_PdfTeXEngine = __toESM(require_PdfTeXEngine());
var import_pdf_lib = __toESM(require_cjs2());
var DEFAULT_SETTINGS = {
  package_url: `https://texlive2.swiftlatex.com/`,
  timeout: 1e4,
  enableCache: true,
  cache: [],
  packageCache: [{}, {}, {}, {}]
};
var SwiftlatexRenderPlugin = class extends import_obsidian.Plugin {
  // Key: md5 hash of latex source. Value: Set of file path names.
  async onload() {
    await this.loadSettings();
    if (this.settings.enableCache)
      await this.loadCache();
    this.pluginFolderPath = path.join(this.getVaultPath(), this.app.vault.configDir, "plugins/swiftlatex-render/");
    this.addSettingTab(new SampleSettingTab(this.app, this));
    this.pdfEngine = new import_PdfTeXEngine.PdfTeXEngine();
    await this.pdfEngine.loadEngine();
    await this.loadPackageCache();
    this.pdfEngine.setTexliveEndpoint(this.settings.package_url);
    this.registerMarkdownCodeBlockProcessor("latex", (source, el, ctx) => this.renderLatexToElement(source, el, ctx));
  }
  onunload() {
    if (this.settings.enableCache)
      this.unloadCache();
  }
  async loadSettings() {
    this.settings = Object.assign({}, DEFAULT_SETTINGS, await this.loadData());
  }
  async saveSettings() {
    await this.saveData(this.settings);
  }
  getVaultPath() {
    if (this.app.vault.adapter instanceof import_obsidian.FileSystemAdapter) {
      return this.app.vault.adapter.getBasePath();
    } else {
      throw new Error("SwiftLaTeX: Could not get vault path.");
    }
  }
  async loadCache() {
    const cacheFolderParentPath = path.join(this.getVaultPath(), this.app.vault.configDir, "swiftlatex-render-cache");
    if (!fs.existsSync(cacheFolderParentPath)) {
      fs.mkdirSync(cacheFolderParentPath);
    }
    this.cacheFolderPath = path.join(cacheFolderParentPath, "pdf-cache");
    if (!fs.existsSync(this.cacheFolderPath)) {
      fs.mkdirSync(this.cacheFolderPath);
      this.cache = /* @__PURE__ */ new Map();
    } else {
      this.cache = new Map(this.settings.cache);
      for (const [k, v] of this.cache) {
        this.cache.set(k, new Set(v));
      }
    }
  }
  async loadPackageCache() {
    const cacheFolderParentPath = path.join(this.getVaultPath(), this.app.vault.configDir, "swiftlatex-render-cache");
    if (!fs.existsSync(cacheFolderParentPath)) {
      fs.mkdirSync(cacheFolderParentPath);
    }
    this.packageCacheFolderPath = path.join(cacheFolderParentPath, "package-cache");
    if (!fs.existsSync(this.packageCacheFolderPath)) {
      fs.mkdirSync(this.packageCacheFolderPath);
    }
    console.log("SwiftLaTeX: Loading package cache");
    for (const [key, val] of Object.entries(this.settings.packageCache[1])) {
      const filename = path.basename(val);
      let read_success = false;
      try {
        const srccode = fs.readFileSync(path.join(this.packageCacheFolderPath, filename));
        this.pdfEngine.writeTexFSFile(filename, srccode);
      } catch (e) {
        console.log(`Unable to read file ${filename} from package cache`);
        delete this.settings.packageCache[1][key];
      }
    }
    this.pdfEngine.writeCacheData(
      {},
      this.settings.packageCache[1],
      this.settings.packageCache[2],
      this.settings.packageCache[3]
    );
  }
  unloadCache() {
    fs.rmdirSync(this.cacheFolderPath, { recursive: true });
  }
  formatLatexSource(source) {
    return source;
  }
  hashLatexSource(source) {
    return import_ts_md5.Md5.hashStr(source.trim());
  }
  async pdfToHtml(pdfData) {
    const { width, height } = await this.getPdfDimensions(pdfData);
    const ratio = width / height;
    const pdfblob = new Blob([pdfData], { type: "application/pdf" });
    const objectURL = URL.createObjectURL(pdfblob);
    return {
      attr: {
        data: `${objectURL}#view=FitH&toolbar=0`,
        type: "application/pdf",
        class: "block-lanuage-latex",
        style: `width:100%; aspect-ratio:${ratio}`
      }
    };
  }
  async getPdfDimensions(pdf) {
    const pdfDoc = await import_pdf_lib.PDFDocument.load(pdf);
    const firstPage = pdfDoc.getPages()[0];
    const { width, height } = firstPage.getSize();
    return { width, height };
  }
  async renderLatexToElement(source, el, ctx) {
    return new Promise((resolve, reject) => {
      let md5Hash = this.hashLatexSource(source);
      let pdfPath = path.join(this.cacheFolderPath, `${md5Hash}.pdf`);
      if (this.settings.enableCache && this.cache.has(md5Hash) && fs.existsSync(pdfPath)) {
        let pdfData = fs.readFileSync(pdfPath);
        this.pdfToHtml(pdfData).then((htmlData) => {
          el.createEl("object", htmlData);
          resolve();
        });
        this.addFileToCache(md5Hash, ctx.sourcePath);
        resolve();
      } else {
        this.renderLatexToPDF(source, md5Hash).then(
          (r) => {
            if (this.settings.enableCache)
              this.addFileToCache(md5Hash, ctx.sourcePath);
            this.pdfToHtml(r.pdf).then((htmlData) => {
              el.createEl("object", htmlData);
              resolve();
            });
            fs.writeFileSync(pdfPath, r.pdf);
            resolve();
          }
        ).catch((err) => {
          let errorDiv = el.createEl("div", { text: `${err}`, attr: { class: "block-latex-error" } });
          reject(err);
        });
      }
    }).then(() => {
      this.pdfEngine.flushCache();
      if (this.settings.enableCache)
        setTimeout(() => this.cleanUpCache(), 1e3);
    });
  }
  renderLatexToPDF(source, md5Hash) {
    return new Promise(async (resolve, reject) => {
      source = this.formatLatexSource(source);
      temp.mkdir("obsidian-swiftlatex-renderer", (err, dirPath) => {
        if (err)
          reject(err);
        this.pdfEngine.writeMemFSFile("main.tex", source);
        this.pdfEngine.setEngineMainFile("main.tex");
        this.pdfEngine.compileLaTeX().then((r) => {
          if (r.status != 0) {
            reject(r.log);
          }
          this.fetchPackageCacheData();
          resolve(r);
        });
      });
    });
  }
  fetchPackageCacheData() {
    this.pdfEngine.fetchCacheData().then((r) => {
      for (var i = 0; i < r.length; i++) {
        if (i === 1) {
          const newFileNames = this.getNewPackageFileNames(this.settings.packageCache[i], r[i]);
          this.pdfEngine.fetchTexFiles(newFileNames, this.packageCacheFolderPath);
        }
      }
      this.settings.packageCache = r;
      this.saveSettings().then();
    });
  }
  getNewPackageFileNames(oldCacheData, newCacheData) {
    let newKeys = Object.keys(newCacheData).filter((key) => !(key in oldCacheData));
    let newPackageFiles = newKeys.map((key) => path.basename(newCacheData[key]));
    return newPackageFiles;
  }
  async saveCache() {
    let temp2 = /* @__PURE__ */ new Map();
    for (const [k, v] of this.cache) {
      temp2.set(k, [...v]);
    }
    this.settings.cache = [...temp2];
    await this.saveSettings();
  }
  addFileToCache(hash, file_path) {
    var _a;
    if (!this.cache.has(hash)) {
      this.cache.set(hash, /* @__PURE__ */ new Set());
    }
    (_a = this.cache.get(hash)) == null ? void 0 : _a.add(file_path);
  }
  async cleanUpCache() {
    let file_paths = /* @__PURE__ */ new Set();
    for (const fps of this.cache.values()) {
      for (const fp of fps) {
        file_paths.add(fp);
      }
    }
    for (const file_path of file_paths) {
      let file = this.app.vault.getAbstractFileByPath(file_path);
      if (file == null) {
        this.removeFileFromCache(file_path);
      } else {
        if (file instanceof import_obsidian.TFile) {
          await this.removeUnusedCachesForFile(file);
        }
      }
    }
    await this.saveCache();
  }
  async removeUnusedCachesForFile(file) {
    var _a, _b;
    let hashes_in_file = await this.getLatexHashesFromFile(file);
    let hashes_in_cache = this.getLatexHashesFromCacheForFile(file);
    for (const hash of hashes_in_cache) {
      if (!hashes_in_file.contains(hash)) {
        (_a = this.cache.get(hash)) == null ? void 0 : _a.delete(file.path);
        if (((_b = this.cache.get(hash)) == null ? void 0 : _b.size) == 0) {
          this.removePDFFromCache(hash);
        }
      }
    }
  }
  removePDFFromCache(key) {
    this.cache.delete(key);
    fs.rmSync(path.join(this.cacheFolderPath, `${key}.pdf`));
  }
  removeFileFromCache(file_path) {
    var _a, _b;
    for (const hash of this.cache.keys()) {
      (_a = this.cache.get(hash)) == null ? void 0 : _a.delete(file_path);
      if (((_b = this.cache.get(hash)) == null ? void 0 : _b.size) == 0) {
        this.removePDFFromCache(hash);
      }
    }
  }
  getLatexHashesFromCacheForFile(file) {
    let hashes = [];
    let path2 = file.path;
    for (const [k, v] of this.cache.entries()) {
      if (v.has(path2)) {
        hashes.push(k);
      }
    }
    return hashes;
  }
  async getLatexHashesFromFile(file) {
    var _a;
    let hashes = [];
    let sections = (_a = this.app.metadataCache.getFileCache(file)) == null ? void 0 : _a.sections;
    if (sections != void 0) {
      let lines = (await this.app.vault.read(file)).split("\n");
      for (const section of sections) {
        if (section.type != "code" && lines[section.position.start.line].match("``` *latex") == null)
          continue;
        let source = lines.slice(section.position.start.line + 1, section.position.end.line).join("\n");
        let hash = this.hashLatexSource(source);
        hashes.push(hash);
      }
    }
    return hashes;
  }
};
var SampleSettingTab = class extends import_obsidian.PluginSettingTab {
  constructor(app, plugin) {
    super(app, plugin);
    this.plugin = plugin;
  }
  display() {
    const { containerEl } = this;
    containerEl.empty();
    new import_obsidian.Setting(containerEl).setName("Package Fetching URL").setDesc("default: https://texlive2.swiftlatex.com/, reload required to take effect").addText((text) => text.setValue(this.plugin.settings.package_url.toString()).onChange(async (value) => {
      this.plugin.settings.package_url = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian.Setting(containerEl).setName("Enable caching of PDFs").setDesc("PDFs rendered by this plugin will be kept in {config directory}/swiftlatex-render-cache/pdf-cache, where the config directory is .obsidian by default. The plugin will automatically keep track of used pdfs and remove any that aren't being used").addToggle((toggle) => toggle.setValue(this.plugin.settings.enableCache).onChange(async (value) => {
      this.plugin.settings.enableCache = value;
      await this.plugin.saveSettings();
    }));
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
/*! Bundled license information:

tslib/tslib.es6.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)
*/
